### YamlMime:XRefMap
sorted: true
references:
- uid: TAssetBundle
  name: TAssetBundle
  href: api/TAssetBundle.html
  commentId: N:TAssetBundle
  fullName: TAssetBundle
  nameWithType: TAssetBundle
- uid: TAssetBundle.AssetBundleDownloadInfo
  name: AssetBundleDownloadInfo
  href: api/TAssetBundle.AssetBundleDownloadInfo.html
  commentId: T:TAssetBundle.AssetBundleDownloadInfo
  fullName: TAssetBundle.AssetBundleDownloadInfo
  nameWithType: AssetBundleDownloadInfo
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo
  name: AssetBundleDownloadInfo.DownloadInfo
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html
  commentId: T:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo
  nameWithType: AssetBundleDownloadInfo.DownloadInfo
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.Complete(TAssetBundle.AssetBundleDownloadInfo.EDownloadState)
  name: Complete(EDownloadState)
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_Complete_TAssetBundle_AssetBundleDownloadInfo_EDownloadState_
  commentId: M:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.Complete(TAssetBundle.AssetBundleDownloadInfo.EDownloadState)
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.Complete(TAssetBundle.AssetBundleDownloadInfo.EDownloadState)
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.Complete(AssetBundleDownloadInfo.EDownloadState)
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.Complete*
  name: Complete
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_Complete_
  commentId: Overload:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.Complete
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.Complete
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.Complete
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
  name: IsDownloadComplete
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_IsDownloadComplete
  commentId: P:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete*
  name: IsDownloadComplete
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_IsDownloadComplete_
  commentId: Overload:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.IsDownloadComplete
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.assetBundleInfo
  name: assetBundleInfo
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_assetBundleInfo
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.assetBundleInfo
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.assetBundleInfo
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.assetBundleInfo
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.downloadedSize
  name: downloadedSize
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_downloadedSize
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.downloadedSize
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.downloadedSize
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.downloadedSize
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.requestAsync
  name: requestAsync
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_requestAsync
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.requestAsync
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.requestAsync
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.requestAsync
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.state
  name: state
  href: api/TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadInfo_state
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.state
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadInfo.state
  nameWithType: AssetBundleDownloadInfo.DownloadInfo.state
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadedSize
  name: DownloadedSize
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadedSize
  commentId: P:TAssetBundle.AssetBundleDownloadInfo.DownloadedSize
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadedSize
  nameWithType: AssetBundleDownloadInfo.DownloadedSize
- uid: TAssetBundle.AssetBundleDownloadInfo.DownloadedSize*
  name: DownloadedSize
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_DownloadedSize_
  commentId: Overload:TAssetBundle.AssetBundleDownloadInfo.DownloadedSize
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleDownloadInfo.DownloadedSize
  nameWithType: AssetBundleDownloadInfo.DownloadedSize
- uid: TAssetBundle.AssetBundleDownloadInfo.EDownloadState
  name: AssetBundleDownloadInfo.EDownloadState
  href: api/TAssetBundle.AssetBundleDownloadInfo.EDownloadState.html
  commentId: T:TAssetBundle.AssetBundleDownloadInfo.EDownloadState
  fullName: TAssetBundle.AssetBundleDownloadInfo.EDownloadState
  nameWithType: AssetBundleDownloadInfo.EDownloadState
- uid: TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Failed
  name: Failed
  href: api/TAssetBundle.AssetBundleDownloadInfo.EDownloadState.html#TAssetBundle_AssetBundleDownloadInfo_EDownloadState_Failed
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Failed
  fullName: TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Failed
  nameWithType: AssetBundleDownloadInfo.EDownloadState.Failed
- uid: TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Progress
  name: Progress
  href: api/TAssetBundle.AssetBundleDownloadInfo.EDownloadState.html#TAssetBundle_AssetBundleDownloadInfo_EDownloadState_Progress
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Progress
  fullName: TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Progress
  nameWithType: AssetBundleDownloadInfo.EDownloadState.Progress
- uid: TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Success
  name: Success
  href: api/TAssetBundle.AssetBundleDownloadInfo.EDownloadState.html#TAssetBundle_AssetBundleDownloadInfo_EDownloadState_Success
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Success
  fullName: TAssetBundle.AssetBundleDownloadInfo.EDownloadState.Success
  nameWithType: AssetBundleDownloadInfo.EDownloadState.Success
- uid: TAssetBundle.AssetBundleDownloadInfo.IsDownloadComplete
  name: IsDownloadComplete()
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_IsDownloadComplete
  commentId: M:TAssetBundle.AssetBundleDownloadInfo.IsDownloadComplete
  fullName: TAssetBundle.AssetBundleDownloadInfo.IsDownloadComplete()
  nameWithType: AssetBundleDownloadInfo.IsDownloadComplete()
- uid: TAssetBundle.AssetBundleDownloadInfo.IsDownloadComplete*
  name: IsDownloadComplete
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_IsDownloadComplete_
  commentId: Overload:TAssetBundle.AssetBundleDownloadInfo.IsDownloadComplete
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleDownloadInfo.IsDownloadComplete
  nameWithType: AssetBundleDownloadInfo.IsDownloadComplete
- uid: TAssetBundle.AssetBundleDownloadInfo.TotalDownloadSize
  name: TotalDownloadSize
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_TotalDownloadSize
  commentId: P:TAssetBundle.AssetBundleDownloadInfo.TotalDownloadSize
  fullName: TAssetBundle.AssetBundleDownloadInfo.TotalDownloadSize
  nameWithType: AssetBundleDownloadInfo.TotalDownloadSize
- uid: TAssetBundle.AssetBundleDownloadInfo.TotalDownloadSize*
  name: TotalDownloadSize
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_TotalDownloadSize_
  commentId: Overload:TAssetBundle.AssetBundleDownloadInfo.TotalDownloadSize
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleDownloadInfo.TotalDownloadSize
  nameWithType: AssetBundleDownloadInfo.TotalDownloadSize
- uid: TAssetBundle.AssetBundleDownloadInfo.downloads
  name: downloads
  href: api/TAssetBundle.AssetBundleDownloadInfo.html#TAssetBundle_AssetBundleDownloadInfo_downloads
  commentId: F:TAssetBundle.AssetBundleDownloadInfo.downloads
  fullName: TAssetBundle.AssetBundleDownloadInfo.downloads
  nameWithType: AssetBundleDownloadInfo.downloads
- uid: TAssetBundle.AssetBundleInfo
  name: AssetBundleInfo
  href: api/TAssetBundle.AssetBundleInfo.html
  commentId: T:TAssetBundle.AssetBundleInfo
  fullName: TAssetBundle.AssetBundleInfo
  nameWithType: AssetBundleInfo
- uid: TAssetBundle.AssetBundleInfo.GetFileName(System.Boolean)
  name: GetFileName(bool)
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_GetFileName_System_Boolean_
  commentId: M:TAssetBundle.AssetBundleInfo.GetFileName(System.Boolean)
  name.vb: GetFileName(Boolean)
  fullName: TAssetBundle.AssetBundleInfo.GetFileName(bool)
  fullName.vb: TAssetBundle.AssetBundleInfo.GetFileName(Boolean)
  nameWithType: AssetBundleInfo.GetFileName(bool)
  nameWithType.vb: AssetBundleInfo.GetFileName(Boolean)
- uid: TAssetBundle.AssetBundleInfo.GetFileName*
  name: GetFileName
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_GetFileName_
  commentId: Overload:TAssetBundle.AssetBundleInfo.GetFileName
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleInfo.GetFileName
  nameWithType: AssetBundleInfo.GetFileName
- uid: TAssetBundle.AssetBundleInfo.ToString
  name: ToString()
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_ToString
  commentId: M:TAssetBundle.AssetBundleInfo.ToString
  fullName: TAssetBundle.AssetBundleInfo.ToString()
  nameWithType: AssetBundleInfo.ToString()
- uid: TAssetBundle.AssetBundleInfo.ToString*
  name: ToString
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_ToString_
  commentId: Overload:TAssetBundle.AssetBundleInfo.ToString
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleInfo.ToString
  nameWithType: AssetBundleInfo.ToString
- uid: TAssetBundle.AssetBundleInfo.assetBundleName
  name: assetBundleName
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_assetBundleName
  commentId: F:TAssetBundle.AssetBundleInfo.assetBundleName
  fullName: TAssetBundle.AssetBundleInfo.assetBundleName
  nameWithType: AssetBundleInfo.assetBundleName
- uid: TAssetBundle.AssetBundleInfo.assetPaths
  name: assetPaths
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_assetPaths
  commentId: F:TAssetBundle.AssetBundleInfo.assetPaths
  fullName: TAssetBundle.AssetBundleInfo.assetPaths
  nameWithType: AssetBundleInfo.assetPaths
- uid: TAssetBundle.AssetBundleInfo.builtin
  name: builtin
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_builtin
  commentId: F:TAssetBundle.AssetBundleInfo.builtin
  fullName: TAssetBundle.AssetBundleInfo.builtin
  nameWithType: AssetBundleInfo.builtin
- uid: TAssetBundle.AssetBundleInfo.dependencies
  name: dependencies
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_dependencies
  commentId: F:TAssetBundle.AssetBundleInfo.dependencies
  fullName: TAssetBundle.AssetBundleInfo.dependencies
  nameWithType: AssetBundleInfo.dependencies
- uid: TAssetBundle.AssetBundleInfo.encrypt
  name: encrypt
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_encrypt
  commentId: F:TAssetBundle.AssetBundleInfo.encrypt
  fullName: TAssetBundle.AssetBundleInfo.encrypt
  nameWithType: AssetBundleInfo.encrypt
- uid: TAssetBundle.AssetBundleInfo.hashString
  name: hashString
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_hashString
  commentId: F:TAssetBundle.AssetBundleInfo.hashString
  fullName: TAssetBundle.AssetBundleInfo.hashString
  nameWithType: AssetBundleInfo.hashString
- uid: TAssetBundle.AssetBundleInfo.scenePaths
  name: scenePaths
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_scenePaths
  commentId: F:TAssetBundle.AssetBundleInfo.scenePaths
  fullName: TAssetBundle.AssetBundleInfo.scenePaths
  nameWithType: AssetBundleInfo.scenePaths
- uid: TAssetBundle.AssetBundleInfo.size
  name: size
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_size
  commentId: F:TAssetBundle.AssetBundleInfo.size
  fullName: TAssetBundle.AssetBundleInfo.size
  nameWithType: AssetBundleInfo.size
- uid: TAssetBundle.AssetBundleInfo.tags
  name: tags
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_tags
  commentId: F:TAssetBundle.AssetBundleInfo.tags
  fullName: TAssetBundle.AssetBundleInfo.tags
  nameWithType: AssetBundleInfo.tags
- uid: TAssetBundle.AssetBundleInfo.uncompressed
  name: uncompressed
  href: api/TAssetBundle.AssetBundleInfo.html#TAssetBundle_AssetBundleInfo_uncompressed
  commentId: F:TAssetBundle.AssetBundleInfo.uncompressed
  fullName: TAssetBundle.AssetBundleInfo.uncompressed
  nameWithType: AssetBundleInfo.uncompressed
- uid: TAssetBundle.AssetBundleRuntimeInfo
  name: AssetBundleRuntimeInfo
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html
  commentId: T:TAssetBundle.AssetBundleRuntimeInfo
  fullName: TAssetBundle.AssetBundleRuntimeInfo
  nameWithType: AssetBundleRuntimeInfo
- uid: TAssetBundle.AssetBundleRuntimeInfo.#ctor(TAssetBundle.IAssetCatalogInfo,TAssetBundle.AssetBundleInfo)
  name: AssetBundleRuntimeInfo(IAssetCatalogInfo, AssetBundleInfo)
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo__ctor_TAssetBundle_IAssetCatalogInfo_TAssetBundle_AssetBundleInfo_
  commentId: M:TAssetBundle.AssetBundleRuntimeInfo.#ctor(TAssetBundle.IAssetCatalogInfo,TAssetBundle.AssetBundleInfo)
  name.vb: New(IAssetCatalogInfo, AssetBundleInfo)
  fullName: TAssetBundle.AssetBundleRuntimeInfo.AssetBundleRuntimeInfo(TAssetBundle.IAssetCatalogInfo, TAssetBundle.AssetBundleInfo)
  fullName.vb: TAssetBundle.AssetBundleRuntimeInfo.New(TAssetBundle.IAssetCatalogInfo, TAssetBundle.AssetBundleInfo)
  nameWithType: AssetBundleRuntimeInfo.AssetBundleRuntimeInfo(IAssetCatalogInfo, AssetBundleInfo)
  nameWithType.vb: AssetBundleRuntimeInfo.New(IAssetCatalogInfo, AssetBundleInfo)
- uid: TAssetBundle.AssetBundleRuntimeInfo.#ctor*
  name: AssetBundleRuntimeInfo
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo__ctor_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TAssetBundle.AssetBundleRuntimeInfo.AssetBundleRuntimeInfo
  fullName.vb: TAssetBundle.AssetBundleRuntimeInfo.New
  nameWithType: AssetBundleRuntimeInfo.AssetBundleRuntimeInfo
  nameWithType.vb: AssetBundleRuntimeInfo.New
- uid: TAssetBundle.AssetBundleRuntimeInfo.AssetBundleName
  name: AssetBundleName
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_AssetBundleName
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.AssetBundleName
  fullName: TAssetBundle.AssetBundleRuntimeInfo.AssetBundleName
  nameWithType: AssetBundleRuntimeInfo.AssetBundleName
- uid: TAssetBundle.AssetBundleRuntimeInfo.AssetBundleName*
  name: AssetBundleName
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_AssetBundleName_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.AssetBundleName
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.AssetBundleName
  nameWithType: AssetBundleRuntimeInfo.AssetBundleName
- uid: TAssetBundle.AssetBundleRuntimeInfo.AssetPaths
  name: AssetPaths
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_AssetPaths
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.AssetPaths
  fullName: TAssetBundle.AssetBundleRuntimeInfo.AssetPaths
  nameWithType: AssetBundleRuntimeInfo.AssetPaths
- uid: TAssetBundle.AssetBundleRuntimeInfo.AssetPaths*
  name: AssetPaths
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_AssetPaths_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.AssetPaths
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.AssetPaths
  nameWithType: AssetBundleRuntimeInfo.AssetPaths
- uid: TAssetBundle.AssetBundleRuntimeInfo.Builtin
  name: Builtin
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Builtin
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Builtin
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Builtin
  nameWithType: AssetBundleRuntimeInfo.Builtin
- uid: TAssetBundle.AssetBundleRuntimeInfo.Builtin*
  name: Builtin
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Builtin_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Builtin
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Builtin
  nameWithType: AssetBundleRuntimeInfo.Builtin
- uid: TAssetBundle.AssetBundleRuntimeInfo.Catalog
  name: Catalog
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Catalog
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Catalog
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Catalog
  nameWithType: AssetBundleRuntimeInfo.Catalog
- uid: TAssetBundle.AssetBundleRuntimeInfo.Catalog*
  name: Catalog
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Catalog_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Catalog
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Catalog
  nameWithType: AssetBundleRuntimeInfo.Catalog
- uid: TAssetBundle.AssetBundleRuntimeInfo.Dependencies
  name: Dependencies
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Dependencies
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Dependencies
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Dependencies
  nameWithType: AssetBundleRuntimeInfo.Dependencies
- uid: TAssetBundle.AssetBundleRuntimeInfo.Dependencies*
  name: Dependencies
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Dependencies_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Dependencies
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Dependencies
  nameWithType: AssetBundleRuntimeInfo.Dependencies
- uid: TAssetBundle.AssetBundleRuntimeInfo.Encrypt
  name: Encrypt
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Encrypt
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Encrypt
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Encrypt
  nameWithType: AssetBundleRuntimeInfo.Encrypt
- uid: TAssetBundle.AssetBundleRuntimeInfo.Encrypt*
  name: Encrypt
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Encrypt_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Encrypt
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Encrypt
  nameWithType: AssetBundleRuntimeInfo.Encrypt
- uid: TAssetBundle.AssetBundleRuntimeInfo.GetName(System.Boolean)
  name: GetName(bool)
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_GetName_System_Boolean_
  commentId: M:TAssetBundle.AssetBundleRuntimeInfo.GetName(System.Boolean)
  name.vb: GetName(Boolean)
  fullName: TAssetBundle.AssetBundleRuntimeInfo.GetName(bool)
  fullName.vb: TAssetBundle.AssetBundleRuntimeInfo.GetName(Boolean)
  nameWithType: AssetBundleRuntimeInfo.GetName(bool)
  nameWithType.vb: AssetBundleRuntimeInfo.GetName(Boolean)
- uid: TAssetBundle.AssetBundleRuntimeInfo.GetName*
  name: GetName
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_GetName_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.GetName
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.GetName
  nameWithType: AssetBundleRuntimeInfo.GetName
- uid: TAssetBundle.AssetBundleRuntimeInfo.GetNameWithTags
  name: GetNameWithTags()
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_GetNameWithTags
  commentId: M:TAssetBundle.AssetBundleRuntimeInfo.GetNameWithTags
  fullName: TAssetBundle.AssetBundleRuntimeInfo.GetNameWithTags()
  nameWithType: AssetBundleRuntimeInfo.GetNameWithTags()
- uid: TAssetBundle.AssetBundleRuntimeInfo.GetNameWithTags*
  name: GetNameWithTags
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_GetNameWithTags_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.GetNameWithTags
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.GetNameWithTags
  nameWithType: AssetBundleRuntimeInfo.GetNameWithTags
- uid: TAssetBundle.AssetBundleRuntimeInfo.Hash
  name: Hash
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Hash
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Hash
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Hash
  nameWithType: AssetBundleRuntimeInfo.Hash
- uid: TAssetBundle.AssetBundleRuntimeInfo.Hash*
  name: Hash
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Hash_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Hash
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Hash
  nameWithType: AssetBundleRuntimeInfo.Hash
- uid: TAssetBundle.AssetBundleRuntimeInfo.HashString
  name: HashString
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_HashString
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.HashString
  fullName: TAssetBundle.AssetBundleRuntimeInfo.HashString
  nameWithType: AssetBundleRuntimeInfo.HashString
- uid: TAssetBundle.AssetBundleRuntimeInfo.HashString*
  name: HashString
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_HashString_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.HashString
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.HashString
  nameWithType: AssetBundleRuntimeInfo.HashString
- uid: TAssetBundle.AssetBundleRuntimeInfo.ScenePaths
  name: ScenePaths
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_ScenePaths
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.ScenePaths
  fullName: TAssetBundle.AssetBundleRuntimeInfo.ScenePaths
  nameWithType: AssetBundleRuntimeInfo.ScenePaths
- uid: TAssetBundle.AssetBundleRuntimeInfo.ScenePaths*
  name: ScenePaths
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_ScenePaths_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.ScenePaths
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.ScenePaths
  nameWithType: AssetBundleRuntimeInfo.ScenePaths
- uid: TAssetBundle.AssetBundleRuntimeInfo.Size
  name: Size
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Size
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Size
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Size
  nameWithType: AssetBundleRuntimeInfo.Size
- uid: TAssetBundle.AssetBundleRuntimeInfo.Size*
  name: Size
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Size_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Size
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Size
  nameWithType: AssetBundleRuntimeInfo.Size
- uid: TAssetBundle.AssetBundleRuntimeInfo.Tags
  name: Tags
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Tags
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Tags
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Tags
  nameWithType: AssetBundleRuntimeInfo.Tags
- uid: TAssetBundle.AssetBundleRuntimeInfo.Tags*
  name: Tags
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Tags_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Tags
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Tags
  nameWithType: AssetBundleRuntimeInfo.Tags
- uid: TAssetBundle.AssetBundleRuntimeInfo.Uncompressed
  name: Uncompressed
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Uncompressed
  commentId: P:TAssetBundle.AssetBundleRuntimeInfo.Uncompressed
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Uncompressed
  nameWithType: AssetBundleRuntimeInfo.Uncompressed
- uid: TAssetBundle.AssetBundleRuntimeInfo.Uncompressed*
  name: Uncompressed
  href: api/TAssetBundle.AssetBundleRuntimeInfo.html#TAssetBundle_AssetBundleRuntimeInfo_Uncompressed_
  commentId: Overload:TAssetBundle.AssetBundleRuntimeInfo.Uncompressed
  isSpec: "True"
  fullName: TAssetBundle.AssetBundleRuntimeInfo.Uncompressed
  nameWithType: AssetBundleRuntimeInfo.Uncompressed
- uid: TAssetBundle.AssetCatalog
  name: AssetCatalog
  href: api/TAssetBundle.AssetCatalog.html
  commentId: T:TAssetBundle.AssetCatalog
  fullName: TAssetBundle.AssetCatalog
  nameWithType: AssetCatalog
- uid: TAssetBundle.AssetCatalog.FindAssetBundle(System.String)
  name: FindAssetBundle(string)
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_FindAssetBundle_System_String_
  commentId: M:TAssetBundle.AssetCatalog.FindAssetBundle(System.String)
  name.vb: FindAssetBundle(String)
  fullName: TAssetBundle.AssetCatalog.FindAssetBundle(string)
  fullName.vb: TAssetBundle.AssetCatalog.FindAssetBundle(String)
  nameWithType: AssetCatalog.FindAssetBundle(string)
  nameWithType.vb: AssetCatalog.FindAssetBundle(String)
- uid: TAssetBundle.AssetCatalog.FindAssetBundle*
  name: FindAssetBundle
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_FindAssetBundle_
  commentId: Overload:TAssetBundle.AssetCatalog.FindAssetBundle
  isSpec: "True"
  fullName: TAssetBundle.AssetCatalog.FindAssetBundle
  nameWithType: AssetCatalog.FindAssetBundle
- uid: TAssetBundle.AssetCatalog.IsRemote
  name: IsRemote
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_IsRemote
  commentId: P:TAssetBundle.AssetCatalog.IsRemote
  fullName: TAssetBundle.AssetCatalog.IsRemote
  nameWithType: AssetCatalog.IsRemote
- uid: TAssetBundle.AssetCatalog.IsRemote*
  name: IsRemote
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_IsRemote_
  commentId: Overload:TAssetBundle.AssetCatalog.IsRemote
  isSpec: "True"
  fullName: TAssetBundle.AssetCatalog.IsRemote
  nameWithType: AssetCatalog.IsRemote
- uid: TAssetBundle.AssetCatalog.MD5Hash
  name: MD5Hash
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_MD5Hash
  commentId: P:TAssetBundle.AssetCatalog.MD5Hash
  fullName: TAssetBundle.AssetCatalog.MD5Hash
  nameWithType: AssetCatalog.MD5Hash
- uid: TAssetBundle.AssetCatalog.MD5Hash*
  name: MD5Hash
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_MD5Hash_
  commentId: Overload:TAssetBundle.AssetCatalog.MD5Hash
  isSpec: "True"
  fullName: TAssetBundle.AssetCatalog.MD5Hash
  nameWithType: AssetCatalog.MD5Hash
- uid: TAssetBundle.AssetCatalog.ToString
  name: ToString()
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_ToString
  commentId: M:TAssetBundle.AssetCatalog.ToString
  fullName: TAssetBundle.AssetCatalog.ToString()
  nameWithType: AssetCatalog.ToString()
- uid: TAssetBundle.AssetCatalog.ToString*
  name: ToString
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_ToString_
  commentId: Overload:TAssetBundle.AssetCatalog.ToString
  isSpec: "True"
  fullName: TAssetBundle.AssetCatalog.ToString
  nameWithType: AssetCatalog.ToString
- uid: TAssetBundle.AssetCatalog.assetBundleInfos
  name: assetBundleInfos
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_assetBundleInfos
  commentId: F:TAssetBundle.AssetCatalog.assetBundleInfos
  fullName: TAssetBundle.AssetCatalog.assetBundleInfos
  nameWithType: AssetCatalog.assetBundleInfos
- uid: TAssetBundle.AssetCatalog.buildNumber
  name: buildNumber
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_buildNumber
  commentId: F:TAssetBundle.AssetCatalog.buildNumber
  fullName: TAssetBundle.AssetCatalog.buildNumber
  nameWithType: AssetCatalog.buildNumber
- uid: TAssetBundle.AssetCatalog.bundleVersion
  name: bundleVersion
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_bundleVersion
  commentId: F:TAssetBundle.AssetCatalog.bundleVersion
  fullName: TAssetBundle.AssetCatalog.bundleVersion
  nameWithType: AssetCatalog.bundleVersion
- uid: TAssetBundle.AssetCatalog.catalogVersion
  name: catalogVersion
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_catalogVersion
  commentId: F:TAssetBundle.AssetCatalog.catalogVersion
  fullName: TAssetBundle.AssetCatalog.catalogVersion
  nameWithType: AssetCatalog.catalogVersion
- uid: TAssetBundle.AssetCatalog.version
  name: version
  href: api/TAssetBundle.AssetCatalog.html#TAssetBundle_AssetCatalog_version
  commentId: F:TAssetBundle.AssetCatalog.version
  fullName: TAssetBundle.AssetCatalog.version
  nameWithType: AssetCatalog.version
- uid: TAssetBundle.AssetHandle
  name: AssetHandle
  href: api/TAssetBundle.AssetHandle.html
  commentId: T:TAssetBundle.AssetHandle
  fullName: TAssetBundle.AssetHandle
  nameWithType: AssetHandle
- uid: TAssetBundle.AssetHandle.Info
  name: Info
  href: api/TAssetBundle.AssetHandle.html#TAssetBundle_AssetHandle_Info
  commentId: P:TAssetBundle.AssetHandle.Info
  fullName: TAssetBundle.AssetHandle.Info
  nameWithType: AssetHandle.Info
- uid: TAssetBundle.AssetHandle.Info*
  name: Info
  href: api/TAssetBundle.AssetHandle.html#TAssetBundle_AssetHandle_Info_
  commentId: Overload:TAssetBundle.AssetHandle.Info
  isSpec: "True"
  fullName: TAssetBundle.AssetHandle.Info
  nameWithType: AssetHandle.Info
- uid: TAssetBundle.AssetHandle.IsValid
  name: IsValid
  href: api/TAssetBundle.AssetHandle.html#TAssetBundle_AssetHandle_IsValid
  commentId: P:TAssetBundle.AssetHandle.IsValid
  fullName: TAssetBundle.AssetHandle.IsValid
  nameWithType: AssetHandle.IsValid
- uid: TAssetBundle.AssetHandle.IsValid*
  name: IsValid
  href: api/TAssetBundle.AssetHandle.html#TAssetBundle_AssetHandle_IsValid_
  commentId: Overload:TAssetBundle.AssetHandle.IsValid
  isSpec: "True"
  fullName: TAssetBundle.AssetHandle.IsValid
  nameWithType: AssetHandle.IsValid
- uid: TAssetBundle.AssetHandle.None
  name: None
  href: api/TAssetBundle.AssetHandle.html#TAssetBundle_AssetHandle_None
  commentId: F:TAssetBundle.AssetHandle.None
  fullName: TAssetBundle.AssetHandle.None
  nameWithType: AssetHandle.None
- uid: TAssetBundle.AssetHandle`1
  name: AssetHandle<T>
  href: api/TAssetBundle.AssetHandle-1.html
  commentId: T:TAssetBundle.AssetHandle`1
  name.vb: AssetHandle(Of T)
  fullName: TAssetBundle.AssetHandle<T>
  fullName.vb: TAssetBundle.AssetHandle(Of T)
  nameWithType: AssetHandle<T>
  nameWithType.vb: AssetHandle(Of T)
- uid: TAssetBundle.AssetHandle`1.Get
  name: Get()
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_Get
  commentId: M:TAssetBundle.AssetHandle`1.Get
  fullName: TAssetBundle.AssetHandle<T>.Get()
  fullName.vb: TAssetBundle.AssetHandle(Of T).Get()
  nameWithType: AssetHandle<T>.Get()
  nameWithType.vb: AssetHandle(Of T).Get()
- uid: TAssetBundle.AssetHandle`1.Get*
  name: Get
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_Get_
  commentId: Overload:TAssetBundle.AssetHandle`1.Get
  isSpec: "True"
  fullName: TAssetBundle.AssetHandle<T>.Get
  fullName.vb: TAssetBundle.AssetHandle(Of T).Get
  nameWithType: AssetHandle<T>.Get
  nameWithType.vb: AssetHandle(Of T).Get
- uid: TAssetBundle.AssetHandle`1.Info
  name: Info
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_Info
  commentId: P:TAssetBundle.AssetHandle`1.Info
  fullName: TAssetBundle.AssetHandle<T>.Info
  fullName.vb: TAssetBundle.AssetHandle(Of T).Info
  nameWithType: AssetHandle<T>.Info
  nameWithType.vb: AssetHandle(Of T).Info
- uid: TAssetBundle.AssetHandle`1.Info*
  name: Info
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_Info_
  commentId: Overload:TAssetBundle.AssetHandle`1.Info
  isSpec: "True"
  fullName: TAssetBundle.AssetHandle<T>.Info
  fullName.vb: TAssetBundle.AssetHandle(Of T).Info
  nameWithType: AssetHandle<T>.Info
  nameWithType.vb: AssetHandle(Of T).Info
- uid: TAssetBundle.AssetHandle`1.IsValid
  name: IsValid
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_IsValid
  commentId: P:TAssetBundle.AssetHandle`1.IsValid
  fullName: TAssetBundle.AssetHandle<T>.IsValid
  fullName.vb: TAssetBundle.AssetHandle(Of T).IsValid
  nameWithType: AssetHandle<T>.IsValid
  nameWithType.vb: AssetHandle(Of T).IsValid
- uid: TAssetBundle.AssetHandle`1.IsValid*
  name: IsValid
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_IsValid_
  commentId: Overload:TAssetBundle.AssetHandle`1.IsValid
  isSpec: "True"
  fullName: TAssetBundle.AssetHandle<T>.IsValid
  fullName.vb: TAssetBundle.AssetHandle(Of T).IsValid
  nameWithType: AssetHandle<T>.IsValid
  nameWithType.vb: AssetHandle(Of T).IsValid
- uid: TAssetBundle.AssetHandle`1.None
  name: None
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_None
  commentId: F:TAssetBundle.AssetHandle`1.None
  fullName: TAssetBundle.AssetHandle<T>.None
  fullName.vb: TAssetBundle.AssetHandle(Of T).None
  nameWithType: AssetHandle<T>.None
  nameWithType.vb: AssetHandle(Of T).None
- uid: TAssetBundle.AssetHandle`1.op_Implicit(TAssetBundle.AssetHandle{`0})~TAssetBundle.AssetHandle
  name: implicit operator AssetHandle(AssetHandle<T>)
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_op_Implicit_TAssetBundle_AssetHandle__0___TAssetBundle_AssetHandle
  commentId: M:TAssetBundle.AssetHandle`1.op_Implicit(TAssetBundle.AssetHandle{`0})~TAssetBundle.AssetHandle
  name.vb: CType(AssetHandle(Of T))
  fullName: TAssetBundle.AssetHandle<T>.implicit operator TAssetBundle.AssetHandle(TAssetBundle.AssetHandle<T>)
  fullName.vb: TAssetBundle.AssetHandle(Of T).CType(TAssetBundle.AssetHandle(Of T))
  nameWithType: AssetHandle<T>.implicit operator AssetHandle(AssetHandle<T>)
  nameWithType.vb: AssetHandle(Of T).CType(AssetHandle(Of T))
- uid: TAssetBundle.AssetHandle`1.op_Implicit*
  name: implicit operator
  href: api/TAssetBundle.AssetHandle-1.html#TAssetBundle_AssetHandle_1_op_Implicit_
  commentId: Overload:TAssetBundle.AssetHandle`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: TAssetBundle.AssetHandle<T>.implicit operator
  fullName.vb: TAssetBundle.AssetHandle(Of T).CType
  nameWithType: AssetHandle<T>.implicit operator
  nameWithType.vb: AssetHandle(Of T).CType
- uid: TAssetBundle.AssetManager
  name: AssetManager
  href: api/TAssetBundle.AssetManager.html
  commentId: T:TAssetBundle.AssetManager
  fullName: TAssetBundle.AssetManager
  nameWithType: AssetManager
- uid: TAssetBundle.AssetManager.CheckCatalogUpdateAsync
  name: CheckCatalogUpdateAsync()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_CheckCatalogUpdateAsync
  commentId: M:TAssetBundle.AssetManager.CheckCatalogUpdateAsync
  fullName: TAssetBundle.AssetManager.CheckCatalogUpdateAsync()
  nameWithType: AssetManager.CheckCatalogUpdateAsync()
- uid: TAssetBundle.AssetManager.CheckCatalogUpdateAsync(System.String)
  name: CheckCatalogUpdateAsync(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_CheckCatalogUpdateAsync_System_String_
  commentId: M:TAssetBundle.AssetManager.CheckCatalogUpdateAsync(System.String)
  name.vb: CheckCatalogUpdateAsync(String)
  fullName: TAssetBundle.AssetManager.CheckCatalogUpdateAsync(string)
  fullName.vb: TAssetBundle.AssetManager.CheckCatalogUpdateAsync(String)
  nameWithType: AssetManager.CheckCatalogUpdateAsync(string)
  nameWithType.vb: AssetManager.CheckCatalogUpdateAsync(String)
- uid: TAssetBundle.AssetManager.CheckCatalogUpdateAsync*
  name: CheckCatalogUpdateAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_CheckCatalogUpdateAsync_
  commentId: Overload:TAssetBundle.AssetManager.CheckCatalogUpdateAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.CheckCatalogUpdateAsync
  nameWithType: AssetManager.CheckCatalogUpdateAsync
- uid: TAssetBundle.AssetManager.DownloadAsync
  name: DownloadAsync()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadAsync
  commentId: M:TAssetBundle.AssetManager.DownloadAsync
  fullName: TAssetBundle.AssetManager.DownloadAsync()
  nameWithType: AssetManager.DownloadAsync()
- uid: TAssetBundle.AssetManager.DownloadAsync(System.String)
  name: DownloadAsync(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadAsync_System_String_
  commentId: M:TAssetBundle.AssetManager.DownloadAsync(System.String)
  name.vb: DownloadAsync(String)
  fullName: TAssetBundle.AssetManager.DownloadAsync(string)
  fullName.vb: TAssetBundle.AssetManager.DownloadAsync(String)
  nameWithType: AssetManager.DownloadAsync(string)
  nameWithType.vb: AssetManager.DownloadAsync(String)
- uid: TAssetBundle.AssetManager.DownloadAsync*
  name: DownloadAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadAsync_
  commentId: Overload:TAssetBundle.AssetManager.DownloadAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.DownloadAsync
  nameWithType: AssetManager.DownloadAsync
- uid: TAssetBundle.AssetManager.DownloadByAssetsAsync(System.String[])
  name: DownloadByAssetsAsync(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByAssetsAsync_System_String___
  commentId: M:TAssetBundle.AssetManager.DownloadByAssetsAsync(System.String[])
  name.vb: DownloadByAssetsAsync(String())
  fullName: TAssetBundle.AssetManager.DownloadByAssetsAsync(string[])
  fullName.vb: TAssetBundle.AssetManager.DownloadByAssetsAsync(String())
  nameWithType: AssetManager.DownloadByAssetsAsync(string[])
  nameWithType.vb: AssetManager.DownloadByAssetsAsync(String())
- uid: TAssetBundle.AssetManager.DownloadByAssetsAsync(TAssetBundle.AssetRef[])
  name: DownloadByAssetsAsync(AssetRef[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByAssetsAsync_TAssetBundle_AssetRef___
  commentId: M:TAssetBundle.AssetManager.DownloadByAssetsAsync(TAssetBundle.AssetRef[])
  name.vb: DownloadByAssetsAsync(AssetRef())
  fullName: TAssetBundle.AssetManager.DownloadByAssetsAsync(TAssetBundle.AssetRef[])
  fullName.vb: TAssetBundle.AssetManager.DownloadByAssetsAsync(TAssetBundle.AssetRef())
  nameWithType: AssetManager.DownloadByAssetsAsync(AssetRef[])
  nameWithType.vb: AssetManager.DownloadByAssetsAsync(AssetRef())
- uid: TAssetBundle.AssetManager.DownloadByAssetsAsync*
  name: DownloadByAssetsAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByAssetsAsync_
  commentId: Overload:TAssetBundle.AssetManager.DownloadByAssetsAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.DownloadByAssetsAsync
  nameWithType: AssetManager.DownloadByAssetsAsync
- uid: TAssetBundle.AssetManager.DownloadByScenesAsync(System.String[])
  name: DownloadByScenesAsync(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByScenesAsync_System_String___
  commentId: M:TAssetBundle.AssetManager.DownloadByScenesAsync(System.String[])
  name.vb: DownloadByScenesAsync(String())
  fullName: TAssetBundle.AssetManager.DownloadByScenesAsync(string[])
  fullName.vb: TAssetBundle.AssetManager.DownloadByScenesAsync(String())
  nameWithType: AssetManager.DownloadByScenesAsync(string[])
  nameWithType.vb: AssetManager.DownloadByScenesAsync(String())
- uid: TAssetBundle.AssetManager.DownloadByScenesAsync(TAssetBundle.SceneAssetRef[])
  name: DownloadByScenesAsync(SceneAssetRef[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByScenesAsync_TAssetBundle_SceneAssetRef___
  commentId: M:TAssetBundle.AssetManager.DownloadByScenesAsync(TAssetBundle.SceneAssetRef[])
  name.vb: DownloadByScenesAsync(SceneAssetRef())
  fullName: TAssetBundle.AssetManager.DownloadByScenesAsync(TAssetBundle.SceneAssetRef[])
  fullName.vb: TAssetBundle.AssetManager.DownloadByScenesAsync(TAssetBundle.SceneAssetRef())
  nameWithType: AssetManager.DownloadByScenesAsync(SceneAssetRef[])
  nameWithType.vb: AssetManager.DownloadByScenesAsync(SceneAssetRef())
- uid: TAssetBundle.AssetManager.DownloadByScenesAsync*
  name: DownloadByScenesAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByScenesAsync_
  commentId: Overload:TAssetBundle.AssetManager.DownloadByScenesAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.DownloadByScenesAsync
  nameWithType: AssetManager.DownloadByScenesAsync
- uid: TAssetBundle.AssetManager.DownloadByTagsAsync(System.String[])
  name: DownloadByTagsAsync(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByTagsAsync_System_String___
  commentId: M:TAssetBundle.AssetManager.DownloadByTagsAsync(System.String[])
  name.vb: DownloadByTagsAsync(String())
  fullName: TAssetBundle.AssetManager.DownloadByTagsAsync(string[])
  fullName.vb: TAssetBundle.AssetManager.DownloadByTagsAsync(String())
  nameWithType: AssetManager.DownloadByTagsAsync(string[])
  nameWithType.vb: AssetManager.DownloadByTagsAsync(String())
- uid: TAssetBundle.AssetManager.DownloadByTagsAsync*
  name: DownloadByTagsAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_DownloadByTagsAsync_
  commentId: Overload:TAssetBundle.AssetManager.DownloadByTagsAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.DownloadByTagsAsync
  nameWithType: AssetManager.DownloadByTagsAsync
- uid: TAssetBundle.AssetManager.ExistAsset(System.String)
  name: ExistAsset(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_ExistAsset_System_String_
  commentId: M:TAssetBundle.AssetManager.ExistAsset(System.String)
  name.vb: ExistAsset(String)
  fullName: TAssetBundle.AssetManager.ExistAsset(string)
  fullName.vb: TAssetBundle.AssetManager.ExistAsset(String)
  nameWithType: AssetManager.ExistAsset(string)
  nameWithType.vb: AssetManager.ExistAsset(String)
- uid: TAssetBundle.AssetManager.ExistAsset(TAssetBundle.AssetRef)
  name: ExistAsset(AssetRef)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_ExistAsset_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.AssetManager.ExistAsset(TAssetBundle.AssetRef)
  fullName: TAssetBundle.AssetManager.ExistAsset(TAssetBundle.AssetRef)
  nameWithType: AssetManager.ExistAsset(AssetRef)
- uid: TAssetBundle.AssetManager.ExistAsset*
  name: ExistAsset
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_ExistAsset_
  commentId: Overload:TAssetBundle.AssetManager.ExistAsset
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.ExistAsset
  nameWithType: AssetManager.ExistAsset
- uid: TAssetBundle.AssetManager.ExistScene(System.String)
  name: ExistScene(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_ExistScene_System_String_
  commentId: M:TAssetBundle.AssetManager.ExistScene(System.String)
  name.vb: ExistScene(String)
  fullName: TAssetBundle.AssetManager.ExistScene(string)
  fullName.vb: TAssetBundle.AssetManager.ExistScene(String)
  nameWithType: AssetManager.ExistScene(string)
  nameWithType.vb: AssetManager.ExistScene(String)
- uid: TAssetBundle.AssetManager.ExistScene*
  name: ExistScene
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_ExistScene_
  commentId: Overload:TAssetBundle.AssetManager.ExistScene
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.ExistScene
  nameWithType: AssetManager.ExistScene
- uid: TAssetBundle.AssetManager.GetActiveAssetBundles
  name: GetActiveAssetBundles()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetActiveAssetBundles
  commentId: M:TAssetBundle.AssetManager.GetActiveAssetBundles
  fullName: TAssetBundle.AssetManager.GetActiveAssetBundles()
  nameWithType: AssetManager.GetActiveAssetBundles()
- uid: TAssetBundle.AssetManager.GetActiveAssetBundles*
  name: GetActiveAssetBundles
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetActiveAssetBundles_
  commentId: Overload:TAssetBundle.AssetManager.GetActiveAssetBundles
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetActiveAssetBundles
  nameWithType: AssetManager.GetActiveAssetBundles
- uid: TAssetBundle.AssetManager.GetDownloadSizeAsync
  name: GetDownloadSizeAsync()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeAsync
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeAsync
  fullName: TAssetBundle.AssetManager.GetDownloadSizeAsync()
  nameWithType: AssetManager.GetDownloadSizeAsync()
- uid: TAssetBundle.AssetManager.GetDownloadSizeAsync(System.String)
  name: GetDownloadSizeAsync(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeAsync_System_String_
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeAsync(System.String)
  name.vb: GetDownloadSizeAsync(String)
  fullName: TAssetBundle.AssetManager.GetDownloadSizeAsync(string)
  fullName.vb: TAssetBundle.AssetManager.GetDownloadSizeAsync(String)
  nameWithType: AssetManager.GetDownloadSizeAsync(string)
  nameWithType.vb: AssetManager.GetDownloadSizeAsync(String)
- uid: TAssetBundle.AssetManager.GetDownloadSizeAsync*
  name: GetDownloadSizeAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeAsync_
  commentId: Overload:TAssetBundle.AssetManager.GetDownloadSizeAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetDownloadSizeAsync
  nameWithType: AssetManager.GetDownloadSizeAsync
- uid: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(System.String[])
  name: GetDownloadSizeByAssetsAsync(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByAssetsAsync_System_String___
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(System.String[])
  name.vb: GetDownloadSizeByAssetsAsync(String())
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(string[])
  fullName.vb: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(String())
  nameWithType: AssetManager.GetDownloadSizeByAssetsAsync(string[])
  nameWithType.vb: AssetManager.GetDownloadSizeByAssetsAsync(String())
- uid: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef[])
  name: GetDownloadSizeByAssetsAsync(AssetRef[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByAssetsAsync_TAssetBundle_AssetRef___
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef[])
  name.vb: GetDownloadSizeByAssetsAsync(AssetRef())
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef[])
  fullName.vb: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef())
  nameWithType: AssetManager.GetDownloadSizeByAssetsAsync(AssetRef[])
  nameWithType.vb: AssetManager.GetDownloadSizeByAssetsAsync(AssetRef())
- uid: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync*
  name: GetDownloadSizeByAssetsAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByAssetsAsync_
  commentId: Overload:TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByAssetsAsync
  nameWithType: AssetManager.GetDownloadSizeByAssetsAsync
- uid: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(System.String[])
  name: GetDownloadSizeByScenesAsync(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByScenesAsync_System_String___
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(System.String[])
  name.vb: GetDownloadSizeByScenesAsync(String())
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(string[])
  fullName.vb: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(String())
  nameWithType: AssetManager.GetDownloadSizeByScenesAsync(string[])
  nameWithType.vb: AssetManager.GetDownloadSizeByScenesAsync(String())
- uid: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef[])
  name: GetDownloadSizeByScenesAsync(SceneAssetRef[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByScenesAsync_TAssetBundle_SceneAssetRef___
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef[])
  name.vb: GetDownloadSizeByScenesAsync(SceneAssetRef())
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef[])
  fullName.vb: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef())
  nameWithType: AssetManager.GetDownloadSizeByScenesAsync(SceneAssetRef[])
  nameWithType.vb: AssetManager.GetDownloadSizeByScenesAsync(SceneAssetRef())
- uid: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync*
  name: GetDownloadSizeByScenesAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByScenesAsync_
  commentId: Overload:TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByScenesAsync
  nameWithType: AssetManager.GetDownloadSizeByScenesAsync
- uid: TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync(System.String[])
  name: GetDownloadSizeByTagsAsync(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByTagsAsync_System_String___
  commentId: M:TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync(System.String[])
  name.vb: GetDownloadSizeByTagsAsync(String())
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync(string[])
  fullName.vb: TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync(String())
  nameWithType: AssetManager.GetDownloadSizeByTagsAsync(string[])
  nameWithType.vb: AssetManager.GetDownloadSizeByTagsAsync(String())
- uid: TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync*
  name: GetDownloadSizeByTagsAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetDownloadSizeByTagsAsync_
  commentId: Overload:TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetDownloadSizeByTagsAsync
  nameWithType: AssetManager.GetDownloadSizeByTagsAsync
- uid: TAssetBundle.AssetManager.GetLastWebRequestError
  name: GetLastWebRequestError()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetLastWebRequestError
  commentId: M:TAssetBundle.AssetManager.GetLastWebRequestError
  fullName: TAssetBundle.AssetManager.GetLastWebRequestError()
  nameWithType: AssetManager.GetLastWebRequestError()
- uid: TAssetBundle.AssetManager.GetLastWebRequestError*
  name: GetLastWebRequestError
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetLastWebRequestError_
  commentId: Overload:TAssetBundle.AssetManager.GetLastWebRequestError
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetLastWebRequestError
  nameWithType: AssetManager.GetLastWebRequestError
- uid: TAssetBundle.AssetManager.GetLoadedAssetHandles
  name: GetLoadedAssetHandles()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetLoadedAssetHandles
  commentId: M:TAssetBundle.AssetManager.GetLoadedAssetHandles
  fullName: TAssetBundle.AssetManager.GetLoadedAssetHandles()
  nameWithType: AssetManager.GetLoadedAssetHandles()
- uid: TAssetBundle.AssetManager.GetLoadedAssetHandles*
  name: GetLoadedAssetHandles
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_GetLoadedAssetHandles_
  commentId: Overload:TAssetBundle.AssetManager.GetLoadedAssetHandles
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.GetLoadedAssetHandles
  nameWithType: AssetManager.GetLoadedAssetHandles
- uid: TAssetBundle.AssetManager.InitializeAsync
  name: InitializeAsync()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_InitializeAsync
  commentId: M:TAssetBundle.AssetManager.InitializeAsync
  fullName: TAssetBundle.AssetManager.InitializeAsync()
  nameWithType: AssetManager.InitializeAsync()
- uid: TAssetBundle.AssetManager.InitializeAsync*
  name: InitializeAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_InitializeAsync_
  commentId: Overload:TAssetBundle.AssetManager.InitializeAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.InitializeAsync
  nameWithType: AssetManager.InitializeAsync
- uid: TAssetBundle.AssetManager.IsLoadedAsset(System.String)
  name: IsLoadedAsset(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_IsLoadedAsset_System_String_
  commentId: M:TAssetBundle.AssetManager.IsLoadedAsset(System.String)
  name.vb: IsLoadedAsset(String)
  fullName: TAssetBundle.AssetManager.IsLoadedAsset(string)
  fullName.vb: TAssetBundle.AssetManager.IsLoadedAsset(String)
  nameWithType: AssetManager.IsLoadedAsset(string)
  nameWithType.vb: AssetManager.IsLoadedAsset(String)
- uid: TAssetBundle.AssetManager.IsLoadedAsset(TAssetBundle.AssetRef)
  name: IsLoadedAsset(AssetRef)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_IsLoadedAsset_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.AssetManager.IsLoadedAsset(TAssetBundle.AssetRef)
  fullName: TAssetBundle.AssetManager.IsLoadedAsset(TAssetBundle.AssetRef)
  nameWithType: AssetManager.IsLoadedAsset(AssetRef)
- uid: TAssetBundle.AssetManager.IsLoadedAsset*
  name: IsLoadedAsset
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_IsLoadedAsset_
  commentId: Overload:TAssetBundle.AssetManager.IsLoadedAsset
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.IsLoadedAsset
  nameWithType: AssetManager.IsLoadedAsset
- uid: TAssetBundle.AssetManager.LoadAssetAsync*
  name: LoadAssetAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadAssetAsync_
  commentId: Overload:TAssetBundle.AssetManager.LoadAssetAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.LoadAssetAsync
  nameWithType: AssetManager.LoadAssetAsync
- uid: TAssetBundle.AssetManager.LoadAssetAsync``1(System.String)
  name: LoadAssetAsync<T>(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadAssetAsync__1_System_String_
  commentId: M:TAssetBundle.AssetManager.LoadAssetAsync``1(System.String)
  name.vb: LoadAssetAsync(Of T)(String)
  fullName: TAssetBundle.AssetManager.LoadAssetAsync<T>(string)
  fullName.vb: TAssetBundle.AssetManager.LoadAssetAsync(Of T)(String)
  nameWithType: AssetManager.LoadAssetAsync<T>(string)
  nameWithType.vb: AssetManager.LoadAssetAsync(Of T)(String)
- uid: TAssetBundle.AssetManager.LoadAssetAsync``1(TAssetBundle.AssetRef)
  name: LoadAssetAsync<T>(AssetRef)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadAssetAsync__1_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.AssetManager.LoadAssetAsync``1(TAssetBundle.AssetRef)
  name.vb: LoadAssetAsync(Of T)(AssetRef)
  fullName: TAssetBundle.AssetManager.LoadAssetAsync<T>(TAssetBundle.AssetRef)
  fullName.vb: TAssetBundle.AssetManager.LoadAssetAsync(Of T)(TAssetBundle.AssetRef)
  nameWithType: AssetManager.LoadAssetAsync<T>(AssetRef)
  nameWithType.vb: AssetManager.LoadAssetAsync(Of T)(AssetRef)
- uid: TAssetBundle.AssetManager.LoadCatalogInfoAsync(System.String)
  name: LoadCatalogInfoAsync(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadCatalogInfoAsync_System_String_
  commentId: M:TAssetBundle.AssetManager.LoadCatalogInfoAsync(System.String)
  name.vb: LoadCatalogInfoAsync(String)
  fullName: TAssetBundle.AssetManager.LoadCatalogInfoAsync(string)
  fullName.vb: TAssetBundle.AssetManager.LoadCatalogInfoAsync(String)
  nameWithType: AssetManager.LoadCatalogInfoAsync(string)
  nameWithType.vb: AssetManager.LoadCatalogInfoAsync(String)
- uid: TAssetBundle.AssetManager.LoadCatalogInfoAsync*
  name: LoadCatalogInfoAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadCatalogInfoAsync_
  commentId: Overload:TAssetBundle.AssetManager.LoadCatalogInfoAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.LoadCatalogInfoAsync
  nameWithType: AssetManager.LoadCatalogInfoAsync
- uid: TAssetBundle.AssetManager.LoadSceneAsync(System.String,UnityEngine.SceneManagement.LoadSceneMode)
  name: LoadSceneAsync(string, LoadSceneMode)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadSceneAsync_System_String_UnityEngine_SceneManagement_LoadSceneMode_
  commentId: M:TAssetBundle.AssetManager.LoadSceneAsync(System.String,UnityEngine.SceneManagement.LoadSceneMode)
  name.vb: LoadSceneAsync(String, LoadSceneMode)
  fullName: TAssetBundle.AssetManager.LoadSceneAsync(string, UnityEngine.SceneManagement.LoadSceneMode)
  fullName.vb: TAssetBundle.AssetManager.LoadSceneAsync(String, UnityEngine.SceneManagement.LoadSceneMode)
  nameWithType: AssetManager.LoadSceneAsync(string, LoadSceneMode)
  nameWithType.vb: AssetManager.LoadSceneAsync(String, LoadSceneMode)
- uid: TAssetBundle.AssetManager.LoadSceneAsync(TAssetBundle.LoadSceneInfo)
  name: LoadSceneAsync(LoadSceneInfo)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadSceneAsync_TAssetBundle_LoadSceneInfo_
  commentId: M:TAssetBundle.AssetManager.LoadSceneAsync(TAssetBundle.LoadSceneInfo)
  fullName: TAssetBundle.AssetManager.LoadSceneAsync(TAssetBundle.LoadSceneInfo)
  nameWithType: AssetManager.LoadSceneAsync(LoadSceneInfo)
- uid: TAssetBundle.AssetManager.LoadSceneAsync(TAssetBundle.SceneAssetRef,UnityEngine.SceneManagement.LoadSceneMode)
  name: LoadSceneAsync(SceneAssetRef, LoadSceneMode)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadSceneAsync_TAssetBundle_SceneAssetRef_UnityEngine_SceneManagement_LoadSceneMode_
  commentId: M:TAssetBundle.AssetManager.LoadSceneAsync(TAssetBundle.SceneAssetRef,UnityEngine.SceneManagement.LoadSceneMode)
  fullName: TAssetBundle.AssetManager.LoadSceneAsync(TAssetBundle.SceneAssetRef, UnityEngine.SceneManagement.LoadSceneMode)
  nameWithType: AssetManager.LoadSceneAsync(SceneAssetRef, LoadSceneMode)
- uid: TAssetBundle.AssetManager.LoadSceneAsync*
  name: LoadSceneAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_LoadSceneAsync_
  commentId: Overload:TAssetBundle.AssetManager.LoadSceneAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.LoadSceneAsync
  nameWithType: AssetManager.LoadSceneAsync
- uid: TAssetBundle.AssetManager.SetRemoteUrl(System.String)
  name: SetRemoteUrl(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetRemoteUrl_System_String_
  commentId: M:TAssetBundle.AssetManager.SetRemoteUrl(System.String)
  name.vb: SetRemoteUrl(String)
  fullName: TAssetBundle.AssetManager.SetRemoteUrl(string)
  fullName.vb: TAssetBundle.AssetManager.SetRemoteUrl(String)
  nameWithType: AssetManager.SetRemoteUrl(string)
  nameWithType.vb: AssetManager.SetRemoteUrl(String)
- uid: TAssetBundle.AssetManager.SetRemoteUrl*
  name: SetRemoteUrl
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetRemoteUrl_
  commentId: Overload:TAssetBundle.AssetManager.SetRemoteUrl
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.SetRemoteUrl
  nameWithType: AssetManager.SetRemoteUrl
- uid: TAssetBundle.AssetManager.SetRemoteUrls(System.String[])
  name: SetRemoteUrls(string[])
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetRemoteUrls_System_String___
  commentId: M:TAssetBundle.AssetManager.SetRemoteUrls(System.String[])
  name.vb: SetRemoteUrls(String())
  fullName: TAssetBundle.AssetManager.SetRemoteUrls(string[])
  fullName.vb: TAssetBundle.AssetManager.SetRemoteUrls(String())
  nameWithType: AssetManager.SetRemoteUrls(string[])
  nameWithType.vb: AssetManager.SetRemoteUrls(String())
- uid: TAssetBundle.AssetManager.SetRemoteUrls*
  name: SetRemoteUrls
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetRemoteUrls_
  commentId: Overload:TAssetBundle.AssetManager.SetRemoteUrls
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.SetRemoteUrls
  nameWithType: AssetManager.SetRemoteUrls
- uid: TAssetBundle.AssetManager.SetTagComparer(TAssetBundle.ITagComparer)
  name: SetTagComparer(ITagComparer)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetTagComparer_TAssetBundle_ITagComparer_
  commentId: M:TAssetBundle.AssetManager.SetTagComparer(TAssetBundle.ITagComparer)
  fullName: TAssetBundle.AssetManager.SetTagComparer(TAssetBundle.ITagComparer)
  nameWithType: AssetManager.SetTagComparer(ITagComparer)
- uid: TAssetBundle.AssetManager.SetTagComparer*
  name: SetTagComparer
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetTagComparer_
  commentId: Overload:TAssetBundle.AssetManager.SetTagComparer
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.SetTagComparer
  nameWithType: AssetManager.SetTagComparer
- uid: TAssetBundle.AssetManager.SetWebRequestBeforeSendCallback(TAssetBundle.WebRequestCallback)
  name: SetWebRequestBeforeSendCallback(WebRequestCallback)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetWebRequestBeforeSendCallback_TAssetBundle_WebRequestCallback_
  commentId: M:TAssetBundle.AssetManager.SetWebRequestBeforeSendCallback(TAssetBundle.WebRequestCallback)
  fullName: TAssetBundle.AssetManager.SetWebRequestBeforeSendCallback(TAssetBundle.WebRequestCallback)
  nameWithType: AssetManager.SetWebRequestBeforeSendCallback(WebRequestCallback)
- uid: TAssetBundle.AssetManager.SetWebRequestBeforeSendCallback*
  name: SetWebRequestBeforeSendCallback
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetWebRequestBeforeSendCallback_
  commentId: Overload:TAssetBundle.AssetManager.SetWebRequestBeforeSendCallback
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.SetWebRequestBeforeSendCallback
  nameWithType: AssetManager.SetWebRequestBeforeSendCallback
- uid: TAssetBundle.AssetManager.SetWebRequestResultCallback(TAssetBundle.WebRequestCallback)
  name: SetWebRequestResultCallback(WebRequestCallback)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetWebRequestResultCallback_TAssetBundle_WebRequestCallback_
  commentId: M:TAssetBundle.AssetManager.SetWebRequestResultCallback(TAssetBundle.WebRequestCallback)
  fullName: TAssetBundle.AssetManager.SetWebRequestResultCallback(TAssetBundle.WebRequestCallback)
  nameWithType: AssetManager.SetWebRequestResultCallback(WebRequestCallback)
- uid: TAssetBundle.AssetManager.SetWebRequestResultCallback*
  name: SetWebRequestResultCallback
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_SetWebRequestResultCallback_
  commentId: Overload:TAssetBundle.AssetManager.SetWebRequestResultCallback
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.SetWebRequestResultCallback
  nameWithType: AssetManager.SetWebRequestResultCallback
- uid: TAssetBundle.AssetManager.Settings
  name: Settings
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_Settings
  commentId: P:TAssetBundle.AssetManager.Settings
  fullName: TAssetBundle.AssetManager.Settings
  nameWithType: AssetManager.Settings
- uid: TAssetBundle.AssetManager.Settings*
  name: Settings
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_Settings_
  commentId: Overload:TAssetBundle.AssetManager.Settings
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.Settings
  nameWithType: AssetManager.Settings
- uid: TAssetBundle.AssetManager.UnloadAll
  name: UnloadAll()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UnloadAll
  commentId: M:TAssetBundle.AssetManager.UnloadAll
  fullName: TAssetBundle.AssetManager.UnloadAll()
  nameWithType: AssetManager.UnloadAll()
- uid: TAssetBundle.AssetManager.UnloadAll*
  name: UnloadAll
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UnloadAll_
  commentId: Overload:TAssetBundle.AssetManager.UnloadAll
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.UnloadAll
  nameWithType: AssetManager.UnloadAll
- uid: TAssetBundle.AssetManager.UnloadAsset(System.String)
  name: UnloadAsset(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UnloadAsset_System_String_
  commentId: M:TAssetBundle.AssetManager.UnloadAsset(System.String)
  name.vb: UnloadAsset(String)
  fullName: TAssetBundle.AssetManager.UnloadAsset(string)
  fullName.vb: TAssetBundle.AssetManager.UnloadAsset(String)
  nameWithType: AssetManager.UnloadAsset(string)
  nameWithType.vb: AssetManager.UnloadAsset(String)
- uid: TAssetBundle.AssetManager.UnloadAsset(TAssetBundle.AssetRef)
  name: UnloadAsset(AssetRef)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UnloadAsset_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.AssetManager.UnloadAsset(TAssetBundle.AssetRef)
  fullName: TAssetBundle.AssetManager.UnloadAsset(TAssetBundle.AssetRef)
  nameWithType: AssetManager.UnloadAsset(AssetRef)
- uid: TAssetBundle.AssetManager.UnloadAsset(TAssetBundle.IAssetHandle)
  name: UnloadAsset(IAssetHandle)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UnloadAsset_TAssetBundle_IAssetHandle_
  commentId: M:TAssetBundle.AssetManager.UnloadAsset(TAssetBundle.IAssetHandle)
  fullName: TAssetBundle.AssetManager.UnloadAsset(TAssetBundle.IAssetHandle)
  nameWithType: AssetManager.UnloadAsset(IAssetHandle)
- uid: TAssetBundle.AssetManager.UnloadAsset*
  name: UnloadAsset
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UnloadAsset_
  commentId: Overload:TAssetBundle.AssetManager.UnloadAsset
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.UnloadAsset
  nameWithType: AssetManager.UnloadAsset
- uid: TAssetBundle.AssetManager.UpdateCatalogAsync
  name: UpdateCatalogAsync()
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UpdateCatalogAsync
  commentId: M:TAssetBundle.AssetManager.UpdateCatalogAsync
  fullName: TAssetBundle.AssetManager.UpdateCatalogAsync()
  nameWithType: AssetManager.UpdateCatalogAsync()
- uid: TAssetBundle.AssetManager.UpdateCatalogAsync(System.String)
  name: UpdateCatalogAsync(string)
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UpdateCatalogAsync_System_String_
  commentId: M:TAssetBundle.AssetManager.UpdateCatalogAsync(System.String)
  name.vb: UpdateCatalogAsync(String)
  fullName: TAssetBundle.AssetManager.UpdateCatalogAsync(string)
  fullName.vb: TAssetBundle.AssetManager.UpdateCatalogAsync(String)
  nameWithType: AssetManager.UpdateCatalogAsync(string)
  nameWithType.vb: AssetManager.UpdateCatalogAsync(String)
- uid: TAssetBundle.AssetManager.UpdateCatalogAsync*
  name: UpdateCatalogAsync
  href: api/TAssetBundle.AssetManager.html#TAssetBundle_AssetManager_UpdateCatalogAsync_
  commentId: Overload:TAssetBundle.AssetManager.UpdateCatalogAsync
  isSpec: "True"
  fullName: TAssetBundle.AssetManager.UpdateCatalogAsync
  nameWithType: AssetManager.UpdateCatalogAsync
- uid: TAssetBundle.AssetRef
  name: AssetRef
  href: api/TAssetBundle.AssetRef.html
  commentId: T:TAssetBundle.AssetRef
  fullName: TAssetBundle.AssetRef
  nameWithType: AssetRef
- uid: TAssetBundle.AssetRef.FileName
  name: FileName
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_FileName
  commentId: P:TAssetBundle.AssetRef.FileName
  fullName: TAssetBundle.AssetRef.FileName
  nameWithType: AssetRef.FileName
- uid: TAssetBundle.AssetRef.FileName*
  name: FileName
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_FileName_
  commentId: Overload:TAssetBundle.AssetRef.FileName
  isSpec: "True"
  fullName: TAssetBundle.AssetRef.FileName
  nameWithType: AssetRef.FileName
- uid: TAssetBundle.AssetRef.IsValid
  name: IsValid
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_IsValid
  commentId: P:TAssetBundle.AssetRef.IsValid
  fullName: TAssetBundle.AssetRef.IsValid
  nameWithType: AssetRef.IsValid
- uid: TAssetBundle.AssetRef.IsValid*
  name: IsValid
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_IsValid_
  commentId: Overload:TAssetBundle.AssetRef.IsValid
  isSpec: "True"
  fullName: TAssetBundle.AssetRef.IsValid
  nameWithType: AssetRef.IsValid
- uid: TAssetBundle.AssetRef.Path
  name: Path
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_Path
  commentId: P:TAssetBundle.AssetRef.Path
  fullName: TAssetBundle.AssetRef.Path
  nameWithType: AssetRef.Path
- uid: TAssetBundle.AssetRef.Path*
  name: Path
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_Path_
  commentId: Overload:TAssetBundle.AssetRef.Path
  isSpec: "True"
  fullName: TAssetBundle.AssetRef.Path
  nameWithType: AssetRef.Path
- uid: TAssetBundle.AssetRef.ToString
  name: ToString()
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_ToString
  commentId: M:TAssetBundle.AssetRef.ToString
  fullName: TAssetBundle.AssetRef.ToString()
  nameWithType: AssetRef.ToString()
- uid: TAssetBundle.AssetRef.ToString*
  name: ToString
  href: api/TAssetBundle.AssetRef.html#TAssetBundle_AssetRef_ToString_
  commentId: Overload:TAssetBundle.AssetRef.ToString
  isSpec: "True"
  fullName: TAssetBundle.AssetRef.ToString
  nameWithType: AssetRef.ToString
- uid: TAssetBundle.AssetTypeAttribute
  name: AssetTypeAttribute
  href: api/TAssetBundle.AssetTypeAttribute.html
  commentId: T:TAssetBundle.AssetTypeAttribute
  fullName: TAssetBundle.AssetTypeAttribute
  nameWithType: AssetTypeAttribute
- uid: TAssetBundle.AssetTypeAttribute.#ctor(System.Type)
  name: AssetTypeAttribute(Type)
  href: api/TAssetBundle.AssetTypeAttribute.html#TAssetBundle_AssetTypeAttribute__ctor_System_Type_
  commentId: M:TAssetBundle.AssetTypeAttribute.#ctor(System.Type)
  name.vb: New(Type)
  fullName: TAssetBundle.AssetTypeAttribute.AssetTypeAttribute(System.Type)
  fullName.vb: TAssetBundle.AssetTypeAttribute.New(System.Type)
  nameWithType: AssetTypeAttribute.AssetTypeAttribute(Type)
  nameWithType.vb: AssetTypeAttribute.New(Type)
- uid: TAssetBundle.AssetTypeAttribute.#ctor*
  name: AssetTypeAttribute
  href: api/TAssetBundle.AssetTypeAttribute.html#TAssetBundle_AssetTypeAttribute__ctor_
  commentId: Overload:TAssetBundle.AssetTypeAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TAssetBundle.AssetTypeAttribute.AssetTypeAttribute
  fullName.vb: TAssetBundle.AssetTypeAttribute.New
  nameWithType: AssetTypeAttribute.AssetTypeAttribute
  nameWithType.vb: AssetTypeAttribute.New
- uid: TAssetBundle.AssetTypeAttribute.AssetType
  name: AssetType
  href: api/TAssetBundle.AssetTypeAttribute.html#TAssetBundle_AssetTypeAttribute_AssetType
  commentId: P:TAssetBundle.AssetTypeAttribute.AssetType
  fullName: TAssetBundle.AssetTypeAttribute.AssetType
  nameWithType: AssetTypeAttribute.AssetType
- uid: TAssetBundle.AssetTypeAttribute.AssetType*
  name: AssetType
  href: api/TAssetBundle.AssetTypeAttribute.html#TAssetBundle_AssetTypeAttribute_AssetType_
  commentId: Overload:TAssetBundle.AssetTypeAttribute.AssetType
  isSpec: "True"
  fullName: TAssetBundle.AssetTypeAttribute.AssetType
  nameWithType: AssetTypeAttribute.AssetType
- uid: TAssetBundle.AsyncOperationExtensions
  name: AsyncOperationExtensions
  href: api/TAssetBundle.AsyncOperationExtensions.html
  commentId: T:TAssetBundle.AsyncOperationExtensions
  fullName: TAssetBundle.AsyncOperationExtensions
  nameWithType: AsyncOperationExtensions
- uid: TAssetBundle.AsyncOperationExtensions.ToTask*
  name: ToTask
  href: api/TAssetBundle.AsyncOperationExtensions.html#TAssetBundle_AsyncOperationExtensions_ToTask_
  commentId: Overload:TAssetBundle.AsyncOperationExtensions.ToTask
  isSpec: "True"
  fullName: TAssetBundle.AsyncOperationExtensions.ToTask
  nameWithType: AsyncOperationExtensions.ToTask
- uid: TAssetBundle.AsyncOperationExtensions.ToTask``1(``0)
  name: ToTask<T>(T)
  href: api/TAssetBundle.AsyncOperationExtensions.html#TAssetBundle_AsyncOperationExtensions_ToTask__1___0_
  commentId: M:TAssetBundle.AsyncOperationExtensions.ToTask``1(``0)
  name.vb: ToTask(Of T)(T)
  fullName: TAssetBundle.AsyncOperationExtensions.ToTask<T>(T)
  fullName.vb: TAssetBundle.AsyncOperationExtensions.ToTask(Of T)(T)
  nameWithType: AsyncOperationExtensions.ToTask<T>(T)
  nameWithType.vb: AsyncOperationExtensions.ToTask(Of T)(T)
- uid: TAssetBundle.AsyncOperationPool
  name: AsyncOperationPool
  href: api/TAssetBundle.AsyncOperationPool.html
  commentId: T:TAssetBundle.AsyncOperationPool
  fullName: TAssetBundle.AsyncOperationPool
  nameWithType: AsyncOperationPool
- uid: TAssetBundle.AsyncOperationPool.Clear
  name: Clear()
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Clear
  commentId: M:TAssetBundle.AsyncOperationPool.Clear
  fullName: TAssetBundle.AsyncOperationPool.Clear()
  nameWithType: AsyncOperationPool.Clear()
- uid: TAssetBundle.AsyncOperationPool.Clear*
  name: Clear
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Clear_
  commentId: Overload:TAssetBundle.AsyncOperationPool.Clear
  isSpec: "True"
  fullName: TAssetBundle.AsyncOperationPool.Clear
  nameWithType: AsyncOperationPool.Clear
- uid: TAssetBundle.AsyncOperationPool.Get*
  name: Get
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Get_
  commentId: Overload:TAssetBundle.AsyncOperationPool.Get
  isSpec: "True"
  fullName: TAssetBundle.AsyncOperationPool.Get
  nameWithType: AsyncOperationPool.Get
- uid: TAssetBundle.AsyncOperationPool.Get``1
  name: Get<T>()
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Get__1
  commentId: M:TAssetBundle.AsyncOperationPool.Get``1
  name.vb: Get(Of T)()
  fullName: TAssetBundle.AsyncOperationPool.Get<T>()
  fullName.vb: TAssetBundle.AsyncOperationPool.Get(Of T)()
  nameWithType: AsyncOperationPool.Get<T>()
  nameWithType.vb: AsyncOperationPool.Get(Of T)()
- uid: TAssetBundle.AsyncOperationPool.Pools
  name: Pools
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Pools
  commentId: P:TAssetBundle.AsyncOperationPool.Pools
  fullName: TAssetBundle.AsyncOperationPool.Pools
  nameWithType: AsyncOperationPool.Pools
- uid: TAssetBundle.AsyncOperationPool.Pools*
  name: Pools
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Pools_
  commentId: Overload:TAssetBundle.AsyncOperationPool.Pools
  isSpec: "True"
  fullName: TAssetBundle.AsyncOperationPool.Pools
  nameWithType: AsyncOperationPool.Pools
- uid: TAssetBundle.AsyncOperationPool.Push(TAssetBundle.IAsyncOperation)
  name: Push(IAsyncOperation)
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Push_TAssetBundle_IAsyncOperation_
  commentId: M:TAssetBundle.AsyncOperationPool.Push(TAssetBundle.IAsyncOperation)
  fullName: TAssetBundle.AsyncOperationPool.Push(TAssetBundle.IAsyncOperation)
  nameWithType: AsyncOperationPool.Push(IAsyncOperation)
- uid: TAssetBundle.AsyncOperationPool.Push*
  name: Push
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_Push_
  commentId: Overload:TAssetBundle.AsyncOperationPool.Push
  isSpec: "True"
  fullName: TAssetBundle.AsyncOperationPool.Push
  nameWithType: AsyncOperationPool.Push
- uid: TAssetBundle.AsyncOperationPool.TryPop*
  name: TryPop
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_TryPop_
  commentId: Overload:TAssetBundle.AsyncOperationPool.TryPop
  isSpec: "True"
  fullName: TAssetBundle.AsyncOperationPool.TryPop
  nameWithType: AsyncOperationPool.TryPop
- uid: TAssetBundle.AsyncOperationPool.TryPop``1(``0@)
  name: TryPop<T>(out T)
  href: api/TAssetBundle.AsyncOperationPool.html#TAssetBundle_AsyncOperationPool_TryPop__1___0__
  commentId: M:TAssetBundle.AsyncOperationPool.TryPop``1(``0@)
  name.vb: TryPop(Of T)(T)
  fullName: TAssetBundle.AsyncOperationPool.TryPop<T>(out T)
  fullName.vb: TAssetBundle.AsyncOperationPool.TryPop(Of T)(T)
  nameWithType: AsyncOperationPool.TryPop<T>(out T)
  nameWithType.vb: AsyncOperationPool.TryPop(Of T)(T)
- uid: TAssetBundle.AudioClipAssetRef
  name: AudioClipAssetRef
  href: api/TAssetBundle.AudioClipAssetRef.html
  commentId: T:TAssetBundle.AudioClipAssetRef
  fullName: TAssetBundle.AudioClipAssetRef
  nameWithType: AudioClipAssetRef
- uid: TAssetBundle.CatalogFileHandler
  name: CatalogFileHandler
  href: api/TAssetBundle.CatalogFileHandler.html
  commentId: T:TAssetBundle.CatalogFileHandler
  fullName: TAssetBundle.CatalogFileHandler
  nameWithType: CatalogFileHandler
- uid: TAssetBundle.CatalogFileHandler.#ctor(TAssetBundle.CatalogSerializer,TAssetBundle.CryptoSerializer,System.String,System.Boolean,System.Boolean)
  name: CatalogFileHandler(CatalogSerializer, CryptoSerializer, string, bool, bool)
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler__ctor_TAssetBundle_CatalogSerializer_TAssetBundle_CryptoSerializer_System_String_System_Boolean_System_Boolean_
  commentId: M:TAssetBundle.CatalogFileHandler.#ctor(TAssetBundle.CatalogSerializer,TAssetBundle.CryptoSerializer,System.String,System.Boolean,System.Boolean)
  name.vb: New(CatalogSerializer, CryptoSerializer, String, Boolean, Boolean)
  fullName: TAssetBundle.CatalogFileHandler.CatalogFileHandler(TAssetBundle.CatalogSerializer, TAssetBundle.CryptoSerializer, string, bool, bool)
  fullName.vb: TAssetBundle.CatalogFileHandler.New(TAssetBundle.CatalogSerializer, TAssetBundle.CryptoSerializer, String, Boolean, Boolean)
  nameWithType: CatalogFileHandler.CatalogFileHandler(CatalogSerializer, CryptoSerializer, string, bool, bool)
  nameWithType.vb: CatalogFileHandler.New(CatalogSerializer, CryptoSerializer, String, Boolean, Boolean)
- uid: TAssetBundle.CatalogFileHandler.#ctor*
  name: CatalogFileHandler
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler__ctor_
  commentId: Overload:TAssetBundle.CatalogFileHandler.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TAssetBundle.CatalogFileHandler.CatalogFileHandler
  fullName.vb: TAssetBundle.CatalogFileHandler.New
  nameWithType: CatalogFileHandler.CatalogFileHandler
  nameWithType.vb: CatalogFileHandler.New
- uid: TAssetBundle.CatalogFileHandler.CryptoSerializer
  name: CryptoSerializer
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_CryptoSerializer
  commentId: P:TAssetBundle.CatalogFileHandler.CryptoSerializer
  fullName: TAssetBundle.CatalogFileHandler.CryptoSerializer
  nameWithType: CatalogFileHandler.CryptoSerializer
- uid: TAssetBundle.CatalogFileHandler.CryptoSerializer*
  name: CryptoSerializer
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_CryptoSerializer_
  commentId: Overload:TAssetBundle.CatalogFileHandler.CryptoSerializer
  isSpec: "True"
  fullName: TAssetBundle.CatalogFileHandler.CryptoSerializer
  nameWithType: CatalogFileHandler.CryptoSerializer
- uid: TAssetBundle.CatalogFileHandler.DeleteCatalog(System.String)
  name: DeleteCatalog(string)
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_DeleteCatalog_System_String_
  commentId: M:TAssetBundle.CatalogFileHandler.DeleteCatalog(System.String)
  name.vb: DeleteCatalog(String)
  fullName: TAssetBundle.CatalogFileHandler.DeleteCatalog(string)
  fullName.vb: TAssetBundle.CatalogFileHandler.DeleteCatalog(String)
  nameWithType: CatalogFileHandler.DeleteCatalog(string)
  nameWithType.vb: CatalogFileHandler.DeleteCatalog(String)
- uid: TAssetBundle.CatalogFileHandler.DeleteCatalog*
  name: DeleteCatalog
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_DeleteCatalog_
  commentId: Overload:TAssetBundle.CatalogFileHandler.DeleteCatalog
  isSpec: "True"
  fullName: TAssetBundle.CatalogFileHandler.DeleteCatalog
  nameWithType: CatalogFileHandler.DeleteCatalog
- uid: TAssetBundle.CatalogFileHandler.Load(System.Byte[])
  name: Load(byte[])
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_Load_System_Byte___
  commentId: M:TAssetBundle.CatalogFileHandler.Load(System.Byte[])
  name.vb: Load(Byte())
  fullName: TAssetBundle.CatalogFileHandler.Load(byte[])
  fullName.vb: TAssetBundle.CatalogFileHandler.Load(Byte())
  nameWithType: CatalogFileHandler.Load(byte[])
  nameWithType.vb: CatalogFileHandler.Load(Byte())
- uid: TAssetBundle.CatalogFileHandler.Load*
  name: Load
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_Load_
  commentId: Overload:TAssetBundle.CatalogFileHandler.Load
  isSpec: "True"
  fullName: TAssetBundle.CatalogFileHandler.Load
  nameWithType: CatalogFileHandler.Load
- uid: TAssetBundle.CatalogFileHandler.LoadFromFile(System.String)
  name: LoadFromFile(string)
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_LoadFromFile_System_String_
  commentId: M:TAssetBundle.CatalogFileHandler.LoadFromFile(System.String)
  name.vb: LoadFromFile(String)
  fullName: TAssetBundle.CatalogFileHandler.LoadFromFile(string)
  fullName.vb: TAssetBundle.CatalogFileHandler.LoadFromFile(String)
  nameWithType: CatalogFileHandler.LoadFromFile(string)
  nameWithType.vb: CatalogFileHandler.LoadFromFile(String)
- uid: TAssetBundle.CatalogFileHandler.LoadFromFile*
  name: LoadFromFile
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_LoadFromFile_
  commentId: Overload:TAssetBundle.CatalogFileHandler.LoadFromFile
  isSpec: "True"
  fullName: TAssetBundle.CatalogFileHandler.LoadFromFile
  nameWithType: CatalogFileHandler.LoadFromFile
- uid: TAssetBundle.CatalogFileHandler.Save(TAssetBundle.AssetCatalog,System.String)
  name: Save(AssetCatalog, string)
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_Save_TAssetBundle_AssetCatalog_System_String_
  commentId: M:TAssetBundle.CatalogFileHandler.Save(TAssetBundle.AssetCatalog,System.String)
  name.vb: Save(AssetCatalog, String)
  fullName: TAssetBundle.CatalogFileHandler.Save(TAssetBundle.AssetCatalog, string)
  fullName.vb: TAssetBundle.CatalogFileHandler.Save(TAssetBundle.AssetCatalog, String)
  nameWithType: CatalogFileHandler.Save(AssetCatalog, string)
  nameWithType.vb: CatalogFileHandler.Save(AssetCatalog, String)
- uid: TAssetBundle.CatalogFileHandler.Save*
  name: Save
  href: api/TAssetBundle.CatalogFileHandler.html#TAssetBundle_CatalogFileHandler_Save_
  commentId: Overload:TAssetBundle.CatalogFileHandler.Save
  isSpec: "True"
  fullName: TAssetBundle.CatalogFileHandler.Save
  nameWithType: CatalogFileHandler.Save
- uid: TAssetBundle.CatalogSerializer
  name: CatalogSerializer
  href: api/TAssetBundle.CatalogSerializer.html
  commentId: T:TAssetBundle.CatalogSerializer
  fullName: TAssetBundle.CatalogSerializer
  nameWithType: CatalogSerializer
- uid: TAssetBundle.CatalogSerializer.Read(System.Byte[])
  name: Read(byte[])
  href: api/TAssetBundle.CatalogSerializer.html#TAssetBundle_CatalogSerializer_Read_System_Byte___
  commentId: M:TAssetBundle.CatalogSerializer.Read(System.Byte[])
  name.vb: Read(Byte())
  fullName: TAssetBundle.CatalogSerializer.Read(byte[])
  fullName.vb: TAssetBundle.CatalogSerializer.Read(Byte())
  nameWithType: CatalogSerializer.Read(byte[])
  nameWithType.vb: CatalogSerializer.Read(Byte())
- uid: TAssetBundle.CatalogSerializer.Read*
  name: Read
  href: api/TAssetBundle.CatalogSerializer.html#TAssetBundle_CatalogSerializer_Read_
  commentId: Overload:TAssetBundle.CatalogSerializer.Read
  isSpec: "True"
  fullName: TAssetBundle.CatalogSerializer.Read
  nameWithType: CatalogSerializer.Read
- uid: TAssetBundle.CatalogSerializer.Write(TAssetBundle.AssetCatalog)
  name: Write(AssetCatalog)
  href: api/TAssetBundle.CatalogSerializer.html#TAssetBundle_CatalogSerializer_Write_TAssetBundle_AssetCatalog_
  commentId: M:TAssetBundle.CatalogSerializer.Write(TAssetBundle.AssetCatalog)
  fullName: TAssetBundle.CatalogSerializer.Write(TAssetBundle.AssetCatalog)
  nameWithType: CatalogSerializer.Write(AssetCatalog)
- uid: TAssetBundle.CatalogSerializer.Write*
  name: Write
  href: api/TAssetBundle.CatalogSerializer.html#TAssetBundle_CatalogSerializer_Write_
  commentId: Overload:TAssetBundle.CatalogSerializer.Write
  isSpec: "True"
  fullName: TAssetBundle.CatalogSerializer.Write
  nameWithType: CatalogSerializer.Write
- uid: TAssetBundle.CoreObject
  name: CoreObject
  href: api/TAssetBundle.CoreObject.html
  commentId: T:TAssetBundle.CoreObject
  fullName: TAssetBundle.CoreObject
  nameWithType: CoreObject
- uid: TAssetBundle.CoreObject.AfterEndOfFrame(System.Collections.IEnumerator)
  name: AfterEndOfFrame(IEnumerator)
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_AfterEndOfFrame_System_Collections_IEnumerator_
  commentId: M:TAssetBundle.CoreObject.AfterEndOfFrame(System.Collections.IEnumerator)
  fullName: TAssetBundle.CoreObject.AfterEndOfFrame(System.Collections.IEnumerator)
  nameWithType: CoreObject.AfterEndOfFrame(IEnumerator)
- uid: TAssetBundle.CoreObject.AfterEndOfFrame*
  name: AfterEndOfFrame
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_AfterEndOfFrame_
  commentId: Overload:TAssetBundle.CoreObject.AfterEndOfFrame
  isSpec: "True"
  fullName: TAssetBundle.CoreObject.AfterEndOfFrame
  nameWithType: CoreObject.AfterEndOfFrame
- uid: TAssetBundle.CoreObject.Clear
  name: Clear()
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_Clear
  commentId: M:TAssetBundle.CoreObject.Clear
  fullName: TAssetBundle.CoreObject.Clear()
  nameWithType: CoreObject.Clear()
- uid: TAssetBundle.CoreObject.Clear*
  name: Clear
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_Clear_
  commentId: Overload:TAssetBundle.CoreObject.Clear
  isSpec: "True"
  fullName: TAssetBundle.CoreObject.Clear
  nameWithType: CoreObject.Clear
- uid: TAssetBundle.CoreObject.Instance
  name: Instance
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_Instance
  commentId: P:TAssetBundle.CoreObject.Instance
  fullName: TAssetBundle.CoreObject.Instance
  nameWithType: CoreObject.Instance
- uid: TAssetBundle.CoreObject.Instance*
  name: Instance
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_Instance_
  commentId: Overload:TAssetBundle.CoreObject.Instance
  isSpec: "True"
  fullName: TAssetBundle.CoreObject.Instance
  nameWithType: CoreObject.Instance
- uid: TAssetBundle.CoreObject.WaitForEndOfFrame
  name: WaitForEndOfFrame
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_WaitForEndOfFrame
  commentId: P:TAssetBundle.CoreObject.WaitForEndOfFrame
  fullName: TAssetBundle.CoreObject.WaitForEndOfFrame
  nameWithType: CoreObject.WaitForEndOfFrame
- uid: TAssetBundle.CoreObject.WaitForEndOfFrame*
  name: WaitForEndOfFrame
  href: api/TAssetBundle.CoreObject.html#TAssetBundle_CoreObject_WaitForEndOfFrame_
  commentId: Overload:TAssetBundle.CoreObject.WaitForEndOfFrame
  isSpec: "True"
  fullName: TAssetBundle.CoreObject.WaitForEndOfFrame
  nameWithType: CoreObject.WaitForEndOfFrame
- uid: TAssetBundle.CryptoSerializer
  name: CryptoSerializer
  href: api/TAssetBundle.CryptoSerializer.html
  commentId: T:TAssetBundle.CryptoSerializer
  fullName: TAssetBundle.CryptoSerializer
  nameWithType: CryptoSerializer
- uid: TAssetBundle.CryptoSerializer.Decrypt(System.Byte[])
  name: Decrypt(byte[])
  href: api/TAssetBundle.CryptoSerializer.html#TAssetBundle_CryptoSerializer_Decrypt_System_Byte___
  commentId: M:TAssetBundle.CryptoSerializer.Decrypt(System.Byte[])
  name.vb: Decrypt(Byte())
  fullName: TAssetBundle.CryptoSerializer.Decrypt(byte[])
  fullName.vb: TAssetBundle.CryptoSerializer.Decrypt(Byte())
  nameWithType: CryptoSerializer.Decrypt(byte[])
  nameWithType.vb: CryptoSerializer.Decrypt(Byte())
- uid: TAssetBundle.CryptoSerializer.Decrypt*
  name: Decrypt
  href: api/TAssetBundle.CryptoSerializer.html#TAssetBundle_CryptoSerializer_Decrypt_
  commentId: Overload:TAssetBundle.CryptoSerializer.Decrypt
  isSpec: "True"
  fullName: TAssetBundle.CryptoSerializer.Decrypt
  nameWithType: CryptoSerializer.Decrypt
- uid: TAssetBundle.CryptoSerializer.Encrypt(System.Byte[])
  name: Encrypt(byte[])
  href: api/TAssetBundle.CryptoSerializer.html#TAssetBundle_CryptoSerializer_Encrypt_System_Byte___
  commentId: M:TAssetBundle.CryptoSerializer.Encrypt(System.Byte[])
  name.vb: Encrypt(Byte())
  fullName: TAssetBundle.CryptoSerializer.Encrypt(byte[])
  fullName.vb: TAssetBundle.CryptoSerializer.Encrypt(Byte())
  nameWithType: CryptoSerializer.Encrypt(byte[])
  nameWithType.vb: CryptoSerializer.Encrypt(Byte())
- uid: TAssetBundle.CryptoSerializer.Encrypt*
  name: Encrypt
  href: api/TAssetBundle.CryptoSerializer.html#TAssetBundle_CryptoSerializer_Encrypt_
  commentId: Overload:TAssetBundle.CryptoSerializer.Encrypt
  isSpec: "True"
  fullName: TAssetBundle.CryptoSerializer.Encrypt
  nameWithType: CryptoSerializer.Encrypt
- uid: TAssetBundle.CryptoSerializer.Init(System.String)
  name: Init(string)
  href: api/TAssetBundle.CryptoSerializer.html#TAssetBundle_CryptoSerializer_Init_System_String_
  commentId: M:TAssetBundle.CryptoSerializer.Init(System.String)
  name.vb: Init(String)
  fullName: TAssetBundle.CryptoSerializer.Init(string)
  fullName.vb: TAssetBundle.CryptoSerializer.Init(String)
  nameWithType: CryptoSerializer.Init(string)
  nameWithType.vb: CryptoSerializer.Init(String)
- uid: TAssetBundle.CryptoSerializer.Init*
  name: Init
  href: api/TAssetBundle.CryptoSerializer.html#TAssetBundle_CryptoSerializer_Init_
  commentId: Overload:TAssetBundle.CryptoSerializer.Init
  isSpec: "True"
  fullName: TAssetBundle.CryptoSerializer.Init
  nameWithType: CryptoSerializer.Init
- uid: TAssetBundle.DataStructureExtensions
  name: DataStructureExtensions
  href: api/TAssetBundle.DataStructureExtensions.html
  commentId: T:TAssetBundle.DataStructureExtensions
  fullName: TAssetBundle.DataStructureExtensions
  nameWithType: DataStructureExtensions
- uid: TAssetBundle.DataStructureExtensions.IsLoaded(TAssetBundle.IAssetInfo)
  name: IsLoaded(IAssetInfo)
  href: api/TAssetBundle.DataStructureExtensions.html#TAssetBundle_DataStructureExtensions_IsLoaded_TAssetBundle_IAssetInfo_
  commentId: M:TAssetBundle.DataStructureExtensions.IsLoaded(TAssetBundle.IAssetInfo)
  fullName: TAssetBundle.DataStructureExtensions.IsLoaded(TAssetBundle.IAssetInfo)
  nameWithType: DataStructureExtensions.IsLoaded(IAssetInfo)
- uid: TAssetBundle.DataStructureExtensions.IsLoaded*
  name: IsLoaded
  href: api/TAssetBundle.DataStructureExtensions.html#TAssetBundle_DataStructureExtensions_IsLoaded_
  commentId: Overload:TAssetBundle.DataStructureExtensions.IsLoaded
  isSpec: "True"
  fullName: TAssetBundle.DataStructureExtensions.IsLoaded
  nameWithType: DataStructureExtensions.IsLoaded
- uid: TAssetBundle.DefaultAssetCatalogComparer
  name: DefaultAssetCatalogComparer
  href: api/TAssetBundle.DefaultAssetCatalogComparer.html
  commentId: T:TAssetBundle.DefaultAssetCatalogComparer
  fullName: TAssetBundle.DefaultAssetCatalogComparer
  nameWithType: DefaultAssetCatalogComparer
- uid: TAssetBundle.DefaultAssetCatalogComparer.IsRemoteHigh(TAssetBundle.AssetCatalog,TAssetBundle.AssetCatalog)
  name: IsRemoteHigh(AssetCatalog, AssetCatalog)
  href: api/TAssetBundle.DefaultAssetCatalogComparer.html#TAssetBundle_DefaultAssetCatalogComparer_IsRemoteHigh_TAssetBundle_AssetCatalog_TAssetBundle_AssetCatalog_
  commentId: M:TAssetBundle.DefaultAssetCatalogComparer.IsRemoteHigh(TAssetBundle.AssetCatalog,TAssetBundle.AssetCatalog)
  fullName: TAssetBundle.DefaultAssetCatalogComparer.IsRemoteHigh(TAssetBundle.AssetCatalog, TAssetBundle.AssetCatalog)
  nameWithType: DefaultAssetCatalogComparer.IsRemoteHigh(AssetCatalog, AssetCatalog)
- uid: TAssetBundle.DefaultAssetCatalogComparer.IsRemoteHigh*
  name: IsRemoteHigh
  href: api/TAssetBundle.DefaultAssetCatalogComparer.html#TAssetBundle_DefaultAssetCatalogComparer_IsRemoteHigh_
  commentId: Overload:TAssetBundle.DefaultAssetCatalogComparer.IsRemoteHigh
  isSpec: "True"
  fullName: TAssetBundle.DefaultAssetCatalogComparer.IsRemoteHigh
  nameWithType: DefaultAssetCatalogComparer.IsRemoteHigh
- uid: TAssetBundle.DefaultTagComparer
  name: DefaultTagComparer
  href: api/TAssetBundle.DefaultTagComparer.html
  commentId: T:TAssetBundle.DefaultTagComparer
  fullName: TAssetBundle.DefaultTagComparer
  nameWithType: DefaultTagComparer
- uid: TAssetBundle.DefaultTagComparer.IsInclude(System.String,System.String)
  name: IsInclude(string, string)
  href: api/TAssetBundle.DefaultTagComparer.html#TAssetBundle_DefaultTagComparer_IsInclude_System_String_System_String_
  commentId: M:TAssetBundle.DefaultTagComparer.IsInclude(System.String,System.String)
  name.vb: IsInclude(String, String)
  fullName: TAssetBundle.DefaultTagComparer.IsInclude(string, string)
  fullName.vb: TAssetBundle.DefaultTagComparer.IsInclude(String, String)
  nameWithType: DefaultTagComparer.IsInclude(string, string)
  nameWithType.vb: DefaultTagComparer.IsInclude(String, String)
- uid: TAssetBundle.DefaultTagComparer.IsInclude*
  name: IsInclude
  href: api/TAssetBundle.DefaultTagComparer.html#TAssetBundle_DefaultTagComparer_IsInclude_
  commentId: Overload:TAssetBundle.DefaultTagComparer.IsInclude
  isSpec: "True"
  fullName: TAssetBundle.DefaultTagComparer.IsInclude
  nameWithType: DefaultTagComparer.IsInclude
- uid: TAssetBundle.Defines
  name: Defines
  href: api/TAssetBundle.Defines.html
  commentId: T:TAssetBundle.Defines
  fullName: TAssetBundle.Defines
  nameWithType: Defines
- uid: TAssetBundle.Defines.CatalogVersion
  name: CatalogVersion
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_CatalogVersion
  commentId: F:TAssetBundle.Defines.CatalogVersion
  fullName: TAssetBundle.Defines.CatalogVersion
  nameWithType: Defines.CatalogVersion
- uid: TAssetBundle.Defines.DataPathPrefix
  name: DataPathPrefix
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_DataPathPrefix
  commentId: F:TAssetBundle.Defines.DataPathPrefix
  fullName: TAssetBundle.Defines.DataPathPrefix
  nameWithType: Defines.DataPathPrefix
- uid: TAssetBundle.Defines.DefaultCatalogName
  name: DefaultCatalogName
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_DefaultCatalogName
  commentId: F:TAssetBundle.Defines.DefaultCatalogName
  fullName: TAssetBundle.Defines.DefaultCatalogName
  nameWithType: Defines.DefaultCatalogName
- uid: TAssetBundle.Defines.DefaultHash
  name: DefaultHash
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_DefaultHash
  commentId: F:TAssetBundle.Defines.DefaultHash
  fullName: TAssetBundle.Defines.DefaultHash
  nameWithType: Defines.DefaultHash
- uid: TAssetBundle.Defines.HashFileExtensions
  name: HashFileExtensions
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_HashFileExtensions
  commentId: F:TAssetBundle.Defines.HashFileExtensions
  fullName: TAssetBundle.Defines.HashFileExtensions
  nameWithType: Defines.HashFileExtensions
- uid: TAssetBundle.Defines.SettingFileName
  name: SettingFileName
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_SettingFileName
  commentId: F:TAssetBundle.Defines.SettingFileName
  fullName: TAssetBundle.Defines.SettingFileName
  nameWithType: Defines.SettingFileName
- uid: TAssetBundle.Defines.SettingFilePath
  name: SettingFilePath
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_SettingFilePath
  commentId: F:TAssetBundle.Defines.SettingFilePath
  fullName: TAssetBundle.Defines.SettingFilePath
  nameWithType: Defines.SettingFilePath
- uid: TAssetBundle.Defines.StreamingPathPrefix
  name: StreamingPathPrefix
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_StreamingPathPrefix
  commentId: F:TAssetBundle.Defines.StreamingPathPrefix
  fullName: TAssetBundle.Defines.StreamingPathPrefix
  nameWithType: Defines.StreamingPathPrefix
- uid: TAssetBundle.Defines.Version
  name: Version
  href: api/TAssetBundle.Defines.html#TAssetBundle_Defines_Version
  commentId: F:TAssetBundle.Defines.Version
  fullName: TAssetBundle.Defines.Version
  nameWithType: Defines.Version
- uid: TAssetBundle.EBuildIncludeAssetBundle
  name: EBuildIncludeAssetBundle
  href: api/TAssetBundle.EBuildIncludeAssetBundle.html
  commentId: T:TAssetBundle.EBuildIncludeAssetBundle
  fullName: TAssetBundle.EBuildIncludeAssetBundle
  nameWithType: EBuildIncludeAssetBundle
- uid: TAssetBundle.EBuildIncludeAssetBundle.All
  name: All
  href: api/TAssetBundle.EBuildIncludeAssetBundle.html#TAssetBundle_EBuildIncludeAssetBundle_All
  commentId: F:TAssetBundle.EBuildIncludeAssetBundle.All
  fullName: TAssetBundle.EBuildIncludeAssetBundle.All
  nameWithType: EBuildIncludeAssetBundle.All
- uid: TAssetBundle.EBuildIncludeAssetBundle.BuiltinOnly
  name: BuiltinOnly
  href: api/TAssetBundle.EBuildIncludeAssetBundle.html#TAssetBundle_EBuildIncludeAssetBundle_BuiltinOnly
  commentId: F:TAssetBundle.EBuildIncludeAssetBundle.BuiltinOnly
  fullName: TAssetBundle.EBuildIncludeAssetBundle.BuiltinOnly
  nameWithType: EBuildIncludeAssetBundle.BuiltinOnly
- uid: TAssetBundle.EBuildIncludeAssetBundle.None
  name: None
  href: api/TAssetBundle.EBuildIncludeAssetBundle.html#TAssetBundle_EBuildIncludeAssetBundle_None
  commentId: F:TAssetBundle.EBuildIncludeAssetBundle.None
  fullName: TAssetBundle.EBuildIncludeAssetBundle.None
  nameWithType: EBuildIncludeAssetBundle.None
- uid: TAssetBundle.EEditorPlayMode
  name: EEditorPlayMode
  href: api/TAssetBundle.EEditorPlayMode.html
  commentId: T:TAssetBundle.EEditorPlayMode
  fullName: TAssetBundle.EEditorPlayMode
  nameWithType: EEditorPlayMode
- uid: TAssetBundle.EEditorPlayMode.AssetBundle
  name: AssetBundle
  href: api/TAssetBundle.EEditorPlayMode.html#TAssetBundle_EEditorPlayMode_AssetBundle
  commentId: F:TAssetBundle.EEditorPlayMode.AssetBundle
  fullName: TAssetBundle.EEditorPlayMode.AssetBundle
  nameWithType: EEditorPlayMode.AssetBundle
- uid: TAssetBundle.EEditorPlayMode.EditorAsset
  name: EditorAsset
  href: api/TAssetBundle.EEditorPlayMode.html#TAssetBundle_EEditorPlayMode_EditorAsset
  commentId: F:TAssetBundle.EEditorPlayMode.EditorAsset
  fullName: TAssetBundle.EEditorPlayMode.EditorAsset
  nameWithType: EEditorPlayMode.EditorAsset
- uid: TAssetBundle.Editor
  name: TAssetBundle.Editor
  href: api/TAssetBundle.Editor.html
  commentId: N:TAssetBundle.Editor
  fullName: TAssetBundle.Editor
  nameWithType: TAssetBundle.Editor
- uid: TAssetBundle.Editor.AssetBundleBuildInfo
  name: AssetBundleBuildInfo
  href: api/TAssetBundle.Editor.AssetBundleBuildInfo.html
  commentId: T:TAssetBundle.Editor.AssetBundleBuildInfo
  fullName: TAssetBundle.Editor.AssetBundleBuildInfo
  nameWithType: AssetBundleBuildInfo
- uid: TAssetBundle.Editor.AssetBundleBuildInfo.ObjectPaths
  name: ObjectPaths
  href: api/TAssetBundle.Editor.AssetBundleBuildInfo.html#TAssetBundle_Editor_AssetBundleBuildInfo_ObjectPaths
  commentId: P:TAssetBundle.Editor.AssetBundleBuildInfo.ObjectPaths
  fullName: TAssetBundle.Editor.AssetBundleBuildInfo.ObjectPaths
  nameWithType: AssetBundleBuildInfo.ObjectPaths
- uid: TAssetBundle.Editor.AssetBundleBuildInfo.ObjectPaths*
  name: ObjectPaths
  href: api/TAssetBundle.Editor.AssetBundleBuildInfo.html#TAssetBundle_Editor_AssetBundleBuildInfo_ObjectPaths_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuildInfo.ObjectPaths
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuildInfo.ObjectPaths
  nameWithType: AssetBundleBuildInfo.ObjectPaths
- uid: TAssetBundle.Editor.AssetBundleBuildInfo.buildName
  name: buildName
  href: api/TAssetBundle.Editor.AssetBundleBuildInfo.html#TAssetBundle_Editor_AssetBundleBuildInfo_buildName
  commentId: F:TAssetBundle.Editor.AssetBundleBuildInfo.buildName
  fullName: TAssetBundle.Editor.AssetBundleBuildInfo.buildName
  nameWithType: AssetBundleBuildInfo.buildName
- uid: TAssetBundle.Editor.AssetBundleBuildInfo.objects
  name: objects
  href: api/TAssetBundle.Editor.AssetBundleBuildInfo.html#TAssetBundle_Editor_AssetBundleBuildInfo_objects
  commentId: F:TAssetBundle.Editor.AssetBundleBuildInfo.objects
  fullName: TAssetBundle.Editor.AssetBundleBuildInfo.objects
  nameWithType: AssetBundleBuildInfo.objects
- uid: TAssetBundle.Editor.AssetBundleBuilder
  name: AssetBundleBuilder
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html
  commentId: T:TAssetBundle.Editor.AssetBundleBuilder
  fullName: TAssetBundle.Editor.AssetBundleBuilder
  nameWithType: AssetBundleBuilder
- uid: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle
  name: BuildAssetBundle()
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_BuildAssetBundle
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle
  fullName: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle()
  nameWithType: AssetBundleBuilder.BuildAssetBundle()
- uid: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget)
  name: BuildAssetBundle(BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_BuildAssetBundle_UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.BuildAssetBundle(BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget,System.String)
  name: BuildAssetBundle(BuildTarget, string)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_BuildAssetBundle_UnityEditor_BuildTarget_System_String_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget,System.String)
  name.vb: BuildAssetBundle(BuildTarget, String)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget, string)
  fullName.vb: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle(UnityEditor.BuildTarget, String)
  nameWithType: AssetBundleBuilder.BuildAssetBundle(BuildTarget, string)
  nameWithType.vb: AssetBundleBuilder.BuildAssetBundle(BuildTarget, String)
- uid: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle*
  name: BuildAssetBundle
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_BuildAssetBundle_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.BuildAssetBundle
  nameWithType: AssetBundleBuilder.BuildAssetBundle
- uid: TAssetBundle.Editor.AssetBundleBuilder.ClearAllAssetBundleBuildInfos
  name: ClearAllAssetBundleBuildInfos()
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_ClearAllAssetBundleBuildInfos
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.ClearAllAssetBundleBuildInfos
  fullName: TAssetBundle.Editor.AssetBundleBuilder.ClearAllAssetBundleBuildInfos()
  nameWithType: AssetBundleBuilder.ClearAllAssetBundleBuildInfos()
- uid: TAssetBundle.Editor.AssetBundleBuilder.ClearAllAssetBundleBuildInfos*
  name: ClearAllAssetBundleBuildInfos
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_ClearAllAssetBundleBuildInfos_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.ClearAllAssetBundleBuildInfos
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.ClearAllAssetBundleBuildInfos
  nameWithType: AssetBundleBuilder.ClearAllAssetBundleBuildInfos
- uid: TAssetBundle.Editor.AssetBundleBuilder.ClearBuildCache(UnityEditor.BuildTarget)
  name: ClearBuildCache(BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_ClearBuildCache_UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.ClearBuildCache(UnityEditor.BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.ClearBuildCache(UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.ClearBuildCache(BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.ClearBuildCache*
  name: ClearBuildCache
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_ClearBuildCache_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.ClearBuildCache
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.ClearBuildCache
  nameWithType: AssetBundleBuilder.ClearBuildCache
- uid: TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildTarget)
  name: DryRunBuild(string, AssetBundleBuild[], BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_DryRunBuild_System_String_UnityEditor_AssetBundleBuild___UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildTarget)
  name.vb: DryRunBuild(String, AssetBundleBuild(), BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild(string, UnityEditor.AssetBundleBuild[], UnityEditor.BuildTarget)
  fullName.vb: TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild(String, UnityEditor.AssetBundleBuild(), UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.DryRunBuild(string, AssetBundleBuild[], BuildTarget)
  nameWithType.vb: AssetBundleBuilder.DryRunBuild(String, AssetBundleBuild(), BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild*
  name: DryRunBuild
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_DryRunBuild_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.DryRunBuild
  nameWithType: AssetBundleBuilder.DryRunBuild
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetAllManifests
  name: GetAllManifests()
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetAllManifests
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.GetAllManifests
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetAllManifests()
  nameWithType: AssetBundleBuilder.GetAllManifests()
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetAllManifests*
  name: GetAllManifests
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetAllManifests_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.GetAllManifests
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetAllManifests
  nameWithType: AssetBundleBuilder.GetAllManifests
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds(TAssetBundle.Editor.TAssetBundleManifest[])
  name: GetAssetBundleBuilds(TAssetBundleManifest[])
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetAssetBundleBuilds_TAssetBundle_Editor_TAssetBundleManifest___
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds(TAssetBundle.Editor.TAssetBundleManifest[])
  name.vb: GetAssetBundleBuilds(TAssetBundleManifest())
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds(TAssetBundle.Editor.TAssetBundleManifest[])
  fullName.vb: TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds(TAssetBundle.Editor.TAssetBundleManifest())
  nameWithType: AssetBundleBuilder.GetAssetBundleBuilds(TAssetBundleManifest[])
  nameWithType.vb: AssetBundleBuilder.GetAssetBundleBuilds(TAssetBundleManifest())
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds*
  name: GetAssetBundleBuilds
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetAssetBundleBuilds_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetAssetBundleBuilds
  nameWithType: AssetBundleBuilder.GetAssetBundleBuilds
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetBuiltinOutputPath(UnityEditor.BuildTarget)
  name: GetBuiltinOutputPath(BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetBuiltinOutputPath_UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.GetBuiltinOutputPath(UnityEditor.BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetBuiltinOutputPath(UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.GetBuiltinOutputPath(BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetBuiltinOutputPath*
  name: GetBuiltinOutputPath
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetBuiltinOutputPath_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.GetBuiltinOutputPath
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetBuiltinOutputPath
  nameWithType: AssetBundleBuilder.GetBuiltinOutputPath
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetOutputPath(UnityEditor.BuildTarget)
  name: GetOutputPath(BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetOutputPath_UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.GetOutputPath(UnityEditor.BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetOutputPath(UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.GetOutputPath(BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.GetOutputPath*
  name: GetOutputPath
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_GetOutputPath_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.GetOutputPath
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.GetOutputPath
  nameWithType: AssetBundleBuilder.GetOutputPath
- uid: TAssetBundle.Editor.AssetBundleBuilder.OnBuildCompleted
  name: OnBuildCompleted
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_OnBuildCompleted
  commentId: E:TAssetBundle.Editor.AssetBundleBuilder.OnBuildCompleted
  fullName: TAssetBundle.Editor.AssetBundleBuilder.OnBuildCompleted
  nameWithType: AssetBundleBuilder.OnBuildCompleted
- uid: TAssetBundle.Editor.AssetBundleBuilder.PostprocessBuild(UnityEditor.BuildTarget)
  name: PostprocessBuild(BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_PostprocessBuild_UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.PostprocessBuild(UnityEditor.BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.PostprocessBuild(UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.PostprocessBuild(BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.PostprocessBuild*
  name: PostprocessBuild
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_PostprocessBuild_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.PostprocessBuild
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.PostprocessBuild
  nameWithType: AssetBundleBuilder.PostprocessBuild
- uid: TAssetBundle.Editor.AssetBundleBuilder.PreprocessBuild(UnityEditor.BuildTarget)
  name: PreprocessBuild(BuildTarget)
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_PreprocessBuild_UnityEditor_BuildTarget_
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.PreprocessBuild(UnityEditor.BuildTarget)
  fullName: TAssetBundle.Editor.AssetBundleBuilder.PreprocessBuild(UnityEditor.BuildTarget)
  nameWithType: AssetBundleBuilder.PreprocessBuild(BuildTarget)
- uid: TAssetBundle.Editor.AssetBundleBuilder.PreprocessBuild*
  name: PreprocessBuild
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_PreprocessBuild_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.PreprocessBuild
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.PreprocessBuild
  nameWithType: AssetBundleBuilder.PreprocessBuild
- uid: TAssetBundle.Editor.AssetBundleBuilder.RunAllCompositionStrategy
  name: RunAllCompositionStrategy()
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_RunAllCompositionStrategy
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.RunAllCompositionStrategy
  fullName: TAssetBundle.Editor.AssetBundleBuilder.RunAllCompositionStrategy()
  nameWithType: AssetBundleBuilder.RunAllCompositionStrategy()
- uid: TAssetBundle.Editor.AssetBundleBuilder.RunAllCompositionStrategy*
  name: RunAllCompositionStrategy
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_RunAllCompositionStrategy_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.RunAllCompositionStrategy
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.RunAllCompositionStrategy
  nameWithType: AssetBundleBuilder.RunAllCompositionStrategy
- uid: TAssetBundle.Editor.AssetBundleBuilder.SaveSettings
  name: SaveSettings()
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_SaveSettings
  commentId: M:TAssetBundle.Editor.AssetBundleBuilder.SaveSettings
  fullName: TAssetBundle.Editor.AssetBundleBuilder.SaveSettings()
  nameWithType: AssetBundleBuilder.SaveSettings()
- uid: TAssetBundle.Editor.AssetBundleBuilder.SaveSettings*
  name: SaveSettings
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_SaveSettings_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.SaveSettings
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.SaveSettings
  nameWithType: AssetBundleBuilder.SaveSettings
- uid: TAssetBundle.Editor.AssetBundleBuilder.Settings
  name: Settings
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_Settings
  commentId: P:TAssetBundle.Editor.AssetBundleBuilder.Settings
  fullName: TAssetBundle.Editor.AssetBundleBuilder.Settings
  nameWithType: AssetBundleBuilder.Settings
- uid: TAssetBundle.Editor.AssetBundleBuilder.Settings*
  name: Settings
  href: api/TAssetBundle.Editor.AssetBundleBuilder.html#TAssetBundle_Editor_AssetBundleBuilder_Settings_
  commentId: Overload:TAssetBundle.Editor.AssetBundleBuilder.Settings
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetBundleBuilder.Settings
  nameWithType: AssetBundleBuilder.Settings
- uid: TAssetBundle.Editor.AssetListWindow
  name: AssetListWindow
  href: api/TAssetBundle.Editor.AssetListWindow.html
  commentId: T:TAssetBundle.Editor.AssetListWindow
  fullName: TAssetBundle.Editor.AssetListWindow
  nameWithType: AssetListWindow
- uid: TAssetBundle.Editor.AssetListWindow.Show(System.String,UnityEngine.Object[],System.Action{UnityEngine.Object})
  name: Show(string, Object[], Action<Object>)
  href: api/TAssetBundle.Editor.AssetListWindow.html#TAssetBundle_Editor_AssetListWindow_Show_System_String_UnityEngine_Object___System_Action_UnityEngine_Object__
  commentId: M:TAssetBundle.Editor.AssetListWindow.Show(System.String,UnityEngine.Object[],System.Action{UnityEngine.Object})
  name.vb: Show(String, Object(), Action(Of Object))
  fullName: TAssetBundle.Editor.AssetListWindow.Show(string, UnityEngine.Object[], System.Action<UnityEngine.Object>)
  fullName.vb: TAssetBundle.Editor.AssetListWindow.Show(String, UnityEngine.Object(), System.Action(Of UnityEngine.Object))
  nameWithType: AssetListWindow.Show(string, Object[], Action<Object>)
  nameWithType.vb: AssetListWindow.Show(String, Object(), Action(Of Object))
- uid: TAssetBundle.Editor.AssetListWindow.Show*
  name: Show
  href: api/TAssetBundle.Editor.AssetListWindow.html#TAssetBundle_Editor_AssetListWindow_Show_
  commentId: Overload:TAssetBundle.Editor.AssetListWindow.Show
  isSpec: "True"
  fullName: TAssetBundle.Editor.AssetListWindow.Show
  nameWithType: AssetListWindow.Show
- uid: TAssetBundle.Editor.ClearCompositionStrategy
  name: ClearCompositionStrategy
  href: api/TAssetBundle.Editor.ClearCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.ClearCompositionStrategy
  fullName: TAssetBundle.Editor.ClearCompositionStrategy
  nameWithType: ClearCompositionStrategy
- uid: TAssetBundle.Editor.ClearCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.ClearCompositionStrategy.html#TAssetBundle_Editor_ClearCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.ClearCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.ClearCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: ClearCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.ClearCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.ClearCompositionStrategy.html#TAssetBundle_Editor_ClearCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.ClearCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.ClearCompositionStrategy.Run
  nameWithType: ClearCompositionStrategy.Run
- uid: TAssetBundle.Editor.CompositionStrategyBuildData
  name: CompositionStrategyBuildData
  href: api/TAssetBundle.Editor.CompositionStrategyBuildData.html
  commentId: T:TAssetBundle.Editor.CompositionStrategyBuildData
  fullName: TAssetBundle.Editor.CompositionStrategyBuildData
  nameWithType: CompositionStrategyBuildData
- uid: TAssetBundle.Editor.CompositionStrategyBuildData.assetBundleBuildName
  name: assetBundleBuildName
  href: api/TAssetBundle.Editor.CompositionStrategyBuildData.html#TAssetBundle_Editor_CompositionStrategyBuildData_assetBundleBuildName
  commentId: F:TAssetBundle.Editor.CompositionStrategyBuildData.assetBundleBuildName
  fullName: TAssetBundle.Editor.CompositionStrategyBuildData.assetBundleBuildName
  nameWithType: CompositionStrategyBuildData.assetBundleBuildName
- uid: TAssetBundle.Editor.CompositionStrategyInfo
  name: CompositionStrategyInfo
  href: api/TAssetBundle.Editor.CompositionStrategyInfo.html
  commentId: T:TAssetBundle.Editor.CompositionStrategyInfo
  fullName: TAssetBundle.Editor.CompositionStrategyInfo
  nameWithType: CompositionStrategyInfo
- uid: TAssetBundle.Editor.CompositionStrategyInfo.data
  name: data
  href: api/TAssetBundle.Editor.CompositionStrategyInfo.html#TAssetBundle_Editor_CompositionStrategyInfo_data
  commentId: F:TAssetBundle.Editor.CompositionStrategyInfo.data
  fullName: TAssetBundle.Editor.CompositionStrategyInfo.data
  nameWithType: CompositionStrategyInfo.data
- uid: TAssetBundle.Editor.CompositionStrategyInfo.strategy
  name: strategy
  href: api/TAssetBundle.Editor.CompositionStrategyInfo.html#TAssetBundle_Editor_CompositionStrategyInfo_strategy
  commentId: F:TAssetBundle.Editor.CompositionStrategyInfo.strategy
  fullName: TAssetBundle.Editor.CompositionStrategyInfo.strategy
  nameWithType: CompositionStrategyInfo.strategy
- uid: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer
  name: CompositionStrategyInfoPropertyDrawer
  href: api/TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.html
  commentId: T:TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer
  fullName: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer
  nameWithType: CompositionStrategyInfoPropertyDrawer
- uid: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  name: GetPropertyHeight(SerializedProperty, GUIContent)
  href: api/TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.html#TAssetBundle_Editor_CompositionStrategyInfoPropertyDrawer_GetPropertyHeight_UnityEditor_SerializedProperty_UnityEngine_GUIContent_
  commentId: M:TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  fullName: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent)
  nameWithType: CompositionStrategyInfoPropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
- uid: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.GetPropertyHeight*
  name: GetPropertyHeight
  href: api/TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.html#TAssetBundle_Editor_CompositionStrategyInfoPropertyDrawer_GetPropertyHeight_
  commentId: Overload:TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.GetPropertyHeight
  isSpec: "True"
  fullName: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.GetPropertyHeight
  nameWithType: CompositionStrategyInfoPropertyDrawer.GetPropertyHeight
- uid: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  name: OnGUI(Rect, SerializedProperty, GUIContent)
  href: api/TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.html#TAssetBundle_Editor_CompositionStrategyInfoPropertyDrawer_OnGUI_UnityEngine_Rect_UnityEditor_SerializedProperty_UnityEngine_GUIContent_
  commentId: M:TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  fullName: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)
  nameWithType: CompositionStrategyInfoPropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
- uid: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.OnGUI*
  name: OnGUI
  href: api/TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.html#TAssetBundle_Editor_CompositionStrategyInfoPropertyDrawer_OnGUI_
  commentId: Overload:TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.OnGUI
  isSpec: "True"
  fullName: TAssetBundle.Editor.CompositionStrategyInfoPropertyDrawer.OnGUI
  nameWithType: CompositionStrategyInfoPropertyDrawer.OnGUI
- uid: TAssetBundle.Editor.DefaultCompositionStrategy
  name: DefaultCompositionStrategy
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.DefaultCompositionStrategy
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy
  nameWithType: DefaultCompositionStrategy
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType
  name: DefaultCompositionStrategy.ECompositionType
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.html
  commentId: T:TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType
  nameWithType: DefaultCompositionStrategy.ECompositionType
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.Separately
  name: Separately
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.html#TAssetBundle_Editor_DefaultCompositionStrategy_ECompositionType_Separately
  commentId: F:TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.Separately
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.Separately
  nameWithType: DefaultCompositionStrategy.ECompositionType.Separately
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.Together
  name: Together
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.html#TAssetBundle_Editor_DefaultCompositionStrategy_ECompositionType_Together
  commentId: F:TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.Together
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.ECompositionType.Together
  nameWithType: DefaultCompositionStrategy.ECompositionType.Together
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.html#TAssetBundle_Editor_DefaultCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.DefaultCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: DefaultCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.html#TAssetBundle_Editor_DefaultCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.DefaultCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.Run
  nameWithType: DefaultCompositionStrategy.Run
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.composition
  name: composition
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.html#TAssetBundle_Editor_DefaultCompositionStrategy_composition
  commentId: F:TAssetBundle.Editor.DefaultCompositionStrategy.composition
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.composition
  nameWithType: DefaultCompositionStrategy.composition
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.includeFile
  name: includeFile
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.html#TAssetBundle_Editor_DefaultCompositionStrategy_includeFile
  commentId: F:TAssetBundle.Editor.DefaultCompositionStrategy.includeFile
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.includeFile
  nameWithType: DefaultCompositionStrategy.includeFile
- uid: TAssetBundle.Editor.DefaultCompositionStrategy.includeFolder
  name: includeFolder
  href: api/TAssetBundle.Editor.DefaultCompositionStrategy.html#TAssetBundle_Editor_DefaultCompositionStrategy_includeFolder
  commentId: F:TAssetBundle.Editor.DefaultCompositionStrategy.includeFolder
  fullName: TAssetBundle.Editor.DefaultCompositionStrategy.includeFolder
  nameWithType: DefaultCompositionStrategy.includeFolder
- uid: TAssetBundle.Editor.EAssetBundleBuildName
  name: EAssetBundleBuildName
  href: api/TAssetBundle.Editor.EAssetBundleBuildName.html
  commentId: T:TAssetBundle.Editor.EAssetBundleBuildName
  fullName: TAssetBundle.Editor.EAssetBundleBuildName
  nameWithType: EAssetBundleBuildName
- uid: TAssetBundle.Editor.EAssetBundleBuildName.FirstObject
  name: FirstObject
  href: api/TAssetBundle.Editor.EAssetBundleBuildName.html#TAssetBundle_Editor_EAssetBundleBuildName_FirstObject
  commentId: F:TAssetBundle.Editor.EAssetBundleBuildName.FirstObject
  fullName: TAssetBundle.Editor.EAssetBundleBuildName.FirstObject
  nameWithType: EAssetBundleBuildName.FirstObject
- uid: TAssetBundle.Editor.EAssetBundleBuildName.Number
  name: Number
  href: api/TAssetBundle.Editor.EAssetBundleBuildName.html#TAssetBundle_Editor_EAssetBundleBuildName_Number
  commentId: F:TAssetBundle.Editor.EAssetBundleBuildName.Number
  fullName: TAssetBundle.Editor.EAssetBundleBuildName.Number
  nameWithType: EAssetBundleBuildName.Number
- uid: TAssetBundle.Editor.EditorGUIUtil
  name: EditorGUIUtil
  href: api/TAssetBundle.Editor.EditorGUIUtil.html
  commentId: T:TAssetBundle.Editor.EditorGUIUtil
  fullName: TAssetBundle.Editor.EditorGUIUtil
  nameWithType: EditorGUIUtil
- uid: TAssetBundle.Editor.EditorGUIUtil.BeginColor(UnityEngine.Color)
  name: BeginColor(Color)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_BeginColor_UnityEngine_Color_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.BeginColor(UnityEngine.Color)
  fullName: TAssetBundle.Editor.EditorGUIUtil.BeginColor(UnityEngine.Color)
  nameWithType: EditorGUIUtil.BeginColor(Color)
- uid: TAssetBundle.Editor.EditorGUIUtil.BeginColor*
  name: BeginColor
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_BeginColor_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.BeginColor
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.BeginColor
  nameWithType: EditorGUIUtil.BeginColor
- uid: TAssetBundle.Editor.EditorGUIUtil.BeginContentColor(UnityEngine.Color)
  name: BeginContentColor(Color)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_BeginContentColor_UnityEngine_Color_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.BeginContentColor(UnityEngine.Color)
  fullName: TAssetBundle.Editor.EditorGUIUtil.BeginContentColor(UnityEngine.Color)
  nameWithType: EditorGUIUtil.BeginContentColor(Color)
- uid: TAssetBundle.Editor.EditorGUIUtil.BeginContentColor*
  name: BeginContentColor
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_BeginContentColor_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.BeginContentColor
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.BeginContentColor
  nameWithType: EditorGUIUtil.BeginContentColor
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle(System.String,TAssetBundle.IActiveAssetBundleInfo,System.Boolean)
  name: DrawActiveAssetBundle(string, IActiveAssetBundleInfo, bool)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawActiveAssetBundle_System_String_TAssetBundle_IActiveAssetBundleInfo_System_Boolean_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle(System.String,TAssetBundle.IActiveAssetBundleInfo,System.Boolean)
  name.vb: DrawActiveAssetBundle(String, IActiveAssetBundleInfo, Boolean)
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle(string, TAssetBundle.IActiveAssetBundleInfo, bool)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle(String, TAssetBundle.IActiveAssetBundleInfo, Boolean)
  nameWithType: EditorGUIUtil.DrawActiveAssetBundle(string, IActiveAssetBundleInfo, bool)
  nameWithType.vb: EditorGUIUtil.DrawActiveAssetBundle(String, IActiveAssetBundleInfo, Boolean)
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle*
  name: DrawActiveAssetBundle
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawActiveAssetBundle_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawActiveAssetBundle
  nameWithType: EditorGUIUtil.DrawActiveAssetBundle
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawAsset(TAssetBundle.IAssetInfo,UnityEngine.GUILayoutOption[])
  name: DrawAsset(IAssetInfo, params GUILayoutOption[])
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawAsset_TAssetBundle_IAssetInfo_UnityEngine_GUILayoutOption___
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.DrawAsset(TAssetBundle.IAssetInfo,UnityEngine.GUILayoutOption[])
  name.vb: DrawAsset(IAssetInfo, ParamArray GUILayoutOption())
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawAsset(TAssetBundle.IAssetInfo, params UnityEngine.GUILayoutOption[])
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.DrawAsset(TAssetBundle.IAssetInfo, ParamArray UnityEngine.GUILayoutOption())
  nameWithType: EditorGUIUtil.DrawAsset(IAssetInfo, params GUILayoutOption[])
  nameWithType.vb: EditorGUIUtil.DrawAsset(IAssetInfo, ParamArray GUILayoutOption())
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawAsset*
  name: DrawAsset
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawAsset_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.DrawAsset
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawAsset
  nameWithType: EditorGUIUtil.DrawAsset
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawSort(System.String,System.Boolean,System.Action{System.Boolean},UnityEngine.GUILayoutOption[])
  name: DrawSort(string, bool, Action<bool>, params GUILayoutOption[])
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawSort_System_String_System_Boolean_System_Action_System_Boolean__UnityEngine_GUILayoutOption___
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.DrawSort(System.String,System.Boolean,System.Action{System.Boolean},UnityEngine.GUILayoutOption[])
  name.vb: DrawSort(String, Boolean, Action(Of Boolean), ParamArray GUILayoutOption())
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawSort(string, bool, System.Action<bool>, params UnityEngine.GUILayoutOption[])
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.DrawSort(String, Boolean, System.Action(Of Boolean), ParamArray UnityEngine.GUILayoutOption())
  nameWithType: EditorGUIUtil.DrawSort(string, bool, Action<bool>, params GUILayoutOption[])
  nameWithType.vb: EditorGUIUtil.DrawSort(String, Boolean, Action(Of Boolean), ParamArray GUILayoutOption())
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawSort*
  name: DrawSort
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawSort_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.DrawSort
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawSort
  nameWithType: EditorGUIUtil.DrawSort
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawTextField(System.String,System.String,System.Action{System.String})
  name: DrawTextField(string, string, Action<string>)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawTextField_System_String_System_String_System_Action_System_String__
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.DrawTextField(System.String,System.String,System.Action{System.String})
  name.vb: DrawTextField(String, String, Action(Of String))
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawTextField(string, string, System.Action<string>)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.DrawTextField(String, String, System.Action(Of String))
  nameWithType: EditorGUIUtil.DrawTextField(string, string, Action<string>)
  nameWithType.vb: EditorGUIUtil.DrawTextField(String, String, Action(Of String))
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawTextField*
  name: DrawTextField
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawTextField_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.DrawTextField
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawTextField
  nameWithType: EditorGUIUtil.DrawTextField
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawToggle(System.String,System.Boolean,System.Action{System.Boolean})
  name: DrawToggle(string, bool, Action<bool>)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawToggle_System_String_System_Boolean_System_Action_System_Boolean__
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.DrawToggle(System.String,System.Boolean,System.Action{System.Boolean})
  name.vb: DrawToggle(String, Boolean, Action(Of Boolean))
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawToggle(string, bool, System.Action<bool>)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.DrawToggle(String, Boolean, System.Action(Of Boolean))
  nameWithType: EditorGUIUtil.DrawToggle(string, bool, Action<bool>)
  nameWithType.vb: EditorGUIUtil.DrawToggle(String, Boolean, Action(Of Boolean))
- uid: TAssetBundle.Editor.EditorGUIUtil.DrawToggle*
  name: DrawToggle
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_DrawToggle_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.DrawToggle
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.DrawToggle
  nameWithType: EditorGUIUtil.DrawToggle
- uid: TAssetBundle.Editor.EditorGUIUtil.EndColor(UnityEngine.Color)
  name: EndColor(Color)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_EndColor_UnityEngine_Color_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.EndColor(UnityEngine.Color)
  fullName: TAssetBundle.Editor.EditorGUIUtil.EndColor(UnityEngine.Color)
  nameWithType: EditorGUIUtil.EndColor(Color)
- uid: TAssetBundle.Editor.EditorGUIUtil.EndColor*
  name: EndColor
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_EndColor_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.EndColor
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.EndColor
  nameWithType: EditorGUIUtil.EndColor
- uid: TAssetBundle.Editor.EditorGUIUtil.EndContentColor(UnityEngine.Color)
  name: EndContentColor(Color)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_EndContentColor_UnityEngine_Color_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.EndContentColor(UnityEngine.Color)
  fullName: TAssetBundle.Editor.EditorGUIUtil.EndContentColor(UnityEngine.Color)
  nameWithType: EditorGUIUtil.EndContentColor(Color)
- uid: TAssetBundle.Editor.EditorGUIUtil.EndContentColor*
  name: EndContentColor
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_EndContentColor_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.EndContentColor
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.EndContentColor
  nameWithType: EditorGUIUtil.EndContentColor
- uid: TAssetBundle.Editor.EditorGUIUtil.FloatField(System.String,System.String,System.Single)
  name: FloatField(string, string, float)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_FloatField_System_String_System_String_System_Single_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.FloatField(System.String,System.String,System.Single)
  name.vb: FloatField(String, String, Single)
  fullName: TAssetBundle.Editor.EditorGUIUtil.FloatField(string, string, float)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.FloatField(String, String, Single)
  nameWithType: EditorGUIUtil.FloatField(string, string, float)
  nameWithType.vb: EditorGUIUtil.FloatField(String, String, Single)
- uid: TAssetBundle.Editor.EditorGUIUtil.FloatField*
  name: FloatField
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_FloatField_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.FloatField
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.FloatField
  nameWithType: EditorGUIUtil.FloatField
- uid: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(System.Boolean,System.String,UnityEngine.Color,System.Action)
  name: FoldoutHeaderGroup(bool, string, Color, Action)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_FoldoutHeaderGroup_System_Boolean_System_String_UnityEngine_Color_System_Action_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(System.Boolean,System.String,UnityEngine.Color,System.Action)
  name.vb: FoldoutHeaderGroup(Boolean, String, Color, Action)
  fullName: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(bool, string, UnityEngine.Color, System.Action)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(Boolean, String, UnityEngine.Color, System.Action)
  nameWithType: EditorGUIUtil.FoldoutHeaderGroup(bool, string, Color, Action)
  nameWithType.vb: EditorGUIUtil.FoldoutHeaderGroup(Boolean, String, Color, Action)
- uid: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(System.String,System.String,UnityEngine.Color,System.Boolean,System.Action)
  name: FoldoutHeaderGroup(string, string, Color, bool, Action)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_FoldoutHeaderGroup_System_String_System_String_UnityEngine_Color_System_Boolean_System_Action_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(System.String,System.String,UnityEngine.Color,System.Boolean,System.Action)
  name.vb: FoldoutHeaderGroup(String, String, Color, Boolean, Action)
  fullName: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(string, string, UnityEngine.Color, bool, System.Action)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup(String, String, UnityEngine.Color, Boolean, System.Action)
  nameWithType: EditorGUIUtil.FoldoutHeaderGroup(string, string, Color, bool, Action)
  nameWithType.vb: EditorGUIUtil.FoldoutHeaderGroup(String, String, Color, Boolean, Action)
- uid: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup*
  name: FoldoutHeaderGroup
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_FoldoutHeaderGroup_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.FoldoutHeaderGroup
  nameWithType: EditorGUIUtil.FoldoutHeaderGroup
- uid: TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor(System.String,UnityEngine.Color)
  name: LabelFieldColor(string, Color)
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_LabelFieldColor_System_String_UnityEngine_Color_
  commentId: M:TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor(System.String,UnityEngine.Color)
  name.vb: LabelFieldColor(String, Color)
  fullName: TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor(string, UnityEngine.Color)
  fullName.vb: TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor(String, UnityEngine.Color)
  nameWithType: EditorGUIUtil.LabelFieldColor(string, Color)
  nameWithType.vb: EditorGUIUtil.LabelFieldColor(String, Color)
- uid: TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor*
  name: LabelFieldColor
  href: api/TAssetBundle.Editor.EditorGUIUtil.html#TAssetBundle_Editor_EditorGUIUtil_LabelFieldColor_
  commentId: Overload:TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorGUIUtil.LabelFieldColor
  nameWithType: EditorGUIUtil.LabelFieldColor
- uid: TAssetBundle.Editor.EditorUtil
  name: EditorUtil
  href: api/TAssetBundle.Editor.EditorUtil.html
  commentId: T:TAssetBundle.Editor.EditorUtil
  fullName: TAssetBundle.Editor.EditorUtil
  nameWithType: EditorUtil
- uid: TAssetBundle.Editor.EditorUtil.BuildAssetBundle(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildTarget,System.Boolean)
  name: BuildAssetBundle(string, AssetBundleBuild[], BuildTarget, bool)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_BuildAssetBundle_System_String_UnityEditor_AssetBundleBuild___UnityEditor_BuildTarget_System_Boolean_
  commentId: M:TAssetBundle.Editor.EditorUtil.BuildAssetBundle(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildTarget,System.Boolean)
  name.vb: BuildAssetBundle(String, AssetBundleBuild(), BuildTarget, Boolean)
  fullName: TAssetBundle.Editor.EditorUtil.BuildAssetBundle(string, UnityEditor.AssetBundleBuild[], UnityEditor.BuildTarget, bool)
  fullName.vb: TAssetBundle.Editor.EditorUtil.BuildAssetBundle(String, UnityEditor.AssetBundleBuild(), UnityEditor.BuildTarget, Boolean)
  nameWithType: EditorUtil.BuildAssetBundle(string, AssetBundleBuild[], BuildTarget, bool)
  nameWithType.vb: EditorUtil.BuildAssetBundle(String, AssetBundleBuild(), BuildTarget, Boolean)
- uid: TAssetBundle.Editor.EditorUtil.BuildAssetBundle*
  name: BuildAssetBundle
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_BuildAssetBundle_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.BuildAssetBundle
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.BuildAssetBundle
  nameWithType: EditorUtil.BuildAssetBundle
- uid: TAssetBundle.Editor.EditorUtil.CollectAssetPaths(System.Collections.Generic.List{System.String},System.String,System.Predicate{System.String})
  name: CollectAssetPaths(List<string>, string, Predicate<string>)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_CollectAssetPaths_System_Collections_Generic_List_System_String__System_String_System_Predicate_System_String__
  commentId: M:TAssetBundle.Editor.EditorUtil.CollectAssetPaths(System.Collections.Generic.List{System.String},System.String,System.Predicate{System.String})
  name.vb: CollectAssetPaths(List(Of String), String, Predicate(Of String))
  fullName: TAssetBundle.Editor.EditorUtil.CollectAssetPaths(System.Collections.Generic.List<string>, string, System.Predicate<string>)
  fullName.vb: TAssetBundle.Editor.EditorUtil.CollectAssetPaths(System.Collections.Generic.List(Of String), String, System.Predicate(Of String))
  nameWithType: EditorUtil.CollectAssetPaths(List<string>, string, Predicate<string>)
  nameWithType.vb: EditorUtil.CollectAssetPaths(List(Of String), String, Predicate(Of String))
- uid: TAssetBundle.Editor.EditorUtil.CollectAssetPaths*
  name: CollectAssetPaths
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_CollectAssetPaths_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.CollectAssetPaths
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.CollectAssetPaths
  nameWithType: EditorUtil.CollectAssetPaths
- uid: TAssetBundle.Editor.EditorUtil.CreateDirectory(System.String)
  name: CreateDirectory(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_CreateDirectory_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.CreateDirectory(System.String)
  name.vb: CreateDirectory(String)
  fullName: TAssetBundle.Editor.EditorUtil.CreateDirectory(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.CreateDirectory(String)
  nameWithType: EditorUtil.CreateDirectory(string)
  nameWithType.vb: EditorUtil.CreateDirectory(String)
- uid: TAssetBundle.Editor.EditorUtil.CreateDirectory*
  name: CreateDirectory
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_CreateDirectory_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.CreateDirectory
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.CreateDirectory
  nameWithType: EditorUtil.CreateDirectory
- uid: TAssetBundle.Editor.EditorUtil.DeleteDirectory(System.String)
  name: DeleteDirectory(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_DeleteDirectory_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.DeleteDirectory(System.String)
  name.vb: DeleteDirectory(String)
  fullName: TAssetBundle.Editor.EditorUtil.DeleteDirectory(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.DeleteDirectory(String)
  nameWithType: EditorUtil.DeleteDirectory(string)
  nameWithType.vb: EditorUtil.DeleteDirectory(String)
- uid: TAssetBundle.Editor.EditorUtil.DeleteDirectory*
  name: DeleteDirectory
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_DeleteDirectory_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.DeleteDirectory
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.DeleteDirectory
  nameWithType: EditorUtil.DeleteDirectory
- uid: TAssetBundle.Editor.EditorUtil.DeleteFile(System.String)
  name: DeleteFile(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_DeleteFile_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.DeleteFile(System.String)
  name.vb: DeleteFile(String)
  fullName: TAssetBundle.Editor.EditorUtil.DeleteFile(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.DeleteFile(String)
  nameWithType: EditorUtil.DeleteFile(string)
  nameWithType.vb: EditorUtil.DeleteFile(String)
- uid: TAssetBundle.Editor.EditorUtil.DeleteFile*
  name: DeleteFile
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_DeleteFile_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.DeleteFile
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.DeleteFile
  nameWithType: EditorUtil.DeleteFile
- uid: TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel(System.String)
  name: DisplayDialogOkCancel(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_DisplayDialogOkCancel_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel(System.String)
  name.vb: DisplayDialogOkCancel(String)
  fullName: TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel(String)
  nameWithType: EditorUtil.DisplayDialogOkCancel(string)
  nameWithType.vb: EditorUtil.DisplayDialogOkCancel(String)
- uid: TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel*
  name: DisplayDialogOkCancel
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_DisplayDialogOkCancel_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.DisplayDialogOkCancel
  nameWithType: EditorUtil.DisplayDialogOkCancel
- uid: TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory(System.String,System.Boolean,System.Boolean)
  name: GetAssetPathsByDirectory(string, bool, bool)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetAssetPathsByDirectory_System_String_System_Boolean_System_Boolean_
  commentId: M:TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory(System.String,System.Boolean,System.Boolean)
  name.vb: GetAssetPathsByDirectory(String, Boolean, Boolean)
  fullName: TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory(string, bool, bool)
  fullName.vb: TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory(String, Boolean, Boolean)
  nameWithType: EditorUtil.GetAssetPathsByDirectory(string, bool, bool)
  nameWithType.vb: EditorUtil.GetAssetPathsByDirectory(String, Boolean, Boolean)
- uid: TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory*
  name: GetAssetPathsByDirectory
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetAssetPathsByDirectory_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.GetAssetPathsByDirectory
  nameWithType: EditorUtil.GetAssetPathsByDirectory
- uid: TAssetBundle.Editor.EditorUtil.GetDirectoryPath(System.String)
  name: GetDirectoryPath(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetDirectoryPath_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.GetDirectoryPath(System.String)
  name.vb: GetDirectoryPath(String)
  fullName: TAssetBundle.Editor.EditorUtil.GetDirectoryPath(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.GetDirectoryPath(String)
  nameWithType: EditorUtil.GetDirectoryPath(string)
  nameWithType.vb: EditorUtil.GetDirectoryPath(String)
- uid: TAssetBundle.Editor.EditorUtil.GetDirectoryPath*
  name: GetDirectoryPath
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetDirectoryPath_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.GetDirectoryPath
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.GetDirectoryPath
  nameWithType: EditorUtil.GetDirectoryPath
- uid: TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile*
  name: GetOrCreateScriptableFile
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetOrCreateScriptableFile_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile
  nameWithType: EditorUtil.GetOrCreateScriptableFile
- uid: TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile``1(System.String)
  name: GetOrCreateScriptableFile<T>(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetOrCreateScriptableFile__1_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile``1(System.String)
  name.vb: GetOrCreateScriptableFile(Of T)(String)
  fullName: TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile<T>(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.GetOrCreateScriptableFile(Of T)(String)
  nameWithType: EditorUtil.GetOrCreateScriptableFile<T>(string)
  nameWithType.vb: EditorUtil.GetOrCreateScriptableFile(Of T)(String)
- uid: TAssetBundle.Editor.EditorUtil.GetProjectPath
  name: GetProjectPath()
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetProjectPath
  commentId: M:TAssetBundle.Editor.EditorUtil.GetProjectPath
  fullName: TAssetBundle.Editor.EditorUtil.GetProjectPath()
  nameWithType: EditorUtil.GetProjectPath()
- uid: TAssetBundle.Editor.EditorUtil.GetProjectPath*
  name: GetProjectPath
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_GetProjectPath_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.GetProjectPath
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.GetProjectPath
  nameWithType: EditorUtil.GetProjectPath
- uid: TAssetBundle.Editor.EditorUtil.IsScript(System.String)
  name: IsScript(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_IsScript_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.IsScript(System.String)
  name.vb: IsScript(String)
  fullName: TAssetBundle.Editor.EditorUtil.IsScript(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.IsScript(String)
  nameWithType: EditorUtil.IsScript(string)
  nameWithType.vb: EditorUtil.IsScript(String)
- uid: TAssetBundle.Editor.EditorUtil.IsScript*
  name: IsScript
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_IsScript_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.IsScript
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.IsScript
  nameWithType: EditorUtil.IsScript
- uid: TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories(System.String)
  name: RemoveEmptyDirectories(string)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_RemoveEmptyDirectories_System_String_
  commentId: M:TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories(System.String)
  name.vb: RemoveEmptyDirectories(String)
  fullName: TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories(string)
  fullName.vb: TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories(String)
  nameWithType: EditorUtil.RemoveEmptyDirectories(string)
  nameWithType.vb: EditorUtil.RemoveEmptyDirectories(String)
- uid: TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories*
  name: RemoveEmptyDirectories
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_RemoveEmptyDirectories_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.RemoveEmptyDirectories
  nameWithType: EditorUtil.RemoveEmptyDirectories
- uid: TAssetBundle.Editor.EditorUtil.Work(System.String,System.Action{System.String})
  name: Work(string, Action<string>)
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_Work_System_String_System_Action_System_String__
  commentId: M:TAssetBundle.Editor.EditorUtil.Work(System.String,System.Action{System.String})
  name.vb: Work(String, Action(Of String))
  fullName: TAssetBundle.Editor.EditorUtil.Work(string, System.Action<string>)
  fullName.vb: TAssetBundle.Editor.EditorUtil.Work(String, System.Action(Of String))
  nameWithType: EditorUtil.Work(string, Action<string>)
  nameWithType.vb: EditorUtil.Work(String, Action(Of String))
- uid: TAssetBundle.Editor.EditorUtil.Work*
  name: Work
  href: api/TAssetBundle.Editor.EditorUtil.html#TAssetBundle_Editor_EditorUtil_Work_
  commentId: Overload:TAssetBundle.Editor.EditorUtil.Work
  isSpec: "True"
  fullName: TAssetBundle.Editor.EditorUtil.Work
  nameWithType: EditorUtil.Work
- uid: TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData
  name: ExcludeObjectsCompositionStrategyData
  href: api/TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData.html
  commentId: T:TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData
  fullName: TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData
  nameWithType: ExcludeObjectsCompositionStrategyData
- uid: TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData.excludeObjects
  name: excludeObjects
  href: api/TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData.html#TAssetBundle_Editor_ExcludeObjectsCompositionStrategyData_excludeObjects
  commentId: F:TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData.excludeObjects
  fullName: TAssetBundle.Editor.ExcludeObjectsCompositionStrategyData.excludeObjects
  nameWithType: ExcludeObjectsCompositionStrategyData.excludeObjects
- uid: TAssetBundle.Editor.ExcludeObjectsStrategy
  name: ExcludeObjectsStrategy
  href: api/TAssetBundle.Editor.ExcludeObjectsStrategy.html
  commentId: T:TAssetBundle.Editor.ExcludeObjectsStrategy
  fullName: TAssetBundle.Editor.ExcludeObjectsStrategy
  nameWithType: ExcludeObjectsStrategy
- uid: TAssetBundle.Editor.ExcludeObjectsStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.ExcludeObjectsStrategy.html#TAssetBundle_Editor_ExcludeObjectsStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.ExcludeObjectsStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.ExcludeObjectsStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: ExcludeObjectsStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.ExcludeObjectsStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.ExcludeObjectsStrategy.html#TAssetBundle_Editor_ExcludeObjectsStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.ExcludeObjectsStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.ExcludeObjectsStrategy.Run
  nameWithType: ExcludeObjectsStrategy.Run
- uid: TAssetBundle.Editor.FixedCompositionStrategy
  name: FixedCompositionStrategy
  href: api/TAssetBundle.Editor.FixedCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.FixedCompositionStrategy
  fullName: TAssetBundle.Editor.FixedCompositionStrategy
  nameWithType: FixedCompositionStrategy
- uid: TAssetBundle.Editor.FixedCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.FixedCompositionStrategy.html#TAssetBundle_Editor_FixedCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.FixedCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.FixedCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: FixedCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.FixedCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.FixedCompositionStrategy.html#TAssetBundle_Editor_FixedCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.FixedCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.FixedCompositionStrategy.Run
  nameWithType: FixedCompositionStrategy.Run
- uid: TAssetBundle.Editor.FixedCompositionStrategyData
  name: FixedCompositionStrategyData
  href: api/TAssetBundle.Editor.FixedCompositionStrategyData.html
  commentId: T:TAssetBundle.Editor.FixedCompositionStrategyData
  fullName: TAssetBundle.Editor.FixedCompositionStrategyData
  nameWithType: FixedCompositionStrategyData
- uid: TAssetBundle.Editor.FixedCompositionStrategyData.fixedObjects
  name: fixedObjects
  href: api/TAssetBundle.Editor.FixedCompositionStrategyData.html#TAssetBundle_Editor_FixedCompositionStrategyData_fixedObjects
  commentId: F:TAssetBundle.Editor.FixedCompositionStrategyData.fixedObjects
  fullName: TAssetBundle.Editor.FixedCompositionStrategyData.fixedObjects
  nameWithType: FixedCompositionStrategyData.fixedObjects
- uid: TAssetBundle.Editor.RegexMatchCompositionStrategy
  name: RegexMatchCompositionStrategy
  href: api/TAssetBundle.Editor.RegexMatchCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.RegexMatchCompositionStrategy
  fullName: TAssetBundle.Editor.RegexMatchCompositionStrategy
  nameWithType: RegexMatchCompositionStrategy
- uid: TAssetBundle.Editor.RegexMatchCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.RegexMatchCompositionStrategy.html#TAssetBundle_Editor_RegexMatchCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.RegexMatchCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.RegexMatchCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: RegexMatchCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.RegexMatchCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.RegexMatchCompositionStrategy.html#TAssetBundle_Editor_RegexMatchCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.RegexMatchCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.RegexMatchCompositionStrategy.Run
  nameWithType: RegexMatchCompositionStrategy.Run
- uid: TAssetBundle.Editor.RegexMatchCompositionStrategyData
  name: RegexMatchCompositionStrategyData
  href: api/TAssetBundle.Editor.RegexMatchCompositionStrategyData.html
  commentId: T:TAssetBundle.Editor.RegexMatchCompositionStrategyData
  fullName: TAssetBundle.Editor.RegexMatchCompositionStrategyData
  nameWithType: RegexMatchCompositionStrategyData
- uid: TAssetBundle.Editor.RegexMatchCompositionStrategyData.isMatched
  name: isMatched
  href: api/TAssetBundle.Editor.RegexMatchCompositionStrategyData.html#TAssetBundle_Editor_RegexMatchCompositionStrategyData_isMatched
  commentId: F:TAssetBundle.Editor.RegexMatchCompositionStrategyData.isMatched
  fullName: TAssetBundle.Editor.RegexMatchCompositionStrategyData.isMatched
  nameWithType: RegexMatchCompositionStrategyData.isMatched
- uid: TAssetBundle.Editor.RegexMatchCompositionStrategyData.matchPattern
  name: matchPattern
  href: api/TAssetBundle.Editor.RegexMatchCompositionStrategyData.html#TAssetBundle_Editor_RegexMatchCompositionStrategyData_matchPattern
  commentId: F:TAssetBundle.Editor.RegexMatchCompositionStrategyData.matchPattern
  fullName: TAssetBundle.Editor.RegexMatchCompositionStrategyData.matchPattern
  nameWithType: RegexMatchCompositionStrategyData.matchPattern
- uid: TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy
  name: RegexMatchDeleteCompositionStrategy
  href: api/TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy
  fullName: TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy
  nameWithType: RegexMatchDeleteCompositionStrategy
- uid: TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.html#TAssetBundle_Editor_RegexMatchDeleteCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: RegexMatchDeleteCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.html#TAssetBundle_Editor_RegexMatchDeleteCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.RegexMatchDeleteCompositionStrategy.Run
  nameWithType: RegexMatchDeleteCompositionStrategy.Run
- uid: TAssetBundle.Editor.ReorderableListHelper
  name: ReorderableListHelper
  href: api/TAssetBundle.Editor.ReorderableListHelper.html
  commentId: T:TAssetBundle.Editor.ReorderableListHelper
  fullName: TAssetBundle.Editor.ReorderableListHelper
  nameWithType: ReorderableListHelper
- uid: TAssetBundle.Editor.ReorderableListHelper.Create(UnityEditor.SerializedProperty,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single)
  name: Create(SerializedProperty, bool, bool, bool, bool, float)
  href: api/TAssetBundle.Editor.ReorderableListHelper.html#TAssetBundle_Editor_ReorderableListHelper_Create_UnityEditor_SerializedProperty_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Single_
  commentId: M:TAssetBundle.Editor.ReorderableListHelper.Create(UnityEditor.SerializedProperty,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single)
  name.vb: Create(SerializedProperty, Boolean, Boolean, Boolean, Boolean, Single)
  fullName: TAssetBundle.Editor.ReorderableListHelper.Create(UnityEditor.SerializedProperty, bool, bool, bool, bool, float)
  fullName.vb: TAssetBundle.Editor.ReorderableListHelper.Create(UnityEditor.SerializedProperty, Boolean, Boolean, Boolean, Boolean, Single)
  nameWithType: ReorderableListHelper.Create(SerializedProperty, bool, bool, bool, bool, float)
  nameWithType.vb: ReorderableListHelper.Create(SerializedProperty, Boolean, Boolean, Boolean, Boolean, Single)
- uid: TAssetBundle.Editor.ReorderableListHelper.Create*
  name: Create
  href: api/TAssetBundle.Editor.ReorderableListHelper.html#TAssetBundle_Editor_ReorderableListHelper_Create_
  commentId: Overload:TAssetBundle.Editor.ReorderableListHelper.Create
  isSpec: "True"
  fullName: TAssetBundle.Editor.ReorderableListHelper.Create
  nameWithType: ReorderableListHelper.Create
- uid: TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout(UnityEditorInternal.ReorderableList,System.String,System.String,UnityEngine.Color)
  name: DoLayoutListWithFoldout(ReorderableList, string, string, Color)
  href: api/TAssetBundle.Editor.ReorderableListHelper.html#TAssetBundle_Editor_ReorderableListHelper_DoLayoutListWithFoldout_UnityEditorInternal_ReorderableList_System_String_System_String_UnityEngine_Color_
  commentId: M:TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout(UnityEditorInternal.ReorderableList,System.String,System.String,UnityEngine.Color)
  name.vb: DoLayoutListWithFoldout(ReorderableList, String, String, Color)
  fullName: TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout(UnityEditorInternal.ReorderableList, string, string, UnityEngine.Color)
  fullName.vb: TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout(UnityEditorInternal.ReorderableList, String, String, UnityEngine.Color)
  nameWithType: ReorderableListHelper.DoLayoutListWithFoldout(ReorderableList, string, string, Color)
  nameWithType.vb: ReorderableListHelper.DoLayoutListWithFoldout(ReorderableList, String, String, Color)
- uid: TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout*
  name: DoLayoutListWithFoldout
  href: api/TAssetBundle.Editor.ReorderableListHelper.html#TAssetBundle_Editor_ReorderableListHelper_DoLayoutListWithFoldout_
  commentId: Overload:TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout
  isSpec: "True"
  fullName: TAssetBundle.Editor.ReorderableListHelper.DoLayoutListWithFoldout
  nameWithType: ReorderableListHelper.DoLayoutListWithFoldout
- uid: TAssetBundle.Editor.SameNameCompositionStrategy
  name: SameNameCompositionStrategy
  href: api/TAssetBundle.Editor.SameNameCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.SameNameCompositionStrategy
  fullName: TAssetBundle.Editor.SameNameCompositionStrategy
  nameWithType: SameNameCompositionStrategy
- uid: TAssetBundle.Editor.SameNameCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.SameNameCompositionStrategy.html#TAssetBundle_Editor_SameNameCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.SameNameCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.SameNameCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: SameNameCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.SameNameCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.SameNameCompositionStrategy.html#TAssetBundle_Editor_SameNameCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.SameNameCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.SameNameCompositionStrategy.Run
  nameWithType: SameNameCompositionStrategy.Run
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy
  name: TAssetBundleCompositionStrategy
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html
  commentId: T:TAssetBundle.Editor.TAssetBundleCompositionStrategy
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy
  nameWithType: TAssetBundleCompositionStrategy
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.CreateData
  name: CreateData()
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_CreateData
  commentId: M:TAssetBundle.Editor.TAssetBundleCompositionStrategy.CreateData
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.CreateData()
  nameWithType: TAssetBundleCompositionStrategy.CreateData()
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.CreateData*
  name: CreateData
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_CreateData_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleCompositionStrategy.CreateData
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.CreateData
  nameWithType: TAssetBundleCompositionStrategy.CreateData
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data
  name: TAssetBundleCompositionStrategy.Data
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data.html
  commentId: T:TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data
  nameWithType: TAssetBundleCompositionStrategy.Data
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.GetDataType
  name: GetDataType()
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_GetDataType
  commentId: M:TAssetBundle.Editor.TAssetBundleCompositionStrategy.GetDataType
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.GetDataType()
  nameWithType: TAssetBundleCompositionStrategy.GetDataType()
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.GetDataType*
  name: GetDataType
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_GetDataType_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleCompositionStrategy.GetDataType
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.GetDataType
  nameWithType: TAssetBundleCompositionStrategy.GetDataType
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.IsUseData
  name: IsUseData()
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_IsUseData
  commentId: M:TAssetBundle.Editor.TAssetBundleCompositionStrategy.IsUseData
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.IsUseData()
  nameWithType: TAssetBundleCompositionStrategy.IsUseData()
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.IsUseData*
  name: IsUseData
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_IsUseData_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleCompositionStrategy.IsUseData
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.IsUseData
  nameWithType: TAssetBundleCompositionStrategy.IsUseData
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  name: Run(TAssetBundleManifest, Data)
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_Run_TAssetBundle_Editor_TAssetBundleManifest_TAssetBundle_Editor_TAssetBundleCompositionStrategy_Data_
  commentId: M:TAssetBundle.Editor.TAssetBundleCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest,TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.Run(TAssetBundle.Editor.TAssetBundleManifest, TAssetBundle.Editor.TAssetBundleCompositionStrategy.Data)
  nameWithType: TAssetBundleCompositionStrategy.Run(TAssetBundleManifest, TAssetBundleCompositionStrategy.Data)
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy.Run*
  name: Run
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_Run_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleCompositionStrategy.Run
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy.Run
  nameWithType: TAssetBundleCompositionStrategy.Run
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy`1
  name: TAssetBundleCompositionStrategy<T>
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy-1.html
  commentId: T:TAssetBundle.Editor.TAssetBundleCompositionStrategy`1
  name.vb: TAssetBundleCompositionStrategy(Of T)
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy<T>
  fullName.vb: TAssetBundle.Editor.TAssetBundleCompositionStrategy(Of T)
  nameWithType: TAssetBundleCompositionStrategy<T>
  nameWithType.vb: TAssetBundleCompositionStrategy(Of T)
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy`1.GetDataType
  name: GetDataType()
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy-1.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_1_GetDataType
  commentId: M:TAssetBundle.Editor.TAssetBundleCompositionStrategy`1.GetDataType
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy<T>.GetDataType()
  fullName.vb: TAssetBundle.Editor.TAssetBundleCompositionStrategy(Of T).GetDataType()
  nameWithType: TAssetBundleCompositionStrategy<T>.GetDataType()
  nameWithType.vb: TAssetBundleCompositionStrategy(Of T).GetDataType()
- uid: TAssetBundle.Editor.TAssetBundleCompositionStrategy`1.GetDataType*
  name: GetDataType
  href: api/TAssetBundle.Editor.TAssetBundleCompositionStrategy-1.html#TAssetBundle_Editor_TAssetBundleCompositionStrategy_1_GetDataType_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleCompositionStrategy`1.GetDataType
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleCompositionStrategy<T>.GetDataType
  fullName.vb: TAssetBundle.Editor.TAssetBundleCompositionStrategy(Of T).GetDataType
  nameWithType: TAssetBundleCompositionStrategy<T>.GetDataType
  nameWithType.vb: TAssetBundleCompositionStrategy(Of T).GetDataType
- uid: TAssetBundle.Editor.TAssetBundleManifest
  name: TAssetBundleManifest
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html
  commentId: T:TAssetBundle.Editor.TAssetBundleManifest
  fullName: TAssetBundle.Editor.TAssetBundleManifest
  nameWithType: TAssetBundleManifest
- uid: TAssetBundle.Editor.TAssetBundleManifest.AddAssetBundleBuildInfo(TAssetBundle.Editor.AssetBundleBuildInfo)
  name: AddAssetBundleBuildInfo(AssetBundleBuildInfo)
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_AddAssetBundleBuildInfo_TAssetBundle_Editor_AssetBundleBuildInfo_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.AddAssetBundleBuildInfo(TAssetBundle.Editor.AssetBundleBuildInfo)
  fullName: TAssetBundle.Editor.TAssetBundleManifest.AddAssetBundleBuildInfo(TAssetBundle.Editor.AssetBundleBuildInfo)
  nameWithType: TAssetBundleManifest.AddAssetBundleBuildInfo(AssetBundleBuildInfo)
- uid: TAssetBundle.Editor.TAssetBundleManifest.AddAssetBundleBuildInfo*
  name: AddAssetBundleBuildInfo
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_AddAssetBundleBuildInfo_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.AddAssetBundleBuildInfo
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.AddAssetBundleBuildInfo
  nameWithType: TAssetBundleManifest.AddAssetBundleBuildInfo
- uid: TAssetBundle.Editor.TAssetBundleManifest.AddNewAssetsAllTogether
  name: AddNewAssetsAllTogether()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_AddNewAssetsAllTogether
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.AddNewAssetsAllTogether
  fullName: TAssetBundle.Editor.TAssetBundleManifest.AddNewAssetsAllTogether()
  nameWithType: TAssetBundleManifest.AddNewAssetsAllTogether()
- uid: TAssetBundle.Editor.TAssetBundleManifest.AddNewAssetsAllTogether*
  name: AddNewAssetsAllTogether
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_AddNewAssetsAllTogether_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.AddNewAssetsAllTogether
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.AddNewAssetsAllTogether
  nameWithType: TAssetBundleManifest.AddNewAssetsAllTogether
- uid: TAssetBundle.Editor.TAssetBundleManifest.ClearAssetBundleBuildInfos
  name: ClearAssetBundleBuildInfos()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_ClearAssetBundleBuildInfos
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.ClearAssetBundleBuildInfos
  fullName: TAssetBundle.Editor.TAssetBundleManifest.ClearAssetBundleBuildInfos()
  nameWithType: TAssetBundleManifest.ClearAssetBundleBuildInfos()
- uid: TAssetBundle.Editor.TAssetBundleManifest.ClearAssetBundleBuildInfos*
  name: ClearAssetBundleBuildInfos
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_ClearAssetBundleBuildInfos_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.ClearAssetBundleBuildInfos
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.ClearAssetBundleBuildInfos
  nameWithType: TAssetBundleManifest.ClearAssetBundleBuildInfos
- uid: TAssetBundle.Editor.TAssetBundleManifest.Depth
  name: Depth
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_Depth
  commentId: P:TAssetBundle.Editor.TAssetBundleManifest.Depth
  fullName: TAssetBundle.Editor.TAssetBundleManifest.Depth
  nameWithType: TAssetBundleManifest.Depth
- uid: TAssetBundle.Editor.TAssetBundleManifest.Depth*
  name: Depth
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_Depth_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.Depth
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.Depth
  nameWithType: TAssetBundleManifest.Depth
- uid: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssetPaths
  name: GetNotIncludedAssetPaths()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_GetNotIncludedAssetPaths
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssetPaths
  fullName: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssetPaths()
  nameWithType: TAssetBundleManifest.GetNotIncludedAssetPaths()
- uid: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssetPaths*
  name: GetNotIncludedAssetPaths
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_GetNotIncludedAssetPaths_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssetPaths
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssetPaths
  nameWithType: TAssetBundleManifest.GetNotIncludedAssetPaths
- uid: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssets
  name: GetNotIncludedAssets()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_GetNotIncludedAssets
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssets
  fullName: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssets()
  nameWithType: TAssetBundleManifest.GetNotIncludedAssets()
- uid: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssets*
  name: GetNotIncludedAssets
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_GetNotIncludedAssets_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssets
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.GetNotIncludedAssets
  nameWithType: TAssetBundleManifest.GetNotIncludedAssets
- uid: TAssetBundle.Editor.TAssetBundleManifest.IsPersistent
  name: IsPersistent
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_IsPersistent
  commentId: P:TAssetBundle.Editor.TAssetBundleManifest.IsPersistent
  fullName: TAssetBundle.Editor.TAssetBundleManifest.IsPersistent
  nameWithType: TAssetBundleManifest.IsPersistent
- uid: TAssetBundle.Editor.TAssetBundleManifest.IsPersistent*
  name: IsPersistent
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_IsPersistent_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.IsPersistent
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.IsPersistent
  nameWithType: TAssetBundleManifest.IsPersistent
- uid: TAssetBundle.Editor.TAssetBundleManifest.ManifestPath
  name: ManifestPath
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_ManifestPath
  commentId: P:TAssetBundle.Editor.TAssetBundleManifest.ManifestPath
  fullName: TAssetBundle.Editor.TAssetBundleManifest.ManifestPath
  nameWithType: TAssetBundleManifest.ManifestPath
- uid: TAssetBundle.Editor.TAssetBundleManifest.ManifestPath*
  name: ManifestPath
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_ManifestPath_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.ManifestPath
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.ManifestPath
  nameWithType: TAssetBundleManifest.ManifestPath
- uid: TAssetBundle.Editor.TAssetBundleManifest.MarkAsDirty
  name: MarkAsDirty()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_MarkAsDirty
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.MarkAsDirty
  fullName: TAssetBundle.Editor.TAssetBundleManifest.MarkAsDirty()
  nameWithType: TAssetBundleManifest.MarkAsDirty()
- uid: TAssetBundle.Editor.TAssetBundleManifest.MarkAsDirty*
  name: MarkAsDirty
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_MarkAsDirty_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.MarkAsDirty
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.MarkAsDirty
  nameWithType: TAssetBundleManifest.MarkAsDirty
- uid: TAssetBundle.Editor.TAssetBundleManifest.OnChanged
  name: OnChanged
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_OnChanged
  commentId: E:TAssetBundle.Editor.TAssetBundleManifest.OnChanged
  fullName: TAssetBundle.Editor.TAssetBundleManifest.OnChanged
  nameWithType: TAssetBundleManifest.OnChanged
- uid: TAssetBundle.Editor.TAssetBundleManifest.RemoveTag(System.String)
  name: RemoveTag(string)
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_RemoveTag_System_String_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.RemoveTag(System.String)
  name.vb: RemoveTag(String)
  fullName: TAssetBundle.Editor.TAssetBundleManifest.RemoveTag(string)
  fullName.vb: TAssetBundle.Editor.TAssetBundleManifest.RemoveTag(String)
  nameWithType: TAssetBundleManifest.RemoveTag(string)
  nameWithType.vb: TAssetBundleManifest.RemoveTag(String)
- uid: TAssetBundle.Editor.TAssetBundleManifest.RemoveTag*
  name: RemoveTag
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_RemoveTag_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.RemoveTag
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.RemoveTag
  nameWithType: TAssetBundleManifest.RemoveTag
- uid: TAssetBundle.Editor.TAssetBundleManifest.RenameTag(System.String,System.String)
  name: RenameTag(string, string)
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_RenameTag_System_String_System_String_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.RenameTag(System.String,System.String)
  name.vb: RenameTag(String, String)
  fullName: TAssetBundle.Editor.TAssetBundleManifest.RenameTag(string, string)
  fullName.vb: TAssetBundle.Editor.TAssetBundleManifest.RenameTag(String, String)
  nameWithType: TAssetBundleManifest.RenameTag(string, string)
  nameWithType.vb: TAssetBundleManifest.RenameTag(String, String)
- uid: TAssetBundle.Editor.TAssetBundleManifest.RenameTag*
  name: RenameTag
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_RenameTag_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.RenameTag
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.RenameTag
  nameWithType: TAssetBundleManifest.RenameTag
- uid: TAssetBundle.Editor.TAssetBundleManifest.RunCompositionStrategy
  name: RunCompositionStrategy()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_RunCompositionStrategy
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.RunCompositionStrategy
  fullName: TAssetBundle.Editor.TAssetBundleManifest.RunCompositionStrategy()
  nameWithType: TAssetBundleManifest.RunCompositionStrategy()
- uid: TAssetBundle.Editor.TAssetBundleManifest.RunCompositionStrategy*
  name: RunCompositionStrategy
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_RunCompositionStrategy_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.RunCompositionStrategy
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.RunCompositionStrategy
  nameWithType: TAssetBundleManifest.RunCompositionStrategy
- uid: TAssetBundle.Editor.TAssetBundleManifest.Save
  name: Save()
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_Save
  commentId: M:TAssetBundle.Editor.TAssetBundleManifest.Save
  fullName: TAssetBundle.Editor.TAssetBundleManifest.Save()
  nameWithType: TAssetBundleManifest.Save()
- uid: TAssetBundle.Editor.TAssetBundleManifest.Save*
  name: Save
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_Save_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifest.Save
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifest.Save
  nameWithType: TAssetBundleManifest.Save
- uid: TAssetBundle.Editor.TAssetBundleManifest.assetBundleBuildInfos
  name: assetBundleBuildInfos
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_assetBundleBuildInfos
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.assetBundleBuildInfos
  fullName: TAssetBundle.Editor.TAssetBundleManifest.assetBundleBuildInfos
  nameWithType: TAssetBundleManifest.assetBundleBuildInfos
- uid: TAssetBundle.Editor.TAssetBundleManifest.builtin
  name: builtin
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_builtin
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.builtin
  fullName: TAssetBundle.Editor.TAssetBundleManifest.builtin
  nameWithType: TAssetBundleManifest.builtin
- uid: TAssetBundle.Editor.TAssetBundleManifest.compositionStrategyInfos
  name: compositionStrategyInfos
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_compositionStrategyInfos
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.compositionStrategyInfos
  fullName: TAssetBundle.Editor.TAssetBundleManifest.compositionStrategyInfos
  nameWithType: TAssetBundleManifest.compositionStrategyInfos
- uid: TAssetBundle.Editor.TAssetBundleManifest.enabled
  name: enabled
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_enabled
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.enabled
  fullName: TAssetBundle.Editor.TAssetBundleManifest.enabled
  nameWithType: TAssetBundleManifest.enabled
- uid: TAssetBundle.Editor.TAssetBundleManifest.encrypt
  name: encrypt
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_encrypt
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.encrypt
  fullName: TAssetBundle.Editor.TAssetBundleManifest.encrypt
  nameWithType: TAssetBundleManifest.encrypt
- uid: TAssetBundle.Editor.TAssetBundleManifest.ignoreAssets
  name: ignoreAssets
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_ignoreAssets
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.ignoreAssets
  fullName: TAssetBundle.Editor.TAssetBundleManifest.ignoreAssets
  nameWithType: TAssetBundleManifest.ignoreAssets
- uid: TAssetBundle.Editor.TAssetBundleManifest.tag
  name: tag
  href: api/TAssetBundle.Editor.TAssetBundleManifest.html#TAssetBundle_Editor_TAssetBundleManifest_tag
  commentId: F:TAssetBundle.Editor.TAssetBundleManifest.tag
  fullName: TAssetBundle.Editor.TAssetBundleManifest.tag
  nameWithType: TAssetBundleManifest.tag
- uid: TAssetBundle.Editor.TAssetBundleManifestCache
  name: TAssetBundleManifestCache
  href: api/TAssetBundle.Editor.TAssetBundleManifestCache.html
  commentId: T:TAssetBundle.Editor.TAssetBundleManifestCache
  fullName: TAssetBundle.Editor.TAssetBundleManifestCache
  nameWithType: TAssetBundleManifestCache
- uid: TAssetBundle.Editor.TAssetBundleManifestCache.Clear
  name: Clear()
  href: api/TAssetBundle.Editor.TAssetBundleManifestCache.html#TAssetBundle_Editor_TAssetBundleManifestCache_Clear
  commentId: M:TAssetBundle.Editor.TAssetBundleManifestCache.Clear
  fullName: TAssetBundle.Editor.TAssetBundleManifestCache.Clear()
  nameWithType: TAssetBundleManifestCache.Clear()
- uid: TAssetBundle.Editor.TAssetBundleManifestCache.Clear*
  name: Clear
  href: api/TAssetBundle.Editor.TAssetBundleManifestCache.html#TAssetBundle_Editor_TAssetBundleManifestCache_Clear_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifestCache.Clear
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifestCache.Clear
  nameWithType: TAssetBundleManifestCache.Clear
- uid: TAssetBundle.Editor.TAssetBundleManifestCache.Get(System.String)
  name: Get(string)
  href: api/TAssetBundle.Editor.TAssetBundleManifestCache.html#TAssetBundle_Editor_TAssetBundleManifestCache_Get_System_String_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifestCache.Get(System.String)
  name.vb: Get(String)
  fullName: TAssetBundle.Editor.TAssetBundleManifestCache.Get(string)
  fullName.vb: TAssetBundle.Editor.TAssetBundleManifestCache.Get(String)
  nameWithType: TAssetBundleManifestCache.Get(string)
  nameWithType.vb: TAssetBundleManifestCache.Get(String)
- uid: TAssetBundle.Editor.TAssetBundleManifestCache.Get*
  name: Get
  href: api/TAssetBundle.Editor.TAssetBundleManifestCache.html#TAssetBundle_Editor_TAssetBundleManifestCache_Get_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifestCache.Get
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifestCache.Get
  nameWithType: TAssetBundleManifestCache.Get
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil
  name: TAssetBundleManifestUtil
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html
  commentId: T:TAssetBundle.Editor.TAssetBundleManifestUtil
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil
  nameWithType: TAssetBundleManifestUtil
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild(TAssetBundle.Editor.TAssetBundleManifest,System.Collections.Generic.List{UnityEngine.Object},TAssetBundle.Editor.EAssetBundleBuildName)
  name: AddAssetBundleBuild(TAssetBundleManifest, List<Object>, EAssetBundleBuildName)
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html#TAssetBundle_Editor_TAssetBundleManifestUtil_AddAssetBundleBuild_TAssetBundle_Editor_TAssetBundleManifest_System_Collections_Generic_List_UnityEngine_Object__TAssetBundle_Editor_EAssetBundleBuildName_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild(TAssetBundle.Editor.TAssetBundleManifest,System.Collections.Generic.List{UnityEngine.Object},TAssetBundle.Editor.EAssetBundleBuildName)
  name.vb: AddAssetBundleBuild(TAssetBundleManifest, List(Of Object), EAssetBundleBuildName)
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild(TAssetBundle.Editor.TAssetBundleManifest, System.Collections.Generic.List<UnityEngine.Object>, TAssetBundle.Editor.EAssetBundleBuildName)
  fullName.vb: TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild(TAssetBundle.Editor.TAssetBundleManifest, System.Collections.Generic.List(Of UnityEngine.Object), TAssetBundle.Editor.EAssetBundleBuildName)
  nameWithType: TAssetBundleManifestUtil.AddAssetBundleBuild(TAssetBundleManifest, List<Object>, EAssetBundleBuildName)
  nameWithType.vb: TAssetBundleManifestUtil.AddAssetBundleBuild(TAssetBundleManifest, List(Of Object), EAssetBundleBuildName)
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild*
  name: AddAssetBundleBuild
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html#TAssetBundle_Editor_TAssetBundleManifestUtil_AddAssetBundleBuild_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil.AddAssetBundleBuild
  nameWithType: TAssetBundleManifestUtil.AddAssetBundleBuild
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName(TAssetBundle.Editor.TAssetBundleManifest,System.Collections.Generic.List{UnityEngine.Object},TAssetBundle.Editor.EAssetBundleBuildName)
  name: GetAssetBundleBuildName(TAssetBundleManifest, List<Object>, EAssetBundleBuildName)
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html#TAssetBundle_Editor_TAssetBundleManifestUtil_GetAssetBundleBuildName_TAssetBundle_Editor_TAssetBundleManifest_System_Collections_Generic_List_UnityEngine_Object__TAssetBundle_Editor_EAssetBundleBuildName_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName(TAssetBundle.Editor.TAssetBundleManifest,System.Collections.Generic.List{UnityEngine.Object},TAssetBundle.Editor.EAssetBundleBuildName)
  name.vb: GetAssetBundleBuildName(TAssetBundleManifest, List(Of Object), EAssetBundleBuildName)
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName(TAssetBundle.Editor.TAssetBundleManifest, System.Collections.Generic.List<UnityEngine.Object>, TAssetBundle.Editor.EAssetBundleBuildName)
  fullName.vb: TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName(TAssetBundle.Editor.TAssetBundleManifest, System.Collections.Generic.List(Of UnityEngine.Object), TAssetBundle.Editor.EAssetBundleBuildName)
  nameWithType: TAssetBundleManifestUtil.GetAssetBundleBuildName(TAssetBundleManifest, List<Object>, EAssetBundleBuildName)
  nameWithType.vb: TAssetBundleManifestUtil.GetAssetBundleBuildName(TAssetBundleManifest, List(Of Object), EAssetBundleBuildName)
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName*
  name: GetAssetBundleBuildName
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html#TAssetBundle_Editor_TAssetBundleManifestUtil_GetAssetBundleBuildName_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil.GetAssetBundleBuildName
  nameWithType: TAssetBundleManifestUtil.GetAssetBundleBuildName
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest(System.String)
  name: GetManifest(string)
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html#TAssetBundle_Editor_TAssetBundleManifestUtil_GetManifest_System_String_
  commentId: M:TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest(System.String)
  name.vb: GetManifest(String)
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest(string)
  fullName.vb: TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest(String)
  nameWithType: TAssetBundleManifestUtil.GetManifest(string)
  nameWithType.vb: TAssetBundleManifestUtil.GetManifest(String)
- uid: TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest*
  name: GetManifest
  href: api/TAssetBundle.Editor.TAssetBundleManifestUtil.html#TAssetBundle_Editor_TAssetBundleManifestUtil_GetManifest_
  commentId: Overload:TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest
  isSpec: "True"
  fullName: TAssetBundle.Editor.TAssetBundleManifestUtil.GetManifest
  nameWithType: TAssetBundleManifestUtil.GetManifest
- uid: TAssetBundle.Editor.TagInfo
  name: TagInfo
  href: api/TAssetBundle.Editor.TagInfo.html
  commentId: T:TAssetBundle.Editor.TagInfo
  fullName: TAssetBundle.Editor.TagInfo
  nameWithType: TagInfo
- uid: TAssetBundle.Editor.TagInfo.tags
  name: tags
  href: api/TAssetBundle.Editor.TagInfo.html#TAssetBundle_Editor_TagInfo_tags
  commentId: F:TAssetBundle.Editor.TagInfo.tags
  fullName: TAssetBundle.Editor.TagInfo.tags
  nameWithType: TagInfo.tags
- uid: TAssetBundle.Editor.TextFieldEditorWindow
  name: TextFieldEditorWindow
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html
  commentId: T:TAssetBundle.Editor.TextFieldEditorWindow
  fullName: TAssetBundle.Editor.TextFieldEditorWindow
  nameWithType: TextFieldEditorWindow
- uid: TAssetBundle.Editor.TextFieldEditorWindow.Show(UnityEngine.Rect,System.String,System.String,System.String,System.Action{System.String},System.Predicate{System.String})
  name: Show(Rect, string, string, string, Action<string>, Predicate<string>)
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html#TAssetBundle_Editor_TextFieldEditorWindow_Show_UnityEngine_Rect_System_String_System_String_System_String_System_Action_System_String__System_Predicate_System_String__
  commentId: M:TAssetBundle.Editor.TextFieldEditorWindow.Show(UnityEngine.Rect,System.String,System.String,System.String,System.Action{System.String},System.Predicate{System.String})
  name.vb: Show(Rect, String, String, String, Action(Of String), Predicate(Of String))
  fullName: TAssetBundle.Editor.TextFieldEditorWindow.Show(UnityEngine.Rect, string, string, string, System.Action<string>, System.Predicate<string>)
  fullName.vb: TAssetBundle.Editor.TextFieldEditorWindow.Show(UnityEngine.Rect, String, String, String, System.Action(Of String), System.Predicate(Of String))
  nameWithType: TextFieldEditorWindow.Show(Rect, string, string, string, Action<string>, Predicate<string>)
  nameWithType.vb: TextFieldEditorWindow.Show(Rect, String, String, String, Action(Of String), Predicate(Of String))
- uid: TAssetBundle.Editor.TextFieldEditorWindow.Show*
  name: Show
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html#TAssetBundle_Editor_TextFieldEditorWindow_Show_
  commentId: Overload:TAssetBundle.Editor.TextFieldEditorWindow.Show
  isSpec: "True"
  fullName: TAssetBundle.Editor.TextFieldEditorWindow.Show
  nameWithType: TextFieldEditorWindow.Show
- uid: TAssetBundle.Editor.TextFieldEditorWindow.buttonTitle
  name: buttonTitle
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html#TAssetBundle_Editor_TextFieldEditorWindow_buttonTitle
  commentId: F:TAssetBundle.Editor.TextFieldEditorWindow.buttonTitle
  fullName: TAssetBundle.Editor.TextFieldEditorWindow.buttonTitle
  nameWithType: TextFieldEditorWindow.buttonTitle
- uid: TAssetBundle.Editor.TextFieldEditorWindow.onChanged
  name: onChanged
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html#TAssetBundle_Editor_TextFieldEditorWindow_onChanged
  commentId: F:TAssetBundle.Editor.TextFieldEditorWindow.onChanged
  fullName: TAssetBundle.Editor.TextFieldEditorWindow.onChanged
  nameWithType: TextFieldEditorWindow.onChanged
- uid: TAssetBundle.Editor.TextFieldEditorWindow.text
  name: text
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html#TAssetBundle_Editor_TextFieldEditorWindow_text
  commentId: F:TAssetBundle.Editor.TextFieldEditorWindow.text
  fullName: TAssetBundle.Editor.TextFieldEditorWindow.text
  nameWithType: TextFieldEditorWindow.text
- uid: TAssetBundle.Editor.TextFieldEditorWindow.validator
  name: validator
  href: api/TAssetBundle.Editor.TextFieldEditorWindow.html#TAssetBundle_Editor_TextFieldEditorWindow_validator
  commentId: F:TAssetBundle.Editor.TextFieldEditorWindow.validator
  fullName: TAssetBundle.Editor.TextFieldEditorWindow.validator
  nameWithType: TextFieldEditorWindow.validator
- uid: TAssetBundle.Extensions
  name: TAssetBundle.Extensions
  href: api/TAssetBundle.Extensions.html
  commentId: N:TAssetBundle.Extensions
  fullName: TAssetBundle.Extensions
  nameWithType: TAssetBundle.Extensions
- uid: TAssetBundle.Extensions.AssetInfo
  name: AssetInfo
  href: api/TAssetBundle.Extensions.AssetInfo.html
  commentId: T:TAssetBundle.Extensions.AssetInfo
  fullName: TAssetBundle.Extensions.AssetInfo
  nameWithType: AssetInfo
- uid: TAssetBundle.Extensions.AssetInfo.AssetHandle
  name: AssetHandle
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_AssetHandle
  commentId: P:TAssetBundle.Extensions.AssetInfo.AssetHandle
  fullName: TAssetBundle.Extensions.AssetInfo.AssetHandle
  nameWithType: AssetInfo.AssetHandle
- uid: TAssetBundle.Extensions.AssetInfo.AssetHandle*
  name: AssetHandle
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_AssetHandle_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.AssetHandle
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.AssetHandle
  nameWithType: AssetInfo.AssetHandle
- uid: TAssetBundle.Extensions.AssetInfo.AssetPath
  name: AssetPath
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_AssetPath
  commentId: P:TAssetBundle.Extensions.AssetInfo.AssetPath
  fullName: TAssetBundle.Extensions.AssetInfo.AssetPath
  nameWithType: AssetInfo.AssetPath
- uid: TAssetBundle.Extensions.AssetInfo.AssetPath*
  name: AssetPath
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_AssetPath_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.AssetPath
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.AssetPath
  nameWithType: AssetInfo.AssetPath
- uid: TAssetBundle.Extensions.AssetInfo.EFlag
  name: AssetInfo.EFlag
  href: api/TAssetBundle.Extensions.AssetInfo.EFlag.html
  commentId: T:TAssetBundle.Extensions.AssetInfo.EFlag
  fullName: TAssetBundle.Extensions.AssetInfo.EFlag
  nameWithType: AssetInfo.EFlag
- uid: TAssetBundle.Extensions.AssetInfo.EFlag.DontDestroy
  name: DontDestroy
  href: api/TAssetBundle.Extensions.AssetInfo.EFlag.html#TAssetBundle_Extensions_AssetInfo_EFlag_DontDestroy
  commentId: F:TAssetBundle.Extensions.AssetInfo.EFlag.DontDestroy
  fullName: TAssetBundle.Extensions.AssetInfo.EFlag.DontDestroy
  nameWithType: AssetInfo.EFlag.DontDestroy
- uid: TAssetBundle.Extensions.AssetInfo.EFlag.Loaded
  name: Loaded
  href: api/TAssetBundle.Extensions.AssetInfo.EFlag.html#TAssetBundle_Extensions_AssetInfo_EFlag_Loaded
  commentId: F:TAssetBundle.Extensions.AssetInfo.EFlag.Loaded
  fullName: TAssetBundle.Extensions.AssetInfo.EFlag.Loaded
  nameWithType: AssetInfo.EFlag.Loaded
- uid: TAssetBundle.Extensions.AssetInfo.EFlag.None
  name: None
  href: api/TAssetBundle.Extensions.AssetInfo.EFlag.html#TAssetBundle_Extensions_AssetInfo_EFlag_None
  commentId: F:TAssetBundle.Extensions.AssetInfo.EFlag.None
  fullName: TAssetBundle.Extensions.AssetInfo.EFlag.None
  nameWithType: AssetInfo.EFlag.None
- uid: TAssetBundle.Extensions.AssetInfo.Free
  name: Free()
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Free
  commentId: M:TAssetBundle.Extensions.AssetInfo.Free
  fullName: TAssetBundle.Extensions.AssetInfo.Free()
  nameWithType: AssetInfo.Free()
- uid: TAssetBundle.Extensions.AssetInfo.Free*
  name: Free
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Free_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.Free
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.Free
  nameWithType: AssetInfo.Free
- uid: TAssetBundle.Extensions.AssetInfo.Get*
  name: Get
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Get_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.Get
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.Get
  nameWithType: AssetInfo.Get
- uid: TAssetBundle.Extensions.AssetInfo.Get``1
  name: Get<T>()
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Get__1
  commentId: M:TAssetBundle.Extensions.AssetInfo.Get``1
  name.vb: Get(Of T)()
  fullName: TAssetBundle.Extensions.AssetInfo.Get<T>()
  fullName.vb: TAssetBundle.Extensions.AssetInfo.Get(Of T)()
  nameWithType: AssetInfo.Get<T>()
  nameWithType.vb: AssetInfo.Get(Of T)()
- uid: TAssetBundle.Extensions.AssetInfo.IsDontDestroy
  name: IsDontDestroy
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsDontDestroy
  commentId: P:TAssetBundle.Extensions.AssetInfo.IsDontDestroy
  fullName: TAssetBundle.Extensions.AssetInfo.IsDontDestroy
  nameWithType: AssetInfo.IsDontDestroy
- uid: TAssetBundle.Extensions.AssetInfo.IsDontDestroy*
  name: IsDontDestroy
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsDontDestroy_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.IsDontDestroy
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.IsDontDestroy
  nameWithType: AssetInfo.IsDontDestroy
- uid: TAssetBundle.Extensions.AssetInfo.IsLoaded
  name: IsLoaded
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsLoaded
  commentId: P:TAssetBundle.Extensions.AssetInfo.IsLoaded
  fullName: TAssetBundle.Extensions.AssetInfo.IsLoaded
  nameWithType: AssetInfo.IsLoaded
- uid: TAssetBundle.Extensions.AssetInfo.IsLoaded*
  name: IsLoaded
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsLoaded_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.IsLoaded
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.IsLoaded
  nameWithType: AssetInfo.IsLoaded
- uid: TAssetBundle.Extensions.AssetInfo.IsLoading
  name: IsLoading
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsLoading
  commentId: P:TAssetBundle.Extensions.AssetInfo.IsLoading
  fullName: TAssetBundle.Extensions.AssetInfo.IsLoading
  nameWithType: AssetInfo.IsLoading
- uid: TAssetBundle.Extensions.AssetInfo.IsLoading*
  name: IsLoading
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsLoading_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.IsLoading
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.IsLoading
  nameWithType: AssetInfo.IsLoading
- uid: TAssetBundle.Extensions.AssetInfo.IsUsing
  name: IsUsing
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsUsing
  commentId: P:TAssetBundle.Extensions.AssetInfo.IsUsing
  fullName: TAssetBundle.Extensions.AssetInfo.IsUsing
  nameWithType: AssetInfo.IsUsing
- uid: TAssetBundle.Extensions.AssetInfo.IsUsing*
  name: IsUsing
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsUsing_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.IsUsing
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.IsUsing
  nameWithType: AssetInfo.IsUsing
- uid: TAssetBundle.Extensions.AssetInfo.IsValid
  name: IsValid
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsValid
  commentId: P:TAssetBundle.Extensions.AssetInfo.IsValid
  fullName: TAssetBundle.Extensions.AssetInfo.IsValid
  nameWithType: AssetInfo.IsValid
- uid: TAssetBundle.Extensions.AssetInfo.IsValid*
  name: IsValid
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_IsValid_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.IsValid
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.IsValid
  nameWithType: AssetInfo.IsValid
- uid: TAssetBundle.Extensions.AssetInfo.LastUsedTime
  name: LastUsedTime
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_LastUsedTime
  commentId: P:TAssetBundle.Extensions.AssetInfo.LastUsedTime
  fullName: TAssetBundle.Extensions.AssetInfo.LastUsedTime
  nameWithType: AssetInfo.LastUsedTime
- uid: TAssetBundle.Extensions.AssetInfo.LastUsedTime*
  name: LastUsedTime
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_LastUsedTime_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.LastUsedTime
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.LastUsedTime
  nameWithType: AssetInfo.LastUsedTime
- uid: TAssetBundle.Extensions.AssetInfo.LoadingProgress
  name: LoadingProgress
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_LoadingProgress
  commentId: P:TAssetBundle.Extensions.AssetInfo.LoadingProgress
  fullName: TAssetBundle.Extensions.AssetInfo.LoadingProgress
  nameWithType: AssetInfo.LoadingProgress
- uid: TAssetBundle.Extensions.AssetInfo.LoadingProgress*
  name: LoadingProgress
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_LoadingProgress_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.LoadingProgress
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.LoadingProgress
  nameWithType: AssetInfo.LoadingProgress
- uid: TAssetBundle.Extensions.AssetInfo.OnUnloaded
  name: OnUnloaded
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_OnUnloaded
  commentId: E:TAssetBundle.Extensions.AssetInfo.OnUnloaded
  fullName: TAssetBundle.Extensions.AssetInfo.OnUnloaded
  nameWithType: AssetInfo.OnUnloaded
- uid: TAssetBundle.Extensions.AssetInfo.SetDontDestroy(System.Boolean)
  name: SetDontDestroy(bool)
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_SetDontDestroy_System_Boolean_
  commentId: M:TAssetBundle.Extensions.AssetInfo.SetDontDestroy(System.Boolean)
  name.vb: SetDontDestroy(Boolean)
  fullName: TAssetBundle.Extensions.AssetInfo.SetDontDestroy(bool)
  fullName.vb: TAssetBundle.Extensions.AssetInfo.SetDontDestroy(Boolean)
  nameWithType: AssetInfo.SetDontDestroy(bool)
  nameWithType.vb: AssetInfo.SetDontDestroy(Boolean)
- uid: TAssetBundle.Extensions.AssetInfo.SetDontDestroy*
  name: SetDontDestroy
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_SetDontDestroy_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.SetDontDestroy
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.SetDontDestroy
  nameWithType: AssetInfo.SetDontDestroy
- uid: TAssetBundle.Extensions.AssetInfo.StartTime
  name: StartTime
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_StartTime
  commentId: P:TAssetBundle.Extensions.AssetInfo.StartTime
  fullName: TAssetBundle.Extensions.AssetInfo.StartTime
  nameWithType: AssetInfo.StartTime
- uid: TAssetBundle.Extensions.AssetInfo.StartTime*
  name: StartTime
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_StartTime_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.StartTime
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.StartTime
  nameWithType: AssetInfo.StartTime
- uid: TAssetBundle.Extensions.AssetInfo.Unload
  name: Unload()
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Unload
  commentId: M:TAssetBundle.Extensions.AssetInfo.Unload
  fullName: TAssetBundle.Extensions.AssetInfo.Unload()
  nameWithType: AssetInfo.Unload()
- uid: TAssetBundle.Extensions.AssetInfo.Unload*
  name: Unload
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Unload_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.Unload
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.Unload
  nameWithType: AssetInfo.Unload
- uid: TAssetBundle.Extensions.AssetInfo.UsageCount
  name: UsageCount
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_UsageCount
  commentId: P:TAssetBundle.Extensions.AssetInfo.UsageCount
  fullName: TAssetBundle.Extensions.AssetInfo.UsageCount
  nameWithType: AssetInfo.UsageCount
- uid: TAssetBundle.Extensions.AssetInfo.UsageCount*
  name: UsageCount
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_UsageCount_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.UsageCount
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.UsageCount
  nameWithType: AssetInfo.UsageCount
- uid: TAssetBundle.Extensions.AssetInfo.Use
  name: Use()
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Use
  commentId: M:TAssetBundle.Extensions.AssetInfo.Use
  fullName: TAssetBundle.Extensions.AssetInfo.Use()
  nameWithType: AssetInfo.Use()
- uid: TAssetBundle.Extensions.AssetInfo.Use*
  name: Use
  href: api/TAssetBundle.Extensions.AssetInfo.html#TAssetBundle_Extensions_AssetInfo_Use_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo.Use
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo.Use
  nameWithType: AssetInfo.Use
- uid: TAssetBundle.Extensions.AssetInfo`1
  name: AssetInfo<T>
  href: api/TAssetBundle.Extensions.AssetInfo-1.html
  commentId: T:TAssetBundle.Extensions.AssetInfo`1
  name.vb: AssetInfo(Of T)
  fullName: TAssetBundle.Extensions.AssetInfo<T>
  fullName.vb: TAssetBundle.Extensions.AssetInfo(Of T)
  nameWithType: AssetInfo<T>
  nameWithType.vb: AssetInfo(Of T)
- uid: TAssetBundle.Extensions.AssetInfo`1.Get
  name: Get()
  href: api/TAssetBundle.Extensions.AssetInfo-1.html#TAssetBundle_Extensions_AssetInfo_1_Get
  commentId: M:TAssetBundle.Extensions.AssetInfo`1.Get
  fullName: TAssetBundle.Extensions.AssetInfo<T>.Get()
  fullName.vb: TAssetBundle.Extensions.AssetInfo(Of T).Get()
  nameWithType: AssetInfo<T>.Get()
  nameWithType.vb: AssetInfo(Of T).Get()
- uid: TAssetBundle.Extensions.AssetInfo`1.Get*
  name: Get
  href: api/TAssetBundle.Extensions.AssetInfo-1.html#TAssetBundle_Extensions_AssetInfo_1_Get_
  commentId: Overload:TAssetBundle.Extensions.AssetInfo`1.Get
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetInfo<T>.Get
  fullName.vb: TAssetBundle.Extensions.AssetInfo(Of T).Get
  nameWithType: AssetInfo<T>.Get
  nameWithType.vb: AssetInfo(Of T).Get
- uid: TAssetBundle.Extensions.AssetLinker
  name: AssetLinker
  href: api/TAssetBundle.Extensions.AssetLinker.html
  commentId: T:TAssetBundle.Extensions.AssetLinker
  fullName: TAssetBundle.Extensions.AssetLinker
  nameWithType: AssetLinker
- uid: TAssetBundle.Extensions.AssetLinker.AllAssetLinkers
  name: AllAssetLinkers
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_AllAssetLinkers
  commentId: P:TAssetBundle.Extensions.AssetLinker.AllAssetLinkers
  fullName: TAssetBundle.Extensions.AssetLinker.AllAssetLinkers
  nameWithType: AssetLinker.AllAssetLinkers
- uid: TAssetBundle.Extensions.AssetLinker.AllAssetLinkers*
  name: AllAssetLinkers
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_AllAssetLinkers_
  commentId: Overload:TAssetBundle.Extensions.AssetLinker.AllAssetLinkers
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinker.AllAssetLinkers
  nameWithType: AssetLinker.AllAssetLinkers
- uid: TAssetBundle.Extensions.AssetLinker.AssetInfo
  name: AssetInfo
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_AssetInfo
  commentId: P:TAssetBundle.Extensions.AssetLinker.AssetInfo
  fullName: TAssetBundle.Extensions.AssetLinker.AssetInfo
  nameWithType: AssetLinker.AssetInfo
- uid: TAssetBundle.Extensions.AssetLinker.AssetInfo*
  name: AssetInfo
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_AssetInfo_
  commentId: Overload:TAssetBundle.Extensions.AssetLinker.AssetInfo
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinker.AssetInfo
  nameWithType: AssetLinker.AssetInfo
- uid: TAssetBundle.Extensions.AssetLinker.IsLink
  name: IsLink
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_IsLink
  commentId: P:TAssetBundle.Extensions.AssetLinker.IsLink
  fullName: TAssetBundle.Extensions.AssetLinker.IsLink
  nameWithType: AssetLinker.IsLink
- uid: TAssetBundle.Extensions.AssetLinker.IsLink*
  name: IsLink
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_IsLink_
  commentId: Overload:TAssetBundle.Extensions.AssetLinker.IsLink
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinker.IsLink
  nameWithType: AssetLinker.IsLink
- uid: TAssetBundle.Extensions.AssetLinker.Link(TAssetBundle.Extensions.AssetInfo)
  name: Link(AssetInfo)
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_Link_TAssetBundle_Extensions_AssetInfo_
  commentId: M:TAssetBundle.Extensions.AssetLinker.Link(TAssetBundle.Extensions.AssetInfo)
  fullName: TAssetBundle.Extensions.AssetLinker.Link(TAssetBundle.Extensions.AssetInfo)
  nameWithType: AssetLinker.Link(AssetInfo)
- uid: TAssetBundle.Extensions.AssetLinker.Link*
  name: Link
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_Link_
  commentId: Overload:TAssetBundle.Extensions.AssetLinker.Link
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinker.Link
  nameWithType: AssetLinker.Link
- uid: TAssetBundle.Extensions.AssetLinker.StartTime
  name: StartTime
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_StartTime
  commentId: P:TAssetBundle.Extensions.AssetLinker.StartTime
  fullName: TAssetBundle.Extensions.AssetLinker.StartTime
  nameWithType: AssetLinker.StartTime
- uid: TAssetBundle.Extensions.AssetLinker.StartTime*
  name: StartTime
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_StartTime_
  commentId: Overload:TAssetBundle.Extensions.AssetLinker.StartTime
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinker.StartTime
  nameWithType: AssetLinker.StartTime
- uid: TAssetBundle.Extensions.AssetLinker.Unlink
  name: Unlink()
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_Unlink
  commentId: M:TAssetBundle.Extensions.AssetLinker.Unlink
  fullName: TAssetBundle.Extensions.AssetLinker.Unlink()
  nameWithType: AssetLinker.Unlink()
- uid: TAssetBundle.Extensions.AssetLinker.Unlink*
  name: Unlink
  href: api/TAssetBundle.Extensions.AssetLinker.html#TAssetBundle_Extensions_AssetLinker_Unlink_
  commentId: Overload:TAssetBundle.Extensions.AssetLinker.Unlink
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinker.Unlink
  nameWithType: AssetLinker.Unlink
- uid: TAssetBundle.Extensions.AssetLinkerExtensions
  name: AssetLinkerExtensions
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html
  commentId: T:TAssetBundle.Extensions.AssetLinkerExtensions
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions
  nameWithType: AssetLinkerExtensions
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetLinker(UnityEngine.GameObject)
  name: GetAssetLinker(GameObject)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_GetAssetLinker_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetLinker(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetLinker(UnityEngine.GameObject)
  nameWithType: AssetLinkerExtensions.GetAssetLinker(GameObject)
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetLinker*
  name: GetAssetLinker
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_GetAssetLinker_
  commentId: Overload:TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetLinker
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetLinker
  nameWithType: AssetLinkerExtensions.GetAssetLinker
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetPath(UnityEngine.GameObject)
  name: GetAssetPath(GameObject)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_GetAssetPath_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetPath(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetPath(UnityEngine.GameObject)
  nameWithType: AssetLinkerExtensions.GetAssetPath(GameObject)
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetPath*
  name: GetAssetPath
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_GetAssetPath_
  commentId: Overload:TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetPath
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.GetAssetPath
  nameWithType: AssetLinkerExtensions.GetAssetPath
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset(UnityEngine.GameObject,TAssetBundle.Extensions.AssetInfo)
  name: LinkAsset(GameObject, AssetInfo)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_LinkAsset_UnityEngine_GameObject_TAssetBundle_Extensions_AssetInfo_
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset(UnityEngine.GameObject,TAssetBundle.Extensions.AssetInfo)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset(UnityEngine.GameObject, TAssetBundle.Extensions.AssetInfo)
  nameWithType: AssetLinkerExtensions.LinkAsset(GameObject, AssetInfo)
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset*
  name: LinkAsset
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_LinkAsset_
  commentId: Overload:TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset
  nameWithType: AssetLinkerExtensions.LinkAsset
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset``1(``0,TAssetBundle.Extensions.AssetInfo)
  name: LinkAsset<T>(T, AssetInfo)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_LinkAsset__1___0_TAssetBundle_Extensions_AssetInfo_
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset``1(``0,TAssetBundle.Extensions.AssetInfo)
  name.vb: LinkAsset(Of T)(T, AssetInfo)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset<T>(T, TAssetBundle.Extensions.AssetInfo)
  fullName.vb: TAssetBundle.Extensions.AssetLinkerExtensions.LinkAsset(Of T)(T, TAssetBundle.Extensions.AssetInfo)
  nameWithType: AssetLinkerExtensions.LinkAsset<T>(T, AssetInfo)
  nameWithType.vb: AssetLinkerExtensions.LinkAsset(Of T)(T, AssetInfo)
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo(UnityEngine.GameObject,TAssetBundle.Extensions.AssetInfo@)
  name: TryGetAssetInfo(GameObject, out AssetInfo)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_TryGetAssetInfo_UnityEngine_GameObject_TAssetBundle_Extensions_AssetInfo__
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo(UnityEngine.GameObject,TAssetBundle.Extensions.AssetInfo@)
  name.vb: TryGetAssetInfo(GameObject, AssetInfo)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo(UnityEngine.GameObject, out TAssetBundle.Extensions.AssetInfo)
  fullName.vb: TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo(UnityEngine.GameObject, TAssetBundle.Extensions.AssetInfo)
  nameWithType: AssetLinkerExtensions.TryGetAssetInfo(GameObject, out AssetInfo)
  nameWithType.vb: AssetLinkerExtensions.TryGetAssetInfo(GameObject, AssetInfo)
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo*
  name: TryGetAssetInfo
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_TryGetAssetInfo_
  commentId: Overload:TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.TryGetAssetInfo
  nameWithType: AssetLinkerExtensions.TryGetAssetInfo
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset(UnityEngine.GameObject)
  name: UnlinkAsset(GameObject)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_UnlinkAsset_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset(UnityEngine.GameObject)
  nameWithType: AssetLinkerExtensions.UnlinkAsset(GameObject)
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset*
  name: UnlinkAsset
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_UnlinkAsset_
  commentId: Overload:TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset
  nameWithType: AssetLinkerExtensions.UnlinkAsset
- uid: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset``1(``0)
  name: UnlinkAsset<T>(T)
  href: api/TAssetBundle.Extensions.AssetLinkerExtensions.html#TAssetBundle_Extensions_AssetLinkerExtensions_UnlinkAsset__1___0_
  commentId: M:TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset``1(``0)
  name.vb: UnlinkAsset(Of T)(T)
  fullName: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset<T>(T)
  fullName.vb: TAssetBundle.Extensions.AssetLinkerExtensions.UnlinkAsset(Of T)(T)
  nameWithType: AssetLinkerExtensions.UnlinkAsset<T>(T)
  nameWithType.vb: AssetLinkerExtensions.UnlinkAsset(Of T)(T)
- uid: TAssetBundle.Extensions.AssetLinkerInspector
  name: AssetLinkerInspector
  href: api/TAssetBundle.Extensions.AssetLinkerInspector.html
  commentId: T:TAssetBundle.Extensions.AssetLinkerInspector
  fullName: TAssetBundle.Extensions.AssetLinkerInspector
  nameWithType: AssetLinkerInspector
- uid: TAssetBundle.Extensions.AssetLinkerInspector.OnInspectorGUI
  name: OnInspectorGUI()
  href: api/TAssetBundle.Extensions.AssetLinkerInspector.html#TAssetBundle_Extensions_AssetLinkerInspector_OnInspectorGUI
  commentId: M:TAssetBundle.Extensions.AssetLinkerInspector.OnInspectorGUI
  fullName: TAssetBundle.Extensions.AssetLinkerInspector.OnInspectorGUI()
  nameWithType: AssetLinkerInspector.OnInspectorGUI()
- uid: TAssetBundle.Extensions.AssetLinkerInspector.OnInspectorGUI*
  name: OnInspectorGUI
  href: api/TAssetBundle.Extensions.AssetLinkerInspector.html#TAssetBundle_Extensions_AssetLinkerInspector_OnInspectorGUI_
  commentId: Overload:TAssetBundle.Extensions.AssetLinkerInspector.OnInspectorGUI
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetLinkerInspector.OnInspectorGUI
  nameWithType: AssetLinkerInspector.OnInspectorGUI
- uid: TAssetBundle.Extensions.AssetManager
  name: AssetManager
  href: api/TAssetBundle.Extensions.AssetManager.html
  commentId: T:TAssetBundle.Extensions.AssetManager
  fullName: TAssetBundle.Extensions.AssetManager
  nameWithType: AssetManager
- uid: TAssetBundle.Extensions.AssetManager.AssetInfos
  name: AssetInfos
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_AssetInfos
  commentId: P:TAssetBundle.Extensions.AssetManager.AssetInfos
  fullName: TAssetBundle.Extensions.AssetManager.AssetInfos
  nameWithType: AssetManager.AssetInfos
- uid: TAssetBundle.Extensions.AssetManager.AssetInfos*
  name: AssetInfos
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_AssetInfos_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.AssetInfos
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.AssetInfos
  nameWithType: AssetManager.AssetInfos
- uid: TAssetBundle.Extensions.AssetManager.ClearPrefabPool(System.String)
  name: ClearPrefabPool(string)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_ClearPrefabPool_System_String_
  commentId: M:TAssetBundle.Extensions.AssetManager.ClearPrefabPool(System.String)
  name.vb: ClearPrefabPool(String)
  fullName: TAssetBundle.Extensions.AssetManager.ClearPrefabPool(string)
  fullName.vb: TAssetBundle.Extensions.AssetManager.ClearPrefabPool(String)
  nameWithType: AssetManager.ClearPrefabPool(string)
  nameWithType.vb: AssetManager.ClearPrefabPool(String)
- uid: TAssetBundle.Extensions.AssetManager.ClearPrefabPool*
  name: ClearPrefabPool
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_ClearPrefabPool_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.ClearPrefabPool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.ClearPrefabPool
  nameWithType: AssetManager.ClearPrefabPool
- uid: TAssetBundle.Extensions.AssetManager.ClearPrefabPools
  name: ClearPrefabPools()
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_ClearPrefabPools
  commentId: M:TAssetBundle.Extensions.AssetManager.ClearPrefabPools
  fullName: TAssetBundle.Extensions.AssetManager.ClearPrefabPools()
  nameWithType: AssetManager.ClearPrefabPools()
- uid: TAssetBundle.Extensions.AssetManager.ClearPrefabPools*
  name: ClearPrefabPools
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_ClearPrefabPools_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.ClearPrefabPools
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.ClearPrefabPools
  nameWithType: AssetManager.ClearPrefabPools
- uid: TAssetBundle.Extensions.AssetManager.GetPrefab(System.String,UnityEngine.Transform,System.Action{UnityEngine.GameObject},System.Boolean,System.Boolean,System.Object)
  name: GetPrefab(string, Transform, Action<GameObject>, bool, bool, object)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetPrefab_System_String_UnityEngine_Transform_System_Action_UnityEngine_GameObject__System_Boolean_System_Boolean_System_Object_
  commentId: M:TAssetBundle.Extensions.AssetManager.GetPrefab(System.String,UnityEngine.Transform,System.Action{UnityEngine.GameObject},System.Boolean,System.Boolean,System.Object)
  name.vb: GetPrefab(String, Transform, Action(Of GameObject), Boolean, Boolean, Object)
  fullName: TAssetBundle.Extensions.AssetManager.GetPrefab(string, UnityEngine.Transform, System.Action<UnityEngine.GameObject>, bool, bool, object)
  fullName.vb: TAssetBundle.Extensions.AssetManager.GetPrefab(String, UnityEngine.Transform, System.Action(Of UnityEngine.GameObject), Boolean, Boolean, Object)
  nameWithType: AssetManager.GetPrefab(string, Transform, Action<GameObject>, bool, bool, object)
  nameWithType.vb: AssetManager.GetPrefab(String, Transform, Action(Of GameObject), Boolean, Boolean, Object)
- uid: TAssetBundle.Extensions.AssetManager.GetPrefab(TAssetBundle.AssetRef,UnityEngine.Transform,System.Action{UnityEngine.GameObject},System.Boolean,System.Boolean,System.Object)
  name: GetPrefab(AssetRef, Transform, Action<GameObject>, bool, bool, object)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetPrefab_TAssetBundle_AssetRef_UnityEngine_Transform_System_Action_UnityEngine_GameObject__System_Boolean_System_Boolean_System_Object_
  commentId: M:TAssetBundle.Extensions.AssetManager.GetPrefab(TAssetBundle.AssetRef,UnityEngine.Transform,System.Action{UnityEngine.GameObject},System.Boolean,System.Boolean,System.Object)
  name.vb: GetPrefab(AssetRef, Transform, Action(Of GameObject), Boolean, Boolean, Object)
  fullName: TAssetBundle.Extensions.AssetManager.GetPrefab(TAssetBundle.AssetRef, UnityEngine.Transform, System.Action<UnityEngine.GameObject>, bool, bool, object)
  fullName.vb: TAssetBundle.Extensions.AssetManager.GetPrefab(TAssetBundle.AssetRef, UnityEngine.Transform, System.Action(Of UnityEngine.GameObject), Boolean, Boolean, Object)
  nameWithType: AssetManager.GetPrefab(AssetRef, Transform, Action<GameObject>, bool, bool, object)
  nameWithType.vb: AssetManager.GetPrefab(AssetRef, Transform, Action(Of GameObject), Boolean, Boolean, Object)
- uid: TAssetBundle.Extensions.AssetManager.GetPrefab*
  name: GetPrefab
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetPrefab_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.GetPrefab
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.GetPrefab
  nameWithType: AssetManager.GetPrefab
- uid: TAssetBundle.Extensions.AssetManager.GetPrefabAsync(System.String,UnityEngine.Transform,System.Boolean,System.Boolean,System.Object)
  name: GetPrefabAsync(string, Transform, bool, bool, object)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetPrefabAsync_System_String_UnityEngine_Transform_System_Boolean_System_Boolean_System_Object_
  commentId: M:TAssetBundle.Extensions.AssetManager.GetPrefabAsync(System.String,UnityEngine.Transform,System.Boolean,System.Boolean,System.Object)
  name.vb: GetPrefabAsync(String, Transform, Boolean, Boolean, Object)
  fullName: TAssetBundle.Extensions.AssetManager.GetPrefabAsync(string, UnityEngine.Transform, bool, bool, object)
  fullName.vb: TAssetBundle.Extensions.AssetManager.GetPrefabAsync(String, UnityEngine.Transform, Boolean, Boolean, Object)
  nameWithType: AssetManager.GetPrefabAsync(string, Transform, bool, bool, object)
  nameWithType.vb: AssetManager.GetPrefabAsync(String, Transform, Boolean, Boolean, Object)
- uid: TAssetBundle.Extensions.AssetManager.GetPrefabAsync(TAssetBundle.AssetRef,UnityEngine.Transform,System.Boolean,System.Boolean,System.Object)
  name: GetPrefabAsync(AssetRef, Transform, bool, bool, object)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetPrefabAsync_TAssetBundle_AssetRef_UnityEngine_Transform_System_Boolean_System_Boolean_System_Object_
  commentId: M:TAssetBundle.Extensions.AssetManager.GetPrefabAsync(TAssetBundle.AssetRef,UnityEngine.Transform,System.Boolean,System.Boolean,System.Object)
  name.vb: GetPrefabAsync(AssetRef, Transform, Boolean, Boolean, Object)
  fullName: TAssetBundle.Extensions.AssetManager.GetPrefabAsync(TAssetBundle.AssetRef, UnityEngine.Transform, bool, bool, object)
  fullName.vb: TAssetBundle.Extensions.AssetManager.GetPrefabAsync(TAssetBundle.AssetRef, UnityEngine.Transform, Boolean, Boolean, Object)
  nameWithType: AssetManager.GetPrefabAsync(AssetRef, Transform, bool, bool, object)
  nameWithType.vb: AssetManager.GetPrefabAsync(AssetRef, Transform, Boolean, Boolean, Object)
- uid: TAssetBundle.Extensions.AssetManager.GetPrefabAsync*
  name: GetPrefabAsync
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetPrefabAsync_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.GetPrefabAsync
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.GetPrefabAsync
  nameWithType: AssetManager.GetPrefabAsync
- uid: TAssetBundle.Extensions.AssetManager.GetUsingAssets
  name: GetUsingAssets()
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetUsingAssets
  commentId: M:TAssetBundle.Extensions.AssetManager.GetUsingAssets
  fullName: TAssetBundle.Extensions.AssetManager.GetUsingAssets()
  nameWithType: AssetManager.GetUsingAssets()
- uid: TAssetBundle.Extensions.AssetManager.GetUsingAssets*
  name: GetUsingAssets
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_GetUsingAssets_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.GetUsingAssets
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.GetUsingAssets
  nameWithType: AssetManager.GetUsingAssets
- uid: TAssetBundle.Extensions.AssetManager.IsLoadedAsset(System.String)
  name: IsLoadedAsset(string)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_IsLoadedAsset_System_String_
  commentId: M:TAssetBundle.Extensions.AssetManager.IsLoadedAsset(System.String)
  name.vb: IsLoadedAsset(String)
  fullName: TAssetBundle.Extensions.AssetManager.IsLoadedAsset(string)
  fullName.vb: TAssetBundle.Extensions.AssetManager.IsLoadedAsset(String)
  nameWithType: AssetManager.IsLoadedAsset(string)
  nameWithType.vb: AssetManager.IsLoadedAsset(String)
- uid: TAssetBundle.Extensions.AssetManager.IsLoadedAsset*
  name: IsLoadedAsset
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_IsLoadedAsset_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.IsLoadedAsset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.IsLoadedAsset
  nameWithType: AssetManager.IsLoadedAsset
- uid: TAssetBundle.Extensions.AssetManager.IsLoading
  name: IsLoading()
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_IsLoading
  commentId: M:TAssetBundle.Extensions.AssetManager.IsLoading
  fullName: TAssetBundle.Extensions.AssetManager.IsLoading()
  nameWithType: AssetManager.IsLoading()
- uid: TAssetBundle.Extensions.AssetManager.IsLoading*
  name: IsLoading
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_IsLoading_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.IsLoading
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.IsLoading
  nameWithType: AssetManager.IsLoading
- uid: TAssetBundle.Extensions.AssetManager.LoadAsset*
  name: LoadAsset
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAsset_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.LoadAsset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.LoadAsset
  nameWithType: AssetManager.LoadAsset
- uid: TAssetBundle.Extensions.AssetManager.LoadAssetAsync*
  name: LoadAssetAsync
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAssetAsync_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.LoadAssetAsync
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.LoadAssetAsync
  nameWithType: AssetManager.LoadAssetAsync
- uid: TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(System.String)
  name: LoadAssetAsync<T>(string)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAssetAsync__1_System_String_
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(System.String)
  name.vb: LoadAssetAsync(Of T)(String)
  fullName: TAssetBundle.Extensions.AssetManager.LoadAssetAsync<T>(string)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAssetAsync(Of T)(String)
  nameWithType: AssetManager.LoadAssetAsync<T>(string)
  nameWithType.vb: AssetManager.LoadAssetAsync(Of T)(String)
- uid: TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(TAssetBundle.AssetRef)
  name: LoadAssetAsync<T>(AssetRef)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAssetAsync__1_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(TAssetBundle.AssetRef)
  name.vb: LoadAssetAsync(Of T)(AssetRef)
  fullName: TAssetBundle.Extensions.AssetManager.LoadAssetAsync<T>(TAssetBundle.AssetRef)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAssetAsync(Of T)(TAssetBundle.AssetRef)
  nameWithType: AssetManager.LoadAssetAsync<T>(AssetRef)
  nameWithType.vb: AssetManager.LoadAssetAsync(Of T)(AssetRef)
- uid: TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(UnityEngine.GameObject,System.String)
  name: LoadAssetAsync<T>(GameObject, string)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAssetAsync__1_UnityEngine_GameObject_System_String_
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(UnityEngine.GameObject,System.String)
  name.vb: LoadAssetAsync(Of T)(GameObject, String)
  fullName: TAssetBundle.Extensions.AssetManager.LoadAssetAsync<T>(UnityEngine.GameObject, string)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAssetAsync(Of T)(UnityEngine.GameObject, String)
  nameWithType: AssetManager.LoadAssetAsync<T>(GameObject, string)
  nameWithType.vb: AssetManager.LoadAssetAsync(Of T)(GameObject, String)
- uid: TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(UnityEngine.GameObject,TAssetBundle.AssetRef)
  name: LoadAssetAsync<T>(GameObject, AssetRef)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAssetAsync__1_UnityEngine_GameObject_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAssetAsync``1(UnityEngine.GameObject,TAssetBundle.AssetRef)
  name.vb: LoadAssetAsync(Of T)(GameObject, AssetRef)
  fullName: TAssetBundle.Extensions.AssetManager.LoadAssetAsync<T>(UnityEngine.GameObject, TAssetBundle.AssetRef)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAssetAsync(Of T)(UnityEngine.GameObject, TAssetBundle.AssetRef)
  nameWithType: AssetManager.LoadAssetAsync<T>(GameObject, AssetRef)
  nameWithType.vb: AssetManager.LoadAssetAsync(Of T)(GameObject, AssetRef)
- uid: TAssetBundle.Extensions.AssetManager.LoadAsset``1(TAssetBundle.Extensions.IGetProgressable,UnityEngine.GameObject,System.String,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name: LoadAsset<T>(IGetProgressable, GameObject, string, bool, Action<AssetInfo<T>>)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAsset__1_TAssetBundle_Extensions_IGetProgressable_UnityEngine_GameObject_System_String_System_Boolean_System_Action_TAssetBundle_Extensions_AssetInfo___0___
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAsset``1(TAssetBundle.Extensions.IGetProgressable,UnityEngine.GameObject,System.String,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name.vb: LoadAsset(Of T)(IGetProgressable, GameObject, String, Boolean, Action(Of AssetInfo(Of T)))
  fullName: TAssetBundle.Extensions.AssetManager.LoadAsset<T>(TAssetBundle.Extensions.IGetProgressable, UnityEngine.GameObject, string, bool, System.Action<TAssetBundle.Extensions.AssetInfo<T>>)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAsset(Of T)(TAssetBundle.Extensions.IGetProgressable, UnityEngine.GameObject, String, Boolean, System.Action(Of TAssetBundle.Extensions.AssetInfo(Of T)))
  nameWithType: AssetManager.LoadAsset<T>(IGetProgressable, GameObject, string, bool, Action<AssetInfo<T>>)
  nameWithType.vb: AssetManager.LoadAsset(Of T)(IGetProgressable, GameObject, String, Boolean, Action(Of AssetInfo(Of T)))
- uid: TAssetBundle.Extensions.AssetManager.LoadAsset``1(TAssetBundle.Extensions.IGetProgressable,UnityEngine.GameObject,TAssetBundle.AssetRef,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name: LoadAsset<T>(IGetProgressable, GameObject, AssetRef, bool, Action<AssetInfo<T>>)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAsset__1_TAssetBundle_Extensions_IGetProgressable_UnityEngine_GameObject_TAssetBundle_AssetRef_System_Boolean_System_Action_TAssetBundle_Extensions_AssetInfo___0___
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAsset``1(TAssetBundle.Extensions.IGetProgressable,UnityEngine.GameObject,TAssetBundle.AssetRef,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name.vb: LoadAsset(Of T)(IGetProgressable, GameObject, AssetRef, Boolean, Action(Of AssetInfo(Of T)))
  fullName: TAssetBundle.Extensions.AssetManager.LoadAsset<T>(TAssetBundle.Extensions.IGetProgressable, UnityEngine.GameObject, TAssetBundle.AssetRef, bool, System.Action<TAssetBundle.Extensions.AssetInfo<T>>)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAsset(Of T)(TAssetBundle.Extensions.IGetProgressable, UnityEngine.GameObject, TAssetBundle.AssetRef, Boolean, System.Action(Of TAssetBundle.Extensions.AssetInfo(Of T)))
  nameWithType: AssetManager.LoadAsset<T>(IGetProgressable, GameObject, AssetRef, bool, Action<AssetInfo<T>>)
  nameWithType.vb: AssetManager.LoadAsset(Of T)(IGetProgressable, GameObject, AssetRef, Boolean, Action(Of AssetInfo(Of T)))
- uid: TAssetBundle.Extensions.AssetManager.LoadAsset``1(UnityEngine.GameObject,System.String,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name: LoadAsset<T>(GameObject, string, bool, Action<AssetInfo<T>>)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAsset__1_UnityEngine_GameObject_System_String_System_Boolean_System_Action_TAssetBundle_Extensions_AssetInfo___0___
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAsset``1(UnityEngine.GameObject,System.String,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name.vb: LoadAsset(Of T)(GameObject, String, Boolean, Action(Of AssetInfo(Of T)))
  fullName: TAssetBundle.Extensions.AssetManager.LoadAsset<T>(UnityEngine.GameObject, string, bool, System.Action<TAssetBundle.Extensions.AssetInfo<T>>)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAsset(Of T)(UnityEngine.GameObject, String, Boolean, System.Action(Of TAssetBundle.Extensions.AssetInfo(Of T)))
  nameWithType: AssetManager.LoadAsset<T>(GameObject, string, bool, Action<AssetInfo<T>>)
  nameWithType.vb: AssetManager.LoadAsset(Of T)(GameObject, String, Boolean, Action(Of AssetInfo(Of T)))
- uid: TAssetBundle.Extensions.AssetManager.LoadAsset``1(UnityEngine.GameObject,TAssetBundle.AssetRef,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name: LoadAsset<T>(GameObject, AssetRef, bool, Action<AssetInfo<T>>)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadAsset__1_UnityEngine_GameObject_TAssetBundle_AssetRef_System_Boolean_System_Action_TAssetBundle_Extensions_AssetInfo___0___
  commentId: M:TAssetBundle.Extensions.AssetManager.LoadAsset``1(UnityEngine.GameObject,TAssetBundle.AssetRef,System.Boolean,System.Action{TAssetBundle.Extensions.AssetInfo{``0}})
  name.vb: LoadAsset(Of T)(GameObject, AssetRef, Boolean, Action(Of AssetInfo(Of T)))
  fullName: TAssetBundle.Extensions.AssetManager.LoadAsset<T>(UnityEngine.GameObject, TAssetBundle.AssetRef, bool, System.Action<TAssetBundle.Extensions.AssetInfo<T>>)
  fullName.vb: TAssetBundle.Extensions.AssetManager.LoadAsset(Of T)(UnityEngine.GameObject, TAssetBundle.AssetRef, Boolean, System.Action(Of TAssetBundle.Extensions.AssetInfo(Of T)))
  nameWithType: AssetManager.LoadAsset<T>(GameObject, AssetRef, bool, Action<AssetInfo<T>>)
  nameWithType.vb: AssetManager.LoadAsset(Of T)(GameObject, AssetRef, Boolean, Action(Of AssetInfo(Of T)))
- uid: TAssetBundle.Extensions.AssetManager.LoadPrefabDelegate
  name: AssetManager.LoadPrefabDelegate
  href: api/TAssetBundle.Extensions.AssetManager.LoadPrefabDelegate.html
  commentId: T:TAssetBundle.Extensions.AssetManager.LoadPrefabDelegate
  fullName: TAssetBundle.Extensions.AssetManager.LoadPrefabDelegate
  nameWithType: AssetManager.LoadPrefabDelegate
- uid: TAssetBundle.Extensions.AssetManager.LoadPrefabFunc
  name: LoadPrefabFunc
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadPrefabFunc
  commentId: P:TAssetBundle.Extensions.AssetManager.LoadPrefabFunc
  fullName: TAssetBundle.Extensions.AssetManager.LoadPrefabFunc
  nameWithType: AssetManager.LoadPrefabFunc
- uid: TAssetBundle.Extensions.AssetManager.LoadPrefabFunc*
  name: LoadPrefabFunc
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_LoadPrefabFunc_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.LoadPrefabFunc
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.LoadPrefabFunc
  nameWithType: AssetManager.LoadPrefabFunc
- uid: TAssetBundle.Extensions.AssetManager.OnCreated
  name: OnCreated
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_OnCreated
  commentId: E:TAssetBundle.Extensions.AssetManager.OnCreated
  fullName: TAssetBundle.Extensions.AssetManager.OnCreated
  nameWithType: AssetManager.OnCreated
- uid: TAssetBundle.Extensions.AssetManager.OnFree
  name: OnFree
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_OnFree
  commentId: E:TAssetBundle.Extensions.AssetManager.OnFree
  fullName: TAssetBundle.Extensions.AssetManager.OnFree
  nameWithType: AssetManager.OnFree
- uid: TAssetBundle.Extensions.AssetManager.OnUsed
  name: OnUsed
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_OnUsed
  commentId: E:TAssetBundle.Extensions.AssetManager.OnUsed
  fullName: TAssetBundle.Extensions.AssetManager.OnUsed
  nameWithType: AssetManager.OnUsed
- uid: TAssetBundle.Extensions.AssetManager.PrefabPoolRoot
  name: PrefabPoolRoot
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PrefabPoolRoot
  commentId: P:TAssetBundle.Extensions.AssetManager.PrefabPoolRoot
  fullName: TAssetBundle.Extensions.AssetManager.PrefabPoolRoot
  nameWithType: AssetManager.PrefabPoolRoot
- uid: TAssetBundle.Extensions.AssetManager.PrefabPoolRoot*
  name: PrefabPoolRoot
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PrefabPoolRoot_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.PrefabPoolRoot
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.PrefabPoolRoot
  nameWithType: AssetManager.PrefabPoolRoot
- uid: TAssetBundle.Extensions.AssetManager.PrefabPools
  name: PrefabPools
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PrefabPools
  commentId: P:TAssetBundle.Extensions.AssetManager.PrefabPools
  fullName: TAssetBundle.Extensions.AssetManager.PrefabPools
  nameWithType: AssetManager.PrefabPools
- uid: TAssetBundle.Extensions.AssetManager.PrefabPools*
  name: PrefabPools
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PrefabPools_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.PrefabPools
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.PrefabPools
  nameWithType: AssetManager.PrefabPools
- uid: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(System.String,System.Boolean,System.Object)
  name: PreloadPrefabAsync(string, bool, object)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PreloadPrefabAsync_System_String_System_Boolean_System_Object_
  commentId: M:TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(System.String,System.Boolean,System.Object)
  name.vb: PreloadPrefabAsync(String, Boolean, Object)
  fullName: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(string, bool, object)
  fullName.vb: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(String, Boolean, Object)
  nameWithType: AssetManager.PreloadPrefabAsync(string, bool, object)
  nameWithType.vb: AssetManager.PreloadPrefabAsync(String, Boolean, Object)
- uid: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(TAssetBundle.GameObjectAssetRef,System.Boolean,System.Object)
  name: PreloadPrefabAsync(GameObjectAssetRef, bool, object)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PreloadPrefabAsync_TAssetBundle_GameObjectAssetRef_System_Boolean_System_Object_
  commentId: M:TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(TAssetBundle.GameObjectAssetRef,System.Boolean,System.Object)
  name.vb: PreloadPrefabAsync(GameObjectAssetRef, Boolean, Object)
  fullName: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(TAssetBundle.GameObjectAssetRef, bool, object)
  fullName.vb: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync(TAssetBundle.GameObjectAssetRef, Boolean, Object)
  nameWithType: AssetManager.PreloadPrefabAsync(GameObjectAssetRef, bool, object)
  nameWithType.vb: AssetManager.PreloadPrefabAsync(GameObjectAssetRef, Boolean, Object)
- uid: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync*
  name: PreloadPrefabAsync
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_PreloadPrefabAsync_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.PreloadPrefabAsync
  nameWithType: AssetManager.PreloadPrefabAsync
- uid: TAssetBundle.Extensions.AssetManager.TryGetAssetInfo(System.String,TAssetBundle.Extensions.AssetInfo@)
  name: TryGetAssetInfo(string, out AssetInfo)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_TryGetAssetInfo_System_String_TAssetBundle_Extensions_AssetInfo__
  commentId: M:TAssetBundle.Extensions.AssetManager.TryGetAssetInfo(System.String,TAssetBundle.Extensions.AssetInfo@)
  name.vb: TryGetAssetInfo(String, AssetInfo)
  fullName: TAssetBundle.Extensions.AssetManager.TryGetAssetInfo(string, out TAssetBundle.Extensions.AssetInfo)
  fullName.vb: TAssetBundle.Extensions.AssetManager.TryGetAssetInfo(String, TAssetBundle.Extensions.AssetInfo)
  nameWithType: AssetManager.TryGetAssetInfo(string, out AssetInfo)
  nameWithType.vb: AssetManager.TryGetAssetInfo(String, AssetInfo)
- uid: TAssetBundle.Extensions.AssetManager.TryGetAssetInfo*
  name: TryGetAssetInfo
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_TryGetAssetInfo_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.TryGetAssetInfo
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.TryGetAssetInfo
  nameWithType: AssetManager.TryGetAssetInfo
- uid: TAssetBundle.Extensions.AssetManager.UnloadAsset(System.String,System.Boolean)
  name: UnloadAsset(string, bool)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadAsset_System_String_System_Boolean_
  commentId: M:TAssetBundle.Extensions.AssetManager.UnloadAsset(System.String,System.Boolean)
  name.vb: UnloadAsset(String, Boolean)
  fullName: TAssetBundle.Extensions.AssetManager.UnloadAsset(string, bool)
  fullName.vb: TAssetBundle.Extensions.AssetManager.UnloadAsset(String, Boolean)
  nameWithType: AssetManager.UnloadAsset(string, bool)
  nameWithType.vb: AssetManager.UnloadAsset(String, Boolean)
- uid: TAssetBundle.Extensions.AssetManager.UnloadAsset(TAssetBundle.AssetRef,System.Boolean)
  name: UnloadAsset(AssetRef, bool)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadAsset_TAssetBundle_AssetRef_System_Boolean_
  commentId: M:TAssetBundle.Extensions.AssetManager.UnloadAsset(TAssetBundle.AssetRef,System.Boolean)
  name.vb: UnloadAsset(AssetRef, Boolean)
  fullName: TAssetBundle.Extensions.AssetManager.UnloadAsset(TAssetBundle.AssetRef, bool)
  fullName.vb: TAssetBundle.Extensions.AssetManager.UnloadAsset(TAssetBundle.AssetRef, Boolean)
  nameWithType: AssetManager.UnloadAsset(AssetRef, bool)
  nameWithType.vb: AssetManager.UnloadAsset(AssetRef, Boolean)
- uid: TAssetBundle.Extensions.AssetManager.UnloadAsset*
  name: UnloadAsset
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadAsset_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.UnloadAsset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.UnloadAsset
  nameWithType: AssetManager.UnloadAsset
- uid: TAssetBundle.Extensions.AssetManager.UnloadAssetsAll
  name: UnloadAssetsAll()
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadAssetsAll
  commentId: M:TAssetBundle.Extensions.AssetManager.UnloadAssetsAll
  fullName: TAssetBundle.Extensions.AssetManager.UnloadAssetsAll()
  nameWithType: AssetManager.UnloadAssetsAll()
- uid: TAssetBundle.Extensions.AssetManager.UnloadAssetsAll*
  name: UnloadAssetsAll
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadAssetsAll_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.UnloadAssetsAll
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.UnloadAssetsAll
  nameWithType: AssetManager.UnloadAssetsAll
- uid: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssets
  name: UnloadUnusedAssets()
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadUnusedAssets
  commentId: M:TAssetBundle.Extensions.AssetManager.UnloadUnusedAssets
  fullName: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssets()
  nameWithType: AssetManager.UnloadUnusedAssets()
- uid: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssets*
  name: UnloadUnusedAssets
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadUnusedAssets_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.UnloadUnusedAssets
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssets
  nameWithType: AssetManager.UnloadUnusedAssets
- uid: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse(System.Single)
  name: UnloadUnusedAssetsAfterLastUse(float)
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadUnusedAssetsAfterLastUse_System_Single_
  commentId: M:TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse(System.Single)
  name.vb: UnloadUnusedAssetsAfterLastUse(Single)
  fullName: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse(float)
  fullName.vb: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse(Single)
  nameWithType: AssetManager.UnloadUnusedAssetsAfterLastUse(float)
  nameWithType.vb: AssetManager.UnloadUnusedAssetsAfterLastUse(Single)
- uid: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse*
  name: UnloadUnusedAssetsAfterLastUse
  href: api/TAssetBundle.Extensions.AssetManager.html#TAssetBundle_Extensions_AssetManager_UnloadUnusedAssetsAfterLastUse_
  commentId: Overload:TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetManager.UnloadUnusedAssetsAfterLastUse
  nameWithType: AssetManager.UnloadUnusedAssetsAfterLastUse
- uid: TAssetBundle.Extensions.AssetPrefabPool
  name: AssetPrefabPool
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html
  commentId: T:TAssetBundle.Extensions.AssetPrefabPool
  fullName: TAssetBundle.Extensions.AssetPrefabPool
  nameWithType: AssetPrefabPool
- uid: TAssetBundle.Extensions.AssetPrefabPool.Asset
  name: Asset
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html#TAssetBundle_Extensions_AssetPrefabPool_Asset
  commentId: P:TAssetBundle.Extensions.AssetPrefabPool.Asset
  fullName: TAssetBundle.Extensions.AssetPrefabPool.Asset
  nameWithType: AssetPrefabPool.Asset
- uid: TAssetBundle.Extensions.AssetPrefabPool.Asset*
  name: Asset
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html#TAssetBundle_Extensions_AssetPrefabPool_Asset_
  commentId: Overload:TAssetBundle.Extensions.AssetPrefabPool.Asset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetPrefabPool.Asset
  nameWithType: AssetPrefabPool.Asset
- uid: TAssetBundle.Extensions.AssetPrefabPool.Init(TAssetBundle.Extensions.AssetInfo{UnityEngine.GameObject})
  name: Init(AssetInfo<GameObject>)
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html#TAssetBundle_Extensions_AssetPrefabPool_Init_TAssetBundle_Extensions_AssetInfo_UnityEngine_GameObject__
  commentId: M:TAssetBundle.Extensions.AssetPrefabPool.Init(TAssetBundle.Extensions.AssetInfo{UnityEngine.GameObject})
  name.vb: Init(AssetInfo(Of GameObject))
  fullName: TAssetBundle.Extensions.AssetPrefabPool.Init(TAssetBundle.Extensions.AssetInfo<UnityEngine.GameObject>)
  fullName.vb: TAssetBundle.Extensions.AssetPrefabPool.Init(TAssetBundle.Extensions.AssetInfo(Of UnityEngine.GameObject))
  nameWithType: AssetPrefabPool.Init(AssetInfo<GameObject>)
  nameWithType.vb: AssetPrefabPool.Init(AssetInfo(Of GameObject))
- uid: TAssetBundle.Extensions.AssetPrefabPool.Init*
  name: Init
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html#TAssetBundle_Extensions_AssetPrefabPool_Init_
  commentId: Overload:TAssetBundle.Extensions.AssetPrefabPool.Init
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetPrefabPool.Init
  nameWithType: AssetPrefabPool.Init
- uid: TAssetBundle.Extensions.AssetPrefabPool.IsLoaded
  name: IsLoaded
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html#TAssetBundle_Extensions_AssetPrefabPool_IsLoaded
  commentId: P:TAssetBundle.Extensions.AssetPrefabPool.IsLoaded
  fullName: TAssetBundle.Extensions.AssetPrefabPool.IsLoaded
  nameWithType: AssetPrefabPool.IsLoaded
- uid: TAssetBundle.Extensions.AssetPrefabPool.IsLoaded*
  name: IsLoaded
  href: api/TAssetBundle.Extensions.AssetPrefabPool.html#TAssetBundle_Extensions_AssetPrefabPool_IsLoaded_
  commentId: Overload:TAssetBundle.Extensions.AssetPrefabPool.IsLoaded
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetPrefabPool.IsLoaded
  nameWithType: AssetPrefabPool.IsLoaded
- uid: TAssetBundle.Extensions.AssetPrefabPoolInspector
  name: AssetPrefabPoolInspector
  href: api/TAssetBundle.Extensions.AssetPrefabPoolInspector.html
  commentId: T:TAssetBundle.Extensions.AssetPrefabPoolInspector
  fullName: TAssetBundle.Extensions.AssetPrefabPoolInspector
  nameWithType: AssetPrefabPoolInspector
- uid: TAssetBundle.Extensions.AssetPrefabPoolInspector.OnInspectorGUI
  name: OnInspectorGUI()
  href: api/TAssetBundle.Extensions.AssetPrefabPoolInspector.html#TAssetBundle_Extensions_AssetPrefabPoolInspector_OnInspectorGUI
  commentId: M:TAssetBundle.Extensions.AssetPrefabPoolInspector.OnInspectorGUI
  fullName: TAssetBundle.Extensions.AssetPrefabPoolInspector.OnInspectorGUI()
  nameWithType: AssetPrefabPoolInspector.OnInspectorGUI()
- uid: TAssetBundle.Extensions.AssetPrefabPoolInspector.OnInspectorGUI*
  name: OnInspectorGUI
  href: api/TAssetBundle.Extensions.AssetPrefabPoolInspector.html#TAssetBundle_Extensions_AssetPrefabPoolInspector_OnInspectorGUI_
  commentId: Overload:TAssetBundle.Extensions.AssetPrefabPoolInspector.OnInspectorGUI
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AssetPrefabPoolInspector.OnInspectorGUI
  nameWithType: AssetPrefabPoolInspector.OnInspectorGUI
- uid: TAssetBundle.Extensions.AsyncOperation
  name: AsyncOperation
  href: api/TAssetBundle.Extensions.AsyncOperation.html
  commentId: T:TAssetBundle.Extensions.AsyncOperation
  fullName: TAssetBundle.Extensions.AsyncOperation
  nameWithType: AsyncOperation
- uid: TAssetBundle.Extensions.AsyncOperation.Clear
  name: Clear()
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Clear
  commentId: M:TAssetBundle.Extensions.AsyncOperation.Clear
  fullName: TAssetBundle.Extensions.AsyncOperation.Clear()
  nameWithType: AsyncOperation.Clear()
- uid: TAssetBundle.Extensions.AsyncOperation.Clear*
  name: Clear
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Clear_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.Clear
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.Clear
  nameWithType: AsyncOperation.Clear
- uid: TAssetBundle.Extensions.AsyncOperation.Complete
  name: Complete()
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Complete
  commentId: M:TAssetBundle.Extensions.AsyncOperation.Complete
  fullName: TAssetBundle.Extensions.AsyncOperation.Complete()
  nameWithType: AsyncOperation.Complete()
- uid: TAssetBundle.Extensions.AsyncOperation.Complete*
  name: Complete
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Complete_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.Complete
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.Complete
  nameWithType: AsyncOperation.Complete
- uid: TAssetBundle.Extensions.AsyncOperation.Current
  name: Current
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Current
  commentId: P:TAssetBundle.Extensions.AsyncOperation.Current
  fullName: TAssetBundle.Extensions.AsyncOperation.Current
  nameWithType: AsyncOperation.Current
- uid: TAssetBundle.Extensions.AsyncOperation.Current*
  name: Current
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Current_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.Current
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.Current
  nameWithType: AsyncOperation.Current
- uid: TAssetBundle.Extensions.AsyncOperation.GetProgressFunc
  name: GetProgressFunc
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_GetProgressFunc
  commentId: P:TAssetBundle.Extensions.AsyncOperation.GetProgressFunc
  fullName: TAssetBundle.Extensions.AsyncOperation.GetProgressFunc
  nameWithType: AsyncOperation.GetProgressFunc
- uid: TAssetBundle.Extensions.AsyncOperation.GetProgressFunc*
  name: GetProgressFunc
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_GetProgressFunc_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.GetProgressFunc
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.GetProgressFunc
  nameWithType: AsyncOperation.GetProgressFunc
- uid: TAssetBundle.Extensions.AsyncOperation.IsDone
  name: IsDone
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_IsDone
  commentId: P:TAssetBundle.Extensions.AsyncOperation.IsDone
  fullName: TAssetBundle.Extensions.AsyncOperation.IsDone
  nameWithType: AsyncOperation.IsDone
- uid: TAssetBundle.Extensions.AsyncOperation.IsDone*
  name: IsDone
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_IsDone_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.IsDone
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.IsDone
  nameWithType: AsyncOperation.IsDone
- uid: TAssetBundle.Extensions.AsyncOperation.MoveNext
  name: MoveNext()
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_MoveNext
  commentId: M:TAssetBundle.Extensions.AsyncOperation.MoveNext
  fullName: TAssetBundle.Extensions.AsyncOperation.MoveNext()
  nameWithType: AsyncOperation.MoveNext()
- uid: TAssetBundle.Extensions.AsyncOperation.MoveNext*
  name: MoveNext
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_MoveNext_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.MoveNext
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.MoveNext
  nameWithType: AsyncOperation.MoveNext
- uid: TAssetBundle.Extensions.AsyncOperation.OnCompleted
  name: OnCompleted
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_OnCompleted
  commentId: E:TAssetBundle.Extensions.AsyncOperation.OnCompleted
  fullName: TAssetBundle.Extensions.AsyncOperation.OnCompleted
  nameWithType: AsyncOperation.OnCompleted
- uid: TAssetBundle.Extensions.AsyncOperation.Pool
  name: Pool
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Pool
  commentId: P:TAssetBundle.Extensions.AsyncOperation.Pool
  fullName: TAssetBundle.Extensions.AsyncOperation.Pool
  nameWithType: AsyncOperation.Pool
- uid: TAssetBundle.Extensions.AsyncOperation.Pool*
  name: Pool
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Pool_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.Pool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.Pool
  nameWithType: AsyncOperation.Pool
- uid: TAssetBundle.Extensions.AsyncOperation.Progress
  name: Progress
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Progress
  commentId: P:TAssetBundle.Extensions.AsyncOperation.Progress
  fullName: TAssetBundle.Extensions.AsyncOperation.Progress
  nameWithType: AsyncOperation.Progress
- uid: TAssetBundle.Extensions.AsyncOperation.Progress*
  name: Progress
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Progress_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.Progress
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.Progress
  nameWithType: AsyncOperation.Progress
- uid: TAssetBundle.Extensions.AsyncOperation.Reset
  name: Reset()
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Reset
  commentId: M:TAssetBundle.Extensions.AsyncOperation.Reset
  fullName: TAssetBundle.Extensions.AsyncOperation.Reset()
  nameWithType: AsyncOperation.Reset()
- uid: TAssetBundle.Extensions.AsyncOperation.Reset*
  name: Reset
  href: api/TAssetBundle.Extensions.AsyncOperation.html#TAssetBundle_Extensions_AsyncOperation_Reset_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation.Reset
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation.Reset
  nameWithType: AsyncOperation.Reset
- uid: TAssetBundle.Extensions.AsyncOperationExtensions
  name: AsyncOperationExtensions
  href: api/TAssetBundle.Extensions.AsyncOperationExtensions.html
  commentId: T:TAssetBundle.Extensions.AsyncOperationExtensions
  fullName: TAssetBundle.Extensions.AsyncOperationExtensions
  nameWithType: AsyncOperationExtensions
- uid: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask(TAssetBundle.Extensions.AsyncOperation)
  name: ToTask(AsyncOperation)
  href: api/TAssetBundle.Extensions.AsyncOperationExtensions.html#TAssetBundle_Extensions_AsyncOperationExtensions_ToTask_TAssetBundle_Extensions_AsyncOperation_
  commentId: M:TAssetBundle.Extensions.AsyncOperationExtensions.ToTask(TAssetBundle.Extensions.AsyncOperation)
  fullName: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask(TAssetBundle.Extensions.AsyncOperation)
  nameWithType: AsyncOperationExtensions.ToTask(AsyncOperation)
- uid: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask*
  name: ToTask
  href: api/TAssetBundle.Extensions.AsyncOperationExtensions.html#TAssetBundle_Extensions_AsyncOperationExtensions_ToTask_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperationExtensions.ToTask
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask
  nameWithType: AsyncOperationExtensions.ToTask
- uid: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask``1(TAssetBundle.Extensions.AsyncOperation{``0})
  name: ToTask<T>(AsyncOperation<T>)
  href: api/TAssetBundle.Extensions.AsyncOperationExtensions.html#TAssetBundle_Extensions_AsyncOperationExtensions_ToTask__1_TAssetBundle_Extensions_AsyncOperation___0__
  commentId: M:TAssetBundle.Extensions.AsyncOperationExtensions.ToTask``1(TAssetBundle.Extensions.AsyncOperation{``0})
  name.vb: ToTask(Of T)(AsyncOperation(Of T))
  fullName: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask<T>(TAssetBundle.Extensions.AsyncOperation<T>)
  fullName.vb: TAssetBundle.Extensions.AsyncOperationExtensions.ToTask(Of T)(TAssetBundle.Extensions.AsyncOperation(Of T))
  nameWithType: AsyncOperationExtensions.ToTask<T>(AsyncOperation<T>)
  nameWithType.vb: AsyncOperationExtensions.ToTask(Of T)(AsyncOperation(Of T))
- uid: TAssetBundle.Extensions.AsyncOperation`1
  name: AsyncOperation<T>
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html
  commentId: T:TAssetBundle.Extensions.AsyncOperation`1
  name.vb: AsyncOperation(Of T)
  fullName: TAssetBundle.Extensions.AsyncOperation<T>
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T)
  nameWithType: AsyncOperation<T>
  nameWithType.vb: AsyncOperation(Of T)
- uid: TAssetBundle.Extensions.AsyncOperation`1.Clear
  name: Clear()
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_Clear
  commentId: M:TAssetBundle.Extensions.AsyncOperation`1.Clear
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.Clear()
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).Clear()
  nameWithType: AsyncOperation<T>.Clear()
  nameWithType.vb: AsyncOperation(Of T).Clear()
- uid: TAssetBundle.Extensions.AsyncOperation`1.Clear*
  name: Clear
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_Clear_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation`1.Clear
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.Clear
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).Clear
  nameWithType: AsyncOperation<T>.Clear
  nameWithType.vb: AsyncOperation(Of T).Clear
- uid: TAssetBundle.Extensions.AsyncOperation`1.Complete(`0)
  name: Complete(T)
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_Complete__0_
  commentId: M:TAssetBundle.Extensions.AsyncOperation`1.Complete(`0)
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.Complete(T)
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).Complete(T)
  nameWithType: AsyncOperation<T>.Complete(T)
  nameWithType.vb: AsyncOperation(Of T).Complete(T)
- uid: TAssetBundle.Extensions.AsyncOperation`1.Complete*
  name: Complete
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_Complete_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation`1.Complete
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.Complete
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).Complete
  nameWithType: AsyncOperation<T>.Complete
  nameWithType.vb: AsyncOperation(Of T).Complete
- uid: TAssetBundle.Extensions.AsyncOperation`1.OnCompleted
  name: OnCompleted
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_OnCompleted
  commentId: E:TAssetBundle.Extensions.AsyncOperation`1.OnCompleted
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.OnCompleted
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).OnCompleted
  nameWithType: AsyncOperation<T>.OnCompleted
  nameWithType.vb: AsyncOperation(Of T).OnCompleted
- uid: TAssetBundle.Extensions.AsyncOperation`1.Result
  name: Result
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_Result
  commentId: P:TAssetBundle.Extensions.AsyncOperation`1.Result
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.Result
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).Result
  nameWithType: AsyncOperation<T>.Result
  nameWithType.vb: AsyncOperation(Of T).Result
- uid: TAssetBundle.Extensions.AsyncOperation`1.Result*
  name: Result
  href: api/TAssetBundle.Extensions.AsyncOperation-1.html#TAssetBundle_Extensions_AsyncOperation_1_Result_
  commentId: Overload:TAssetBundle.Extensions.AsyncOperation`1.Result
  isSpec: "True"
  fullName: TAssetBundle.Extensions.AsyncOperation<T>.Result
  fullName.vb: TAssetBundle.Extensions.AsyncOperation(Of T).Result
  nameWithType: AsyncOperation<T>.Result
  nameWithType.vb: AsyncOperation(Of T).Result
- uid: TAssetBundle.Extensions.GetProgressDelegate
  name: GetProgressDelegate
  href: api/TAssetBundle.Extensions.GetProgressDelegate.html
  commentId: T:TAssetBundle.Extensions.GetProgressDelegate
  fullName: TAssetBundle.Extensions.GetProgressDelegate
  nameWithType: GetProgressDelegate
- uid: TAssetBundle.Extensions.IGetProgressable
  name: IGetProgressable
  href: api/TAssetBundle.Extensions.IGetProgressable.html
  commentId: T:TAssetBundle.Extensions.IGetProgressable
  fullName: TAssetBundle.Extensions.IGetProgressable
  nameWithType: IGetProgressable
- uid: TAssetBundle.Extensions.IGetProgressable.GetProgressFunc
  name: GetProgressFunc
  href: api/TAssetBundle.Extensions.IGetProgressable.html#TAssetBundle_Extensions_IGetProgressable_GetProgressFunc
  commentId: P:TAssetBundle.Extensions.IGetProgressable.GetProgressFunc
  fullName: TAssetBundle.Extensions.IGetProgressable.GetProgressFunc
  nameWithType: IGetProgressable.GetProgressFunc
- uid: TAssetBundle.Extensions.IGetProgressable.GetProgressFunc*
  name: GetProgressFunc
  href: api/TAssetBundle.Extensions.IGetProgressable.html#TAssetBundle_Extensions_IGetProgressable_GetProgressFunc_
  commentId: Overload:TAssetBundle.Extensions.IGetProgressable.GetProgressFunc
  isSpec: "True"
  fullName: TAssetBundle.Extensions.IGetProgressable.GetProgressFunc
  nameWithType: IGetProgressable.GetProgressFunc
- uid: TAssetBundle.Extensions.PrefabPool
  name: PrefabPool
  href: api/TAssetBundle.Extensions.PrefabPool.html
  commentId: T:TAssetBundle.Extensions.PrefabPool
  fullName: TAssetBundle.Extensions.PrefabPool
  nameWithType: PrefabPool
- uid: TAssetBundle.Extensions.PrefabPool.Clear
  name: Clear()
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Clear
  commentId: M:TAssetBundle.Extensions.PrefabPool.Clear
  fullName: TAssetBundle.Extensions.PrefabPool.Clear()
  nameWithType: PrefabPool.Clear()
- uid: TAssetBundle.Extensions.PrefabPool.Clear*
  name: Clear
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Clear_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Clear
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Clear
  nameWithType: PrefabPool.Clear
- uid: TAssetBundle.Extensions.PrefabPool.Count
  name: Count
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Count
  commentId: P:TAssetBundle.Extensions.PrefabPool.Count
  fullName: TAssetBundle.Extensions.PrefabPool.Count
  nameWithType: PrefabPool.Count
- uid: TAssetBundle.Extensions.PrefabPool.Count*
  name: Count
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Count_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Count
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Count
  nameWithType: PrefabPool.Count
- uid: TAssetBundle.Extensions.PrefabPool.Create(UnityEngine.Transform,System.Boolean)
  name: Create(Transform, bool)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Create_UnityEngine_Transform_System_Boolean_
  commentId: M:TAssetBundle.Extensions.PrefabPool.Create(UnityEngine.Transform,System.Boolean)
  name.vb: Create(Transform, Boolean)
  fullName: TAssetBundle.Extensions.PrefabPool.Create(UnityEngine.Transform, bool)
  fullName.vb: TAssetBundle.Extensions.PrefabPool.Create(UnityEngine.Transform, Boolean)
  nameWithType: PrefabPool.Create(Transform, bool)
  nameWithType.vb: PrefabPool.Create(Transform, Boolean)
- uid: TAssetBundle.Extensions.PrefabPool.Create*
  name: Create
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Create_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Create
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Create
  nameWithType: PrefabPool.Create
- uid: TAssetBundle.Extensions.PrefabPool.Free(UnityEngine.GameObject)
  name: Free(GameObject)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Free_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.PrefabPool.Free(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.PrefabPool.Free(UnityEngine.GameObject)
  nameWithType: PrefabPool.Free(GameObject)
- uid: TAssetBundle.Extensions.PrefabPool.Free*
  name: Free
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Free_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Free
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Free
  nameWithType: PrefabPool.Free
- uid: TAssetBundle.Extensions.PrefabPool.GetOrCreate(UnityEngine.Transform,System.Boolean)
  name: GetOrCreate(Transform, bool)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_GetOrCreate_UnityEngine_Transform_System_Boolean_
  commentId: M:TAssetBundle.Extensions.PrefabPool.GetOrCreate(UnityEngine.Transform,System.Boolean)
  name.vb: GetOrCreate(Transform, Boolean)
  fullName: TAssetBundle.Extensions.PrefabPool.GetOrCreate(UnityEngine.Transform, bool)
  fullName.vb: TAssetBundle.Extensions.PrefabPool.GetOrCreate(UnityEngine.Transform, Boolean)
  nameWithType: PrefabPool.GetOrCreate(Transform, bool)
  nameWithType.vb: PrefabPool.GetOrCreate(Transform, Boolean)
- uid: TAssetBundle.Extensions.PrefabPool.GetOrCreate*
  name: GetOrCreate
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_GetOrCreate_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.GetOrCreate
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.GetOrCreate
  nameWithType: PrefabPool.GetOrCreate
- uid: TAssetBundle.Extensions.PrefabPool.GetOrCreate``1(UnityEngine.Transform,System.Boolean)
  name: GetOrCreate<T>(Transform, bool)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_GetOrCreate__1_UnityEngine_Transform_System_Boolean_
  commentId: M:TAssetBundle.Extensions.PrefabPool.GetOrCreate``1(UnityEngine.Transform,System.Boolean)
  name.vb: GetOrCreate(Of T)(Transform, Boolean)
  fullName: TAssetBundle.Extensions.PrefabPool.GetOrCreate<T>(UnityEngine.Transform, bool)
  fullName.vb: TAssetBundle.Extensions.PrefabPool.GetOrCreate(Of T)(UnityEngine.Transform, Boolean)
  nameWithType: PrefabPool.GetOrCreate<T>(Transform, bool)
  nameWithType.vb: PrefabPool.GetOrCreate(Of T)(Transform, Boolean)
- uid: TAssetBundle.Extensions.PrefabPool.Init(UnityEngine.GameObject)
  name: Init(GameObject)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Init_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.PrefabPool.Init(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.PrefabPool.Init(UnityEngine.GameObject)
  nameWithType: PrefabPool.Init(GameObject)
- uid: TAssetBundle.Extensions.PrefabPool.Init*
  name: Init
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Init_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Init
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Init
  nameWithType: PrefabPool.Init
- uid: TAssetBundle.Extensions.PrefabPool.IsEmpty
  name: IsEmpty()
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_IsEmpty
  commentId: M:TAssetBundle.Extensions.PrefabPool.IsEmpty
  fullName: TAssetBundle.Extensions.PrefabPool.IsEmpty()
  nameWithType: PrefabPool.IsEmpty()
- uid: TAssetBundle.Extensions.PrefabPool.IsEmpty*
  name: IsEmpty
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_IsEmpty_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.IsEmpty
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.IsEmpty
  nameWithType: PrefabPool.IsEmpty
- uid: TAssetBundle.Extensions.PrefabPool.OnCreated
  name: OnCreated
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_OnCreated
  commentId: E:TAssetBundle.Extensions.PrefabPool.OnCreated
  fullName: TAssetBundle.Extensions.PrefabPool.OnCreated
  nameWithType: PrefabPool.OnCreated
- uid: TAssetBundle.Extensions.PrefabPool.OnFree
  name: OnFree
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_OnFree
  commentId: E:TAssetBundle.Extensions.PrefabPool.OnFree
  fullName: TAssetBundle.Extensions.PrefabPool.OnFree
  nameWithType: PrefabPool.OnFree
- uid: TAssetBundle.Extensions.PrefabPool.OnUsed
  name: OnUsed
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_OnUsed
  commentId: E:TAssetBundle.Extensions.PrefabPool.OnUsed
  fullName: TAssetBundle.Extensions.PrefabPool.OnUsed
  nameWithType: PrefabPool.OnUsed
- uid: TAssetBundle.Extensions.PrefabPool.Pool
  name: Pool
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Pool
  commentId: P:TAssetBundle.Extensions.PrefabPool.Pool
  fullName: TAssetBundle.Extensions.PrefabPool.Pool
  nameWithType: PrefabPool.Pool
- uid: TAssetBundle.Extensions.PrefabPool.Pool*
  name: Pool
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Pool_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Pool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Pool
  nameWithType: PrefabPool.Pool
- uid: TAssetBundle.Extensions.PrefabPool.Prefab
  name: Prefab
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Prefab
  commentId: P:TAssetBundle.Extensions.PrefabPool.Prefab
  fullName: TAssetBundle.Extensions.PrefabPool.Prefab
  nameWithType: PrefabPool.Prefab
- uid: TAssetBundle.Extensions.PrefabPool.Prefab*
  name: Prefab
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Prefab_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Prefab
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Prefab
  nameWithType: PrefabPool.Prefab
- uid: TAssetBundle.Extensions.PrefabPool.Reserve(System.Int32)
  name: Reserve(int)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Reserve_System_Int32_
  commentId: M:TAssetBundle.Extensions.PrefabPool.Reserve(System.Int32)
  name.vb: Reserve(Integer)
  fullName: TAssetBundle.Extensions.PrefabPool.Reserve(int)
  fullName.vb: TAssetBundle.Extensions.PrefabPool.Reserve(Integer)
  nameWithType: PrefabPool.Reserve(int)
  nameWithType.vb: PrefabPool.Reserve(Integer)
- uid: TAssetBundle.Extensions.PrefabPool.Reserve*
  name: Reserve
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Reserve_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Reserve
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Reserve
  nameWithType: PrefabPool.Reserve
- uid: TAssetBundle.Extensions.PrefabPool.Use(UnityEngine.Transform,System.Boolean)
  name: Use(Transform, bool)
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Use_UnityEngine_Transform_System_Boolean_
  commentId: M:TAssetBundle.Extensions.PrefabPool.Use(UnityEngine.Transform,System.Boolean)
  name.vb: Use(Transform, Boolean)
  fullName: TAssetBundle.Extensions.PrefabPool.Use(UnityEngine.Transform, bool)
  fullName.vb: TAssetBundle.Extensions.PrefabPool.Use(UnityEngine.Transform, Boolean)
  nameWithType: PrefabPool.Use(Transform, bool)
  nameWithType.vb: PrefabPool.Use(Transform, Boolean)
- uid: TAssetBundle.Extensions.PrefabPool.Use*
  name: Use
  href: api/TAssetBundle.Extensions.PrefabPool.html#TAssetBundle_Extensions_PrefabPool_Use_
  commentId: Overload:TAssetBundle.Extensions.PrefabPool.Use
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPool.Use
  nameWithType: PrefabPool.Use
- uid: TAssetBundle.Extensions.PrefabPoolDelegate
  name: PrefabPoolDelegate
  href: api/TAssetBundle.Extensions.PrefabPoolDelegate.html
  commentId: T:TAssetBundle.Extensions.PrefabPoolDelegate
  fullName: TAssetBundle.Extensions.PrefabPoolDelegate
  nameWithType: PrefabPoolDelegate
- uid: TAssetBundle.Extensions.PrefabPoolInspector
  name: PrefabPoolInspector
  href: api/TAssetBundle.Extensions.PrefabPoolInspector.html
  commentId: T:TAssetBundle.Extensions.PrefabPoolInspector
  fullName: TAssetBundle.Extensions.PrefabPoolInspector
  nameWithType: PrefabPoolInspector
- uid: TAssetBundle.Extensions.PrefabPoolInspector.OnInspectorGUI
  name: OnInspectorGUI()
  href: api/TAssetBundle.Extensions.PrefabPoolInspector.html#TAssetBundle_Extensions_PrefabPoolInspector_OnInspectorGUI
  commentId: M:TAssetBundle.Extensions.PrefabPoolInspector.OnInspectorGUI
  fullName: TAssetBundle.Extensions.PrefabPoolInspector.OnInspectorGUI()
  nameWithType: PrefabPoolInspector.OnInspectorGUI()
- uid: TAssetBundle.Extensions.PrefabPoolInspector.OnInspectorGUI*
  name: OnInspectorGUI
  href: api/TAssetBundle.Extensions.PrefabPoolInspector.html#TAssetBundle_Extensions_PrefabPoolInspector_OnInspectorGUI_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolInspector.OnInspectorGUI
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolInspector.OnInspectorGUI
  nameWithType: PrefabPoolInspector.OnInspectorGUI
- uid: TAssetBundle.Extensions.PrefabPoolManager
  name: PrefabPoolManager
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html
  commentId: T:TAssetBundle.Extensions.PrefabPoolManager
  fullName: TAssetBundle.Extensions.PrefabPoolManager
  nameWithType: PrefabPoolManager
- uid: TAssetBundle.Extensions.PrefabPoolManager.Clear
  name: Clear()
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Clear
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Clear
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Clear()
  nameWithType: PrefabPoolManager.Clear()
- uid: TAssetBundle.Extensions.PrefabPoolManager.Clear(UnityEngine.GameObject)
  name: Clear(GameObject)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Clear_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Clear(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Clear(UnityEngine.GameObject)
  nameWithType: PrefabPoolManager.Clear(GameObject)
- uid: TAssetBundle.Extensions.PrefabPoolManager.Clear*
  name: Clear
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Clear_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.Clear
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Clear
  nameWithType: PrefabPoolManager.Clear
- uid: TAssetBundle.Extensions.PrefabPoolManager.Clear``1(``0)
  name: Clear<T>(T)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Clear__1___0_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Clear``1(``0)
  name.vb: Clear(Of T)(T)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Clear<T>(T)
  fullName.vb: TAssetBundle.Extensions.PrefabPoolManager.Clear(Of T)(T)
  nameWithType: PrefabPoolManager.Clear<T>(T)
  nameWithType.vb: PrefabPoolManager.Clear(Of T)(T)
- uid: TAssetBundle.Extensions.PrefabPoolManager.Get(UnityEngine.GameObject,UnityEngine.Transform,System.Boolean)
  name: Get(GameObject, Transform, bool)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Get_UnityEngine_GameObject_UnityEngine_Transform_System_Boolean_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Get(UnityEngine.GameObject,UnityEngine.Transform,System.Boolean)
  name.vb: Get(GameObject, Transform, Boolean)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Get(UnityEngine.GameObject, UnityEngine.Transform, bool)
  fullName.vb: TAssetBundle.Extensions.PrefabPoolManager.Get(UnityEngine.GameObject, UnityEngine.Transform, Boolean)
  nameWithType: PrefabPoolManager.Get(GameObject, Transform, bool)
  nameWithType.vb: PrefabPoolManager.Get(GameObject, Transform, Boolean)
- uid: TAssetBundle.Extensions.PrefabPoolManager.Get*
  name: Get
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Get_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.Get
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Get
  nameWithType: PrefabPoolManager.Get
- uid: TAssetBundle.Extensions.PrefabPoolManager.GetPool(UnityEngine.GameObject)
  name: GetPool(GameObject)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_GetPool_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.GetPool(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.GetPool(UnityEngine.GameObject)
  nameWithType: PrefabPoolManager.GetPool(GameObject)
- uid: TAssetBundle.Extensions.PrefabPoolManager.GetPool*
  name: GetPool
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_GetPool_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.GetPool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.GetPool
  nameWithType: PrefabPoolManager.GetPool
- uid: TAssetBundle.Extensions.PrefabPoolManager.GetPoolObjectCount(UnityEngine.GameObject)
  name: GetPoolObjectCount(GameObject)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_GetPoolObjectCount_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.GetPoolObjectCount(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.GetPoolObjectCount(UnityEngine.GameObject)
  nameWithType: PrefabPoolManager.GetPoolObjectCount(GameObject)
- uid: TAssetBundle.Extensions.PrefabPoolManager.GetPoolObjectCount*
  name: GetPoolObjectCount
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_GetPoolObjectCount_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.GetPoolObjectCount
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.GetPoolObjectCount
  nameWithType: PrefabPoolManager.GetPoolObjectCount
- uid: TAssetBundle.Extensions.PrefabPoolManager.Get``1(``0,UnityEngine.Transform,System.Boolean)
  name: Get<T>(T, Transform, bool)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Get__1___0_UnityEngine_Transform_System_Boolean_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Get``1(``0,UnityEngine.Transform,System.Boolean)
  name.vb: Get(Of T)(T, Transform, Boolean)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Get<T>(T, UnityEngine.Transform, bool)
  fullName.vb: TAssetBundle.Extensions.PrefabPoolManager.Get(Of T)(T, UnityEngine.Transform, Boolean)
  nameWithType: PrefabPoolManager.Get<T>(T, Transform, bool)
  nameWithType.vb: PrefabPoolManager.Get(Of T)(T, Transform, Boolean)
- uid: TAssetBundle.Extensions.PrefabPoolManager.PrefabPoolRoot
  name: PrefabPoolRoot
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_PrefabPoolRoot
  commentId: P:TAssetBundle.Extensions.PrefabPoolManager.PrefabPoolRoot
  fullName: TAssetBundle.Extensions.PrefabPoolManager.PrefabPoolRoot
  nameWithType: PrefabPoolManager.PrefabPoolRoot
- uid: TAssetBundle.Extensions.PrefabPoolManager.PrefabPoolRoot*
  name: PrefabPoolRoot
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_PrefabPoolRoot_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.PrefabPoolRoot
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.PrefabPoolRoot
  nameWithType: PrefabPoolManager.PrefabPoolRoot
- uid: TAssetBundle.Extensions.PrefabPoolManager.PrefabPools
  name: PrefabPools
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_PrefabPools
  commentId: P:TAssetBundle.Extensions.PrefabPoolManager.PrefabPools
  fullName: TAssetBundle.Extensions.PrefabPoolManager.PrefabPools
  nameWithType: PrefabPoolManager.PrefabPools
- uid: TAssetBundle.Extensions.PrefabPoolManager.PrefabPools*
  name: PrefabPools
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_PrefabPools_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.PrefabPools
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.PrefabPools
  nameWithType: PrefabPoolManager.PrefabPools
- uid: TAssetBundle.Extensions.PrefabPoolManager.Reserve(UnityEngine.GameObject,System.Int32)
  name: Reserve(GameObject, int)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Reserve_UnityEngine_GameObject_System_Int32_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Reserve(UnityEngine.GameObject,System.Int32)
  name.vb: Reserve(GameObject, Integer)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Reserve(UnityEngine.GameObject, int)
  fullName.vb: TAssetBundle.Extensions.PrefabPoolManager.Reserve(UnityEngine.GameObject, Integer)
  nameWithType: PrefabPoolManager.Reserve(GameObject, int)
  nameWithType.vb: PrefabPoolManager.Reserve(GameObject, Integer)
- uid: TAssetBundle.Extensions.PrefabPoolManager.Reserve*
  name: Reserve
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Reserve_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.Reserve
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Reserve
  nameWithType: PrefabPoolManager.Reserve
- uid: TAssetBundle.Extensions.PrefabPoolManager.Reserve``1(``0,System.Int32)
  name: Reserve<T>(T, int)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_Reserve__1___0_System_Int32_
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.Reserve``1(``0,System.Int32)
  name.vb: Reserve(Of T)(T, Integer)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.Reserve<T>(T, int)
  fullName.vb: TAssetBundle.Extensions.PrefabPoolManager.Reserve(Of T)(T, Integer)
  nameWithType: PrefabPoolManager.Reserve<T>(T, int)
  nameWithType.vb: PrefabPoolManager.Reserve(Of T)(T, Integer)
- uid: TAssetBundle.Extensions.PrefabPoolManager.TryGetPool(UnityEngine.GameObject,TAssetBundle.Extensions.PrefabPool@)
  name: TryGetPool(GameObject, out PrefabPool)
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_TryGetPool_UnityEngine_GameObject_TAssetBundle_Extensions_PrefabPool__
  commentId: M:TAssetBundle.Extensions.PrefabPoolManager.TryGetPool(UnityEngine.GameObject,TAssetBundle.Extensions.PrefabPool@)
  name.vb: TryGetPool(GameObject, PrefabPool)
  fullName: TAssetBundle.Extensions.PrefabPoolManager.TryGetPool(UnityEngine.GameObject, out TAssetBundle.Extensions.PrefabPool)
  fullName.vb: TAssetBundle.Extensions.PrefabPoolManager.TryGetPool(UnityEngine.GameObject, TAssetBundle.Extensions.PrefabPool)
  nameWithType: PrefabPoolManager.TryGetPool(GameObject, out PrefabPool)
  nameWithType.vb: PrefabPoolManager.TryGetPool(GameObject, PrefabPool)
- uid: TAssetBundle.Extensions.PrefabPoolManager.TryGetPool*
  name: TryGetPool
  href: api/TAssetBundle.Extensions.PrefabPoolManager.html#TAssetBundle_Extensions_PrefabPoolManager_TryGetPool_
  commentId: Overload:TAssetBundle.Extensions.PrefabPoolManager.TryGetPool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPoolManager.TryGetPool
  nameWithType: PrefabPoolManager.TryGetPool
- uid: TAssetBundle.Extensions.PrefabPooledObject
  name: PrefabPooledObject
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html
  commentId: T:TAssetBundle.Extensions.PrefabPooledObject
  fullName: TAssetBundle.Extensions.PrefabPooledObject
  nameWithType: PrefabPooledObject
- uid: TAssetBundle.Extensions.PrefabPooledObject.Free
  name: Free()
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html#TAssetBundle_Extensions_PrefabPooledObject_Free
  commentId: M:TAssetBundle.Extensions.PrefabPooledObject.Free
  fullName: TAssetBundle.Extensions.PrefabPooledObject.Free()
  nameWithType: PrefabPooledObject.Free()
- uid: TAssetBundle.Extensions.PrefabPooledObject.Free*
  name: Free
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html#TAssetBundle_Extensions_PrefabPooledObject_Free_
  commentId: Overload:TAssetBundle.Extensions.PrefabPooledObject.Free
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPooledObject.Free
  nameWithType: PrefabPooledObject.Free
- uid: TAssetBundle.Extensions.PrefabPooledObject.Pool
  name: Pool
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html#TAssetBundle_Extensions_PrefabPooledObject_Pool
  commentId: P:TAssetBundle.Extensions.PrefabPooledObject.Pool
  fullName: TAssetBundle.Extensions.PrefabPooledObject.Pool
  nameWithType: PrefabPooledObject.Pool
- uid: TAssetBundle.Extensions.PrefabPooledObject.Pool*
  name: Pool
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html#TAssetBundle_Extensions_PrefabPooledObject_Pool_
  commentId: Overload:TAssetBundle.Extensions.PrefabPooledObject.Pool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPooledObject.Pool
  nameWithType: PrefabPooledObject.Pool
- uid: TAssetBundle.Extensions.PrefabPooledObject.SetPool(TAssetBundle.Extensions.PrefabPool)
  name: SetPool(PrefabPool)
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html#TAssetBundle_Extensions_PrefabPooledObject_SetPool_TAssetBundle_Extensions_PrefabPool_
  commentId: M:TAssetBundle.Extensions.PrefabPooledObject.SetPool(TAssetBundle.Extensions.PrefabPool)
  fullName: TAssetBundle.Extensions.PrefabPooledObject.SetPool(TAssetBundle.Extensions.PrefabPool)
  nameWithType: PrefabPooledObject.SetPool(PrefabPool)
- uid: TAssetBundle.Extensions.PrefabPooledObject.SetPool*
  name: SetPool
  href: api/TAssetBundle.Extensions.PrefabPooledObject.html#TAssetBundle_Extensions_PrefabPooledObject_SetPool_
  commentId: Overload:TAssetBundle.Extensions.PrefabPooledObject.SetPool
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPooledObject.SetPool
  nameWithType: PrefabPooledObject.SetPool
- uid: TAssetBundle.Extensions.PrefabPooledObjectExtensions
  name: PrefabPooledObjectExtensions
  href: api/TAssetBundle.Extensions.PrefabPooledObjectExtensions.html
  commentId: T:TAssetBundle.Extensions.PrefabPooledObjectExtensions
  fullName: TAssetBundle.Extensions.PrefabPooledObjectExtensions
  nameWithType: PrefabPooledObjectExtensions
- uid: TAssetBundle.Extensions.PrefabPooledObjectExtensions.FreePrefab(UnityEngine.GameObject)
  name: FreePrefab(GameObject)
  href: api/TAssetBundle.Extensions.PrefabPooledObjectExtensions.html#TAssetBundle_Extensions_PrefabPooledObjectExtensions_FreePrefab_UnityEngine_GameObject_
  commentId: M:TAssetBundle.Extensions.PrefabPooledObjectExtensions.FreePrefab(UnityEngine.GameObject)
  fullName: TAssetBundle.Extensions.PrefabPooledObjectExtensions.FreePrefab(UnityEngine.GameObject)
  nameWithType: PrefabPooledObjectExtensions.FreePrefab(GameObject)
- uid: TAssetBundle.Extensions.PrefabPooledObjectExtensions.FreePrefab*
  name: FreePrefab
  href: api/TAssetBundle.Extensions.PrefabPooledObjectExtensions.html#TAssetBundle_Extensions_PrefabPooledObjectExtensions_FreePrefab_
  commentId: Overload:TAssetBundle.Extensions.PrefabPooledObjectExtensions.FreePrefab
  isSpec: "True"
  fullName: TAssetBundle.Extensions.PrefabPooledObjectExtensions.FreePrefab
  nameWithType: PrefabPooledObjectExtensions.FreePrefab
- uid: TAssetBundle.FolderAssetRef
  name: FolderAssetRef
  href: api/TAssetBundle.FolderAssetRef.html
  commentId: T:TAssetBundle.FolderAssetRef
  fullName: TAssetBundle.FolderAssetRef
  nameWithType: FolderAssetRef
- uid: TAssetBundle.FolderAssetRef.GetPath(System.String)
  name: GetPath(string)
  href: api/TAssetBundle.FolderAssetRef.html#TAssetBundle_FolderAssetRef_GetPath_System_String_
  commentId: M:TAssetBundle.FolderAssetRef.GetPath(System.String)
  name.vb: GetPath(String)
  fullName: TAssetBundle.FolderAssetRef.GetPath(string)
  fullName.vb: TAssetBundle.FolderAssetRef.GetPath(String)
  nameWithType: FolderAssetRef.GetPath(string)
  nameWithType.vb: FolderAssetRef.GetPath(String)
- uid: TAssetBundle.FolderAssetRef.GetPath*
  name: GetPath
  href: api/TAssetBundle.FolderAssetRef.html#TAssetBundle_FolderAssetRef_GetPath_
  commentId: Overload:TAssetBundle.FolderAssetRef.GetPath
  isSpec: "True"
  fullName: TAssetBundle.FolderAssetRef.GetPath
  nameWithType: FolderAssetRef.GetPath
- uid: TAssetBundle.FolderAssetTypeAttribute
  name: FolderAssetTypeAttribute
  href: api/TAssetBundle.FolderAssetTypeAttribute.html
  commentId: T:TAssetBundle.FolderAssetTypeAttribute
  fullName: TAssetBundle.FolderAssetTypeAttribute
  nameWithType: FolderAssetTypeAttribute
- uid: TAssetBundle.FolderAssetTypeAttribute.#ctor
  name: FolderAssetTypeAttribute()
  href: api/TAssetBundle.FolderAssetTypeAttribute.html#TAssetBundle_FolderAssetTypeAttribute__ctor
  commentId: M:TAssetBundle.FolderAssetTypeAttribute.#ctor
  name.vb: New()
  fullName: TAssetBundle.FolderAssetTypeAttribute.FolderAssetTypeAttribute()
  fullName.vb: TAssetBundle.FolderAssetTypeAttribute.New()
  nameWithType: FolderAssetTypeAttribute.FolderAssetTypeAttribute()
  nameWithType.vb: FolderAssetTypeAttribute.New()
- uid: TAssetBundle.FolderAssetTypeAttribute.#ctor*
  name: FolderAssetTypeAttribute
  href: api/TAssetBundle.FolderAssetTypeAttribute.html#TAssetBundle_FolderAssetTypeAttribute__ctor_
  commentId: Overload:TAssetBundle.FolderAssetTypeAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TAssetBundle.FolderAssetTypeAttribute.FolderAssetTypeAttribute
  fullName.vb: TAssetBundle.FolderAssetTypeAttribute.New
  nameWithType: FolderAssetTypeAttribute.FolderAssetTypeAttribute
  nameWithType.vb: FolderAssetTypeAttribute.New
- uid: TAssetBundle.GameObjectAssetRef
  name: GameObjectAssetRef
  href: api/TAssetBundle.GameObjectAssetRef.html
  commentId: T:TAssetBundle.GameObjectAssetRef
  fullName: TAssetBundle.GameObjectAssetRef
  nameWithType: GameObjectAssetRef
- uid: TAssetBundle.IActiveAssetBundleInfo
  name: IActiveAssetBundleInfo
  href: api/TAssetBundle.IActiveAssetBundleInfo.html
  commentId: T:TAssetBundle.IActiveAssetBundleInfo
  fullName: TAssetBundle.IActiveAssetBundleInfo
  nameWithType: IActiveAssetBundleInfo
- uid: TAssetBundle.IActiveAssetBundleInfo.AssetBundleInfo
  name: AssetBundleInfo
  href: api/TAssetBundle.IActiveAssetBundleInfo.html#TAssetBundle_IActiveAssetBundleInfo_AssetBundleInfo
  commentId: P:TAssetBundle.IActiveAssetBundleInfo.AssetBundleInfo
  fullName: TAssetBundle.IActiveAssetBundleInfo.AssetBundleInfo
  nameWithType: IActiveAssetBundleInfo.AssetBundleInfo
- uid: TAssetBundle.IActiveAssetBundleInfo.AssetBundleInfo*
  name: AssetBundleInfo
  href: api/TAssetBundle.IActiveAssetBundleInfo.html#TAssetBundle_IActiveAssetBundleInfo_AssetBundleInfo_
  commentId: Overload:TAssetBundle.IActiveAssetBundleInfo.AssetBundleInfo
  isSpec: "True"
  fullName: TAssetBundle.IActiveAssetBundleInfo.AssetBundleInfo
  nameWithType: IActiveAssetBundleInfo.AssetBundleInfo
- uid: TAssetBundle.IActiveAssetBundleInfo.Dependencies
  name: Dependencies
  href: api/TAssetBundle.IActiveAssetBundleInfo.html#TAssetBundle_IActiveAssetBundleInfo_Dependencies
  commentId: P:TAssetBundle.IActiveAssetBundleInfo.Dependencies
  fullName: TAssetBundle.IActiveAssetBundleInfo.Dependencies
  nameWithType: IActiveAssetBundleInfo.Dependencies
- uid: TAssetBundle.IActiveAssetBundleInfo.Dependencies*
  name: Dependencies
  href: api/TAssetBundle.IActiveAssetBundleInfo.html#TAssetBundle_IActiveAssetBundleInfo_Dependencies_
  commentId: Overload:TAssetBundle.IActiveAssetBundleInfo.Dependencies
  isSpec: "True"
  fullName: TAssetBundle.IActiveAssetBundleInfo.Dependencies
  nameWithType: IActiveAssetBundleInfo.Dependencies
- uid: TAssetBundle.IAssetCatalogComparer
  name: IAssetCatalogComparer
  href: api/TAssetBundle.IAssetCatalogComparer.html
  commentId: T:TAssetBundle.IAssetCatalogComparer
  fullName: TAssetBundle.IAssetCatalogComparer
  nameWithType: IAssetCatalogComparer
- uid: TAssetBundle.IAssetCatalogComparer.IsRemoteHigh(TAssetBundle.AssetCatalog,TAssetBundle.AssetCatalog)
  name: IsRemoteHigh(AssetCatalog, AssetCatalog)
  href: api/TAssetBundle.IAssetCatalogComparer.html#TAssetBundle_IAssetCatalogComparer_IsRemoteHigh_TAssetBundle_AssetCatalog_TAssetBundle_AssetCatalog_
  commentId: M:TAssetBundle.IAssetCatalogComparer.IsRemoteHigh(TAssetBundle.AssetCatalog,TAssetBundle.AssetCatalog)
  fullName: TAssetBundle.IAssetCatalogComparer.IsRemoteHigh(TAssetBundle.AssetCatalog, TAssetBundle.AssetCatalog)
  nameWithType: IAssetCatalogComparer.IsRemoteHigh(AssetCatalog, AssetCatalog)
- uid: TAssetBundle.IAssetCatalogComparer.IsRemoteHigh*
  name: IsRemoteHigh
  href: api/TAssetBundle.IAssetCatalogComparer.html#TAssetBundle_IAssetCatalogComparer_IsRemoteHigh_
  commentId: Overload:TAssetBundle.IAssetCatalogComparer.IsRemoteHigh
  isSpec: "True"
  fullName: TAssetBundle.IAssetCatalogComparer.IsRemoteHigh
  nameWithType: IAssetCatalogComparer.IsRemoteHigh
- uid: TAssetBundle.IAssetCatalogInfo
  name: IAssetCatalogInfo
  href: api/TAssetBundle.IAssetCatalogInfo.html
  commentId: T:TAssetBundle.IAssetCatalogInfo
  fullName: TAssetBundle.IAssetCatalogInfo
  nameWithType: IAssetCatalogInfo
- uid: TAssetBundle.IAssetCatalogInfo.AssetBundleInfos
  name: AssetBundleInfos
  href: api/TAssetBundle.IAssetCatalogInfo.html#TAssetBundle_IAssetCatalogInfo_AssetBundleInfos
  commentId: P:TAssetBundle.IAssetCatalogInfo.AssetBundleInfos
  fullName: TAssetBundle.IAssetCatalogInfo.AssetBundleInfos
  nameWithType: IAssetCatalogInfo.AssetBundleInfos
- uid: TAssetBundle.IAssetCatalogInfo.AssetBundleInfos*
  name: AssetBundleInfos
  href: api/TAssetBundle.IAssetCatalogInfo.html#TAssetBundle_IAssetCatalogInfo_AssetBundleInfos_
  commentId: Overload:TAssetBundle.IAssetCatalogInfo.AssetBundleInfos
  isSpec: "True"
  fullName: TAssetBundle.IAssetCatalogInfo.AssetBundleInfos
  nameWithType: IAssetCatalogInfo.AssetBundleInfos
- uid: TAssetBundle.IAssetCatalogInfo.Name
  name: Name
  href: api/TAssetBundle.IAssetCatalogInfo.html#TAssetBundle_IAssetCatalogInfo_Name
  commentId: P:TAssetBundle.IAssetCatalogInfo.Name
  fullName: TAssetBundle.IAssetCatalogInfo.Name
  nameWithType: IAssetCatalogInfo.Name
- uid: TAssetBundle.IAssetCatalogInfo.Name*
  name: Name
  href: api/TAssetBundle.IAssetCatalogInfo.html#TAssetBundle_IAssetCatalogInfo_Name_
  commentId: Overload:TAssetBundle.IAssetCatalogInfo.Name
  isSpec: "True"
  fullName: TAssetBundle.IAssetCatalogInfo.Name
  nameWithType: IAssetCatalogInfo.Name
- uid: TAssetBundle.IAssetHandle
  name: IAssetHandle
  href: api/TAssetBundle.IAssetHandle.html
  commentId: T:TAssetBundle.IAssetHandle
  fullName: TAssetBundle.IAssetHandle
  nameWithType: IAssetHandle
- uid: TAssetBundle.IAssetHandle.Info
  name: Info
  href: api/TAssetBundle.IAssetHandle.html#TAssetBundle_IAssetHandle_Info
  commentId: P:TAssetBundle.IAssetHandle.Info
  fullName: TAssetBundle.IAssetHandle.Info
  nameWithType: IAssetHandle.Info
- uid: TAssetBundle.IAssetHandle.Info*
  name: Info
  href: api/TAssetBundle.IAssetHandle.html#TAssetBundle_IAssetHandle_Info_
  commentId: Overload:TAssetBundle.IAssetHandle.Info
  isSpec: "True"
  fullName: TAssetBundle.IAssetHandle.Info
  nameWithType: IAssetHandle.Info
- uid: TAssetBundle.IAssetHandle.IsLoaded
  name: IsLoaded
  href: api/TAssetBundle.IAssetHandle.html#TAssetBundle_IAssetHandle_IsLoaded
  commentId: P:TAssetBundle.IAssetHandle.IsLoaded
  fullName: TAssetBundle.IAssetHandle.IsLoaded
  nameWithType: IAssetHandle.IsLoaded
- uid: TAssetBundle.IAssetHandle.IsLoaded*
  name: IsLoaded
  href: api/TAssetBundle.IAssetHandle.html#TAssetBundle_IAssetHandle_IsLoaded_
  commentId: Overload:TAssetBundle.IAssetHandle.IsLoaded
  isSpec: "True"
  fullName: TAssetBundle.IAssetHandle.IsLoaded
  nameWithType: IAssetHandle.IsLoaded
- uid: TAssetBundle.IAssetHandle`1
  name: IAssetHandle<T>
  href: api/TAssetBundle.IAssetHandle-1.html
  commentId: T:TAssetBundle.IAssetHandle`1
  name.vb: IAssetHandle(Of T)
  fullName: TAssetBundle.IAssetHandle<T>
  fullName.vb: TAssetBundle.IAssetHandle(Of T)
  nameWithType: IAssetHandle<T>
  nameWithType.vb: IAssetHandle(Of T)
- uid: TAssetBundle.IAssetHandle`1.Get
  name: Get()
  href: api/TAssetBundle.IAssetHandle-1.html#TAssetBundle_IAssetHandle_1_Get
  commentId: M:TAssetBundle.IAssetHandle`1.Get
  fullName: TAssetBundle.IAssetHandle<T>.Get()
  fullName.vb: TAssetBundle.IAssetHandle(Of T).Get()
  nameWithType: IAssetHandle<T>.Get()
  nameWithType.vb: IAssetHandle(Of T).Get()
- uid: TAssetBundle.IAssetHandle`1.Get*
  name: Get
  href: api/TAssetBundle.IAssetHandle-1.html#TAssetBundle_IAssetHandle_1_Get_
  commentId: Overload:TAssetBundle.IAssetHandle`1.Get
  isSpec: "True"
  fullName: TAssetBundle.IAssetHandle<T>.Get
  fullName.vb: TAssetBundle.IAssetHandle(Of T).Get
  nameWithType: IAssetHandle<T>.Get
  nameWithType.vb: IAssetHandle(Of T).Get
- uid: TAssetBundle.IAssetInfo
  name: IAssetInfo
  href: api/TAssetBundle.IAssetInfo.html
  commentId: T:TAssetBundle.IAssetInfo
  fullName: TAssetBundle.IAssetInfo
  nameWithType: IAssetInfo
- uid: TAssetBundle.IAssetInfo.ActiveAssetBundle
  name: ActiveAssetBundle
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_ActiveAssetBundle
  commentId: P:TAssetBundle.IAssetInfo.ActiveAssetBundle
  fullName: TAssetBundle.IAssetInfo.ActiveAssetBundle
  nameWithType: IAssetInfo.ActiveAssetBundle
- uid: TAssetBundle.IAssetInfo.ActiveAssetBundle*
  name: ActiveAssetBundle
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_ActiveAssetBundle_
  commentId: Overload:TAssetBundle.IAssetInfo.ActiveAssetBundle
  isSpec: "True"
  fullName: TAssetBundle.IAssetInfo.ActiveAssetBundle
  nameWithType: IAssetInfo.ActiveAssetBundle
- uid: TAssetBundle.IAssetInfo.Asset
  name: Asset
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_Asset
  commentId: P:TAssetBundle.IAssetInfo.Asset
  fullName: TAssetBundle.IAssetInfo.Asset
  nameWithType: IAssetInfo.Asset
- uid: TAssetBundle.IAssetInfo.Asset*
  name: Asset
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_Asset_
  commentId: Overload:TAssetBundle.IAssetInfo.Asset
  isSpec: "True"
  fullName: TAssetBundle.IAssetInfo.Asset
  nameWithType: IAssetInfo.Asset
- uid: TAssetBundle.IAssetInfo.AssetPath
  name: AssetPath
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_AssetPath
  commentId: P:TAssetBundle.IAssetInfo.AssetPath
  fullName: TAssetBundle.IAssetInfo.AssetPath
  nameWithType: IAssetInfo.AssetPath
- uid: TAssetBundle.IAssetInfo.AssetPath*
  name: AssetPath
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_AssetPath_
  commentId: Overload:TAssetBundle.IAssetInfo.AssetPath
  isSpec: "True"
  fullName: TAssetBundle.IAssetInfo.AssetPath
  nameWithType: IAssetInfo.AssetPath
- uid: TAssetBundle.IAssetInfo.StartTime
  name: StartTime
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_StartTime
  commentId: P:TAssetBundle.IAssetInfo.StartTime
  fullName: TAssetBundle.IAssetInfo.StartTime
  nameWithType: IAssetInfo.StartTime
- uid: TAssetBundle.IAssetInfo.StartTime*
  name: StartTime
  href: api/TAssetBundle.IAssetInfo.html#TAssetBundle_IAssetInfo_StartTime_
  commentId: Overload:TAssetBundle.IAssetInfo.StartTime
  isSpec: "True"
  fullName: TAssetBundle.IAssetInfo.StartTime
  nameWithType: IAssetInfo.StartTime
- uid: TAssetBundle.IAsyncOperation
  name: IAsyncOperation
  href: api/TAssetBundle.IAsyncOperation.html
  commentId: T:TAssetBundle.IAsyncOperation
  fullName: TAssetBundle.IAsyncOperation
  nameWithType: IAsyncOperation
- uid: TAssetBundle.IAsyncOperation.Clear
  name: Clear()
  href: api/TAssetBundle.IAsyncOperation.html#TAssetBundle_IAsyncOperation_Clear
  commentId: M:TAssetBundle.IAsyncOperation.Clear
  fullName: TAssetBundle.IAsyncOperation.Clear()
  nameWithType: IAsyncOperation.Clear()
- uid: TAssetBundle.IAsyncOperation.Clear*
  name: Clear
  href: api/TAssetBundle.IAsyncOperation.html#TAssetBundle_IAsyncOperation_Clear_
  commentId: Overload:TAssetBundle.IAsyncOperation.Clear
  isSpec: "True"
  fullName: TAssetBundle.IAsyncOperation.Clear
  nameWithType: IAsyncOperation.Clear
- uid: TAssetBundle.IAsyncOperationPool
  name: IAsyncOperationPool
  href: api/TAssetBundle.IAsyncOperationPool.html
  commentId: T:TAssetBundle.IAsyncOperationPool
  fullName: TAssetBundle.IAsyncOperationPool
  nameWithType: IAsyncOperationPool
- uid: TAssetBundle.IAsyncOperationPool.Clear
  name: Clear()
  href: api/TAssetBundle.IAsyncOperationPool.html#TAssetBundle_IAsyncOperationPool_Clear
  commentId: M:TAssetBundle.IAsyncOperationPool.Clear
  fullName: TAssetBundle.IAsyncOperationPool.Clear()
  nameWithType: IAsyncOperationPool.Clear()
- uid: TAssetBundle.IAsyncOperationPool.Clear*
  name: Clear
  href: api/TAssetBundle.IAsyncOperationPool.html#TAssetBundle_IAsyncOperationPool_Clear_
  commentId: Overload:TAssetBundle.IAsyncOperationPool.Clear
  isSpec: "True"
  fullName: TAssetBundle.IAsyncOperationPool.Clear
  nameWithType: IAsyncOperationPool.Clear
- uid: TAssetBundle.IAsyncOperationPool.Get*
  name: Get
  href: api/TAssetBundle.IAsyncOperationPool.html#TAssetBundle_IAsyncOperationPool_Get_
  commentId: Overload:TAssetBundle.IAsyncOperationPool.Get
  isSpec: "True"
  fullName: TAssetBundle.IAsyncOperationPool.Get
  nameWithType: IAsyncOperationPool.Get
- uid: TAssetBundle.IAsyncOperationPool.Get``1
  name: Get<T>()
  href: api/TAssetBundle.IAsyncOperationPool.html#TAssetBundle_IAsyncOperationPool_Get__1
  commentId: M:TAssetBundle.IAsyncOperationPool.Get``1
  name.vb: Get(Of T)()
  fullName: TAssetBundle.IAsyncOperationPool.Get<T>()
  fullName.vb: TAssetBundle.IAsyncOperationPool.Get(Of T)()
  nameWithType: IAsyncOperationPool.Get<T>()
  nameWithType.vb: IAsyncOperationPool.Get(Of T)()
- uid: TAssetBundle.IAsyncOperationPool.Push(TAssetBundle.IAsyncOperation)
  name: Push(IAsyncOperation)
  href: api/TAssetBundle.IAsyncOperationPool.html#TAssetBundle_IAsyncOperationPool_Push_TAssetBundle_IAsyncOperation_
  commentId: M:TAssetBundle.IAsyncOperationPool.Push(TAssetBundle.IAsyncOperation)
  fullName: TAssetBundle.IAsyncOperationPool.Push(TAssetBundle.IAsyncOperation)
  nameWithType: IAsyncOperationPool.Push(IAsyncOperation)
- uid: TAssetBundle.IAsyncOperationPool.Push*
  name: Push
  href: api/TAssetBundle.IAsyncOperationPool.html#TAssetBundle_IAsyncOperationPool_Push_
  commentId: Overload:TAssetBundle.IAsyncOperationPool.Push
  isSpec: "True"
  fullName: TAssetBundle.IAsyncOperationPool.Push
  nameWithType: IAsyncOperationPool.Push
- uid: TAssetBundle.IReferenceCount
  name: IReferenceCount
  href: api/TAssetBundle.IReferenceCount.html
  commentId: T:TAssetBundle.IReferenceCount
  fullName: TAssetBundle.IReferenceCount
  nameWithType: IReferenceCount
- uid: TAssetBundle.IReferenceCount.ReferenceCount
  name: ReferenceCount
  href: api/TAssetBundle.IReferenceCount.html#TAssetBundle_IReferenceCount_ReferenceCount
  commentId: P:TAssetBundle.IReferenceCount.ReferenceCount
  fullName: TAssetBundle.IReferenceCount.ReferenceCount
  nameWithType: IReferenceCount.ReferenceCount
- uid: TAssetBundle.IReferenceCount.ReferenceCount*
  name: ReferenceCount
  href: api/TAssetBundle.IReferenceCount.html#TAssetBundle_IReferenceCount_ReferenceCount_
  commentId: Overload:TAssetBundle.IReferenceCount.ReferenceCount
  isSpec: "True"
  fullName: TAssetBundle.IReferenceCount.ReferenceCount
  nameWithType: IReferenceCount.ReferenceCount
- uid: TAssetBundle.ITagComparer
  name: ITagComparer
  href: api/TAssetBundle.ITagComparer.html
  commentId: T:TAssetBundle.ITagComparer
  fullName: TAssetBundle.ITagComparer
  nameWithType: ITagComparer
- uid: TAssetBundle.ITagComparer.IsInclude(System.String,System.String)
  name: IsInclude(string, string)
  href: api/TAssetBundle.ITagComparer.html#TAssetBundle_ITagComparer_IsInclude_System_String_System_String_
  commentId: M:TAssetBundle.ITagComparer.IsInclude(System.String,System.String)
  name.vb: IsInclude(String, String)
  fullName: TAssetBundle.ITagComparer.IsInclude(string, string)
  fullName.vb: TAssetBundle.ITagComparer.IsInclude(String, String)
  nameWithType: ITagComparer.IsInclude(string, string)
  nameWithType.vb: ITagComparer.IsInclude(String, String)
- uid: TAssetBundle.ITagComparer.IsInclude*
  name: IsInclude
  href: api/TAssetBundle.ITagComparer.html#TAssetBundle_ITagComparer_IsInclude_
  commentId: Overload:TAssetBundle.ITagComparer.IsInclude
  isSpec: "True"
  fullName: TAssetBundle.ITagComparer.IsInclude
  nameWithType: ITagComparer.IsInclude
- uid: TAssetBundle.JsonCatalogSerializer
  name: JsonCatalogSerializer
  href: api/TAssetBundle.JsonCatalogSerializer.html
  commentId: T:TAssetBundle.JsonCatalogSerializer
  fullName: TAssetBundle.JsonCatalogSerializer
  nameWithType: JsonCatalogSerializer
- uid: TAssetBundle.JsonCatalogSerializer.Read(System.Byte[])
  name: Read(byte[])
  href: api/TAssetBundle.JsonCatalogSerializer.html#TAssetBundle_JsonCatalogSerializer_Read_System_Byte___
  commentId: M:TAssetBundle.JsonCatalogSerializer.Read(System.Byte[])
  name.vb: Read(Byte())
  fullName: TAssetBundle.JsonCatalogSerializer.Read(byte[])
  fullName.vb: TAssetBundle.JsonCatalogSerializer.Read(Byte())
  nameWithType: JsonCatalogSerializer.Read(byte[])
  nameWithType.vb: JsonCatalogSerializer.Read(Byte())
- uid: TAssetBundle.JsonCatalogSerializer.Read*
  name: Read
  href: api/TAssetBundle.JsonCatalogSerializer.html#TAssetBundle_JsonCatalogSerializer_Read_
  commentId: Overload:TAssetBundle.JsonCatalogSerializer.Read
  isSpec: "True"
  fullName: TAssetBundle.JsonCatalogSerializer.Read
  nameWithType: JsonCatalogSerializer.Read
- uid: TAssetBundle.JsonCatalogSerializer.Write(TAssetBundle.AssetCatalog)
  name: Write(AssetCatalog)
  href: api/TAssetBundle.JsonCatalogSerializer.html#TAssetBundle_JsonCatalogSerializer_Write_TAssetBundle_AssetCatalog_
  commentId: M:TAssetBundle.JsonCatalogSerializer.Write(TAssetBundle.AssetCatalog)
  fullName: TAssetBundle.JsonCatalogSerializer.Write(TAssetBundle.AssetCatalog)
  nameWithType: JsonCatalogSerializer.Write(AssetCatalog)
- uid: TAssetBundle.JsonCatalogSerializer.Write*
  name: Write
  href: api/TAssetBundle.JsonCatalogSerializer.html#TAssetBundle_JsonCatalogSerializer_Write_
  commentId: Overload:TAssetBundle.JsonCatalogSerializer.Write
  isSpec: "True"
  fullName: TAssetBundle.JsonCatalogSerializer.Write
  nameWithType: JsonCatalogSerializer.Write
- uid: TAssetBundle.LoadSceneInfo
  name: LoadSceneInfo
  href: api/TAssetBundle.LoadSceneInfo.html
  commentId: T:TAssetBundle.LoadSceneInfo
  fullName: TAssetBundle.LoadSceneInfo
  nameWithType: LoadSceneInfo
- uid: TAssetBundle.LoadSceneInfo.AllowSceneActivationCallback
  name: LoadSceneInfo.AllowSceneActivationCallback
  href: api/TAssetBundle.LoadSceneInfo.AllowSceneActivationCallback.html
  commentId: T:TAssetBundle.LoadSceneInfo.AllowSceneActivationCallback
  fullName: TAssetBundle.LoadSceneInfo.AllowSceneActivationCallback
  nameWithType: LoadSceneInfo.AllowSceneActivationCallback
- uid: TAssetBundle.LoadSceneInfo.allowSceneActivation
  name: allowSceneActivation
  href: api/TAssetBundle.LoadSceneInfo.html#TAssetBundle_LoadSceneInfo_allowSceneActivation
  commentId: F:TAssetBundle.LoadSceneInfo.allowSceneActivation
  fullName: TAssetBundle.LoadSceneInfo.allowSceneActivation
  nameWithType: LoadSceneInfo.allowSceneActivation
- uid: TAssetBundle.LoadSceneInfo.loadSceneMode
  name: loadSceneMode
  href: api/TAssetBundle.LoadSceneInfo.html#TAssetBundle_LoadSceneInfo_loadSceneMode
  commentId: F:TAssetBundle.LoadSceneInfo.loadSceneMode
  fullName: TAssetBundle.LoadSceneInfo.loadSceneMode
  nameWithType: LoadSceneInfo.loadSceneMode
- uid: TAssetBundle.LoadSceneInfo.sceneNameOrPath
  name: sceneNameOrPath
  href: api/TAssetBundle.LoadSceneInfo.html#TAssetBundle_LoadSceneInfo_sceneNameOrPath
  commentId: F:TAssetBundle.LoadSceneInfo.sceneNameOrPath
  fullName: TAssetBundle.LoadSceneInfo.sceneNameOrPath
  nameWithType: LoadSceneInfo.sceneNameOrPath
- uid: TAssetBundle.Logger
  name: Logger
  href: api/TAssetBundle.Logger.html
  commentId: T:TAssetBundle.Logger
  fullName: TAssetBundle.Logger
  nameWithType: Logger
- uid: TAssetBundle.Logger.Error(System.String)
  name: Error(string)
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_Error_System_String_
  commentId: M:TAssetBundle.Logger.Error(System.String)
  name.vb: Error(String)
  fullName: TAssetBundle.Logger.Error(string)
  fullName.vb: TAssetBundle.Logger.Error(String)
  nameWithType: Logger.Error(string)
  nameWithType.vb: Logger.Error(String)
- uid: TAssetBundle.Logger.Error*
  name: Error
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_Error_
  commentId: Overload:TAssetBundle.Logger.Error
  isSpec: "True"
  fullName: TAssetBundle.Logger.Error
  nameWithType: Logger.Error
- uid: TAssetBundle.Logger.ErrorHandler
  name: ErrorHandler
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_ErrorHandler
  commentId: F:TAssetBundle.Logger.ErrorHandler
  fullName: TAssetBundle.Logger.ErrorHandler
  nameWithType: Logger.ErrorHandler
- uid: TAssetBundle.Logger.Log(System.String)
  name: Log(string)
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_Log_System_String_
  commentId: M:TAssetBundle.Logger.Log(System.String)
  name.vb: Log(String)
  fullName: TAssetBundle.Logger.Log(string)
  fullName.vb: TAssetBundle.Logger.Log(String)
  nameWithType: Logger.Log(string)
  nameWithType.vb: Logger.Log(String)
- uid: TAssetBundle.Logger.Log*
  name: Log
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_Log_
  commentId: Overload:TAssetBundle.Logger.Log
  isSpec: "True"
  fullName: TAssetBundle.Logger.Log
  nameWithType: Logger.Log
- uid: TAssetBundle.Logger.LogHandler
  name: LogHandler
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_LogHandler
  commentId: F:TAssetBundle.Logger.LogHandler
  fullName: TAssetBundle.Logger.LogHandler
  nameWithType: Logger.LogHandler
- uid: TAssetBundle.Logger.LogPrefix
  name: LogPrefix
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_LogPrefix
  commentId: F:TAssetBundle.Logger.LogPrefix
  fullName: TAssetBundle.Logger.LogPrefix
  nameWithType: Logger.LogPrefix
- uid: TAssetBundle.Logger.Warning(System.String)
  name: Warning(string)
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_Warning_System_String_
  commentId: M:TAssetBundle.Logger.Warning(System.String)
  name.vb: Warning(String)
  fullName: TAssetBundle.Logger.Warning(string)
  fullName.vb: TAssetBundle.Logger.Warning(String)
  nameWithType: Logger.Warning(string)
  nameWithType.vb: Logger.Warning(String)
- uid: TAssetBundle.Logger.Warning*
  name: Warning
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_Warning_
  commentId: Overload:TAssetBundle.Logger.Warning
  isSpec: "True"
  fullName: TAssetBundle.Logger.Warning
  nameWithType: Logger.Warning
- uid: TAssetBundle.Logger.WarningHandler
  name: WarningHandler
  href: api/TAssetBundle.Logger.html#TAssetBundle_Logger_WarningHandler
  commentId: F:TAssetBundle.Logger.WarningHandler
  fullName: TAssetBundle.Logger.WarningHandler
  nameWithType: Logger.WarningHandler
- uid: TAssetBundle.RijndaelCryptoSerializer
  name: RijndaelCryptoSerializer
  href: api/TAssetBundle.RijndaelCryptoSerializer.html
  commentId: T:TAssetBundle.RijndaelCryptoSerializer
  fullName: TAssetBundle.RijndaelCryptoSerializer
  nameWithType: RijndaelCryptoSerializer
- uid: TAssetBundle.RijndaelCryptoSerializer.Decrypt(System.Byte[])
  name: Decrypt(byte[])
  href: api/TAssetBundle.RijndaelCryptoSerializer.html#TAssetBundle_RijndaelCryptoSerializer_Decrypt_System_Byte___
  commentId: M:TAssetBundle.RijndaelCryptoSerializer.Decrypt(System.Byte[])
  name.vb: Decrypt(Byte())
  fullName: TAssetBundle.RijndaelCryptoSerializer.Decrypt(byte[])
  fullName.vb: TAssetBundle.RijndaelCryptoSerializer.Decrypt(Byte())
  nameWithType: RijndaelCryptoSerializer.Decrypt(byte[])
  nameWithType.vb: RijndaelCryptoSerializer.Decrypt(Byte())
- uid: TAssetBundle.RijndaelCryptoSerializer.Decrypt*
  name: Decrypt
  href: api/TAssetBundle.RijndaelCryptoSerializer.html#TAssetBundle_RijndaelCryptoSerializer_Decrypt_
  commentId: Overload:TAssetBundle.RijndaelCryptoSerializer.Decrypt
  isSpec: "True"
  fullName: TAssetBundle.RijndaelCryptoSerializer.Decrypt
  nameWithType: RijndaelCryptoSerializer.Decrypt
- uid: TAssetBundle.RijndaelCryptoSerializer.Encrypt(System.Byte[])
  name: Encrypt(byte[])
  href: api/TAssetBundle.RijndaelCryptoSerializer.html#TAssetBundle_RijndaelCryptoSerializer_Encrypt_System_Byte___
  commentId: M:TAssetBundle.RijndaelCryptoSerializer.Encrypt(System.Byte[])
  name.vb: Encrypt(Byte())
  fullName: TAssetBundle.RijndaelCryptoSerializer.Encrypt(byte[])
  fullName.vb: TAssetBundle.RijndaelCryptoSerializer.Encrypt(Byte())
  nameWithType: RijndaelCryptoSerializer.Encrypt(byte[])
  nameWithType.vb: RijndaelCryptoSerializer.Encrypt(Byte())
- uid: TAssetBundle.RijndaelCryptoSerializer.Encrypt*
  name: Encrypt
  href: api/TAssetBundle.RijndaelCryptoSerializer.html#TAssetBundle_RijndaelCryptoSerializer_Encrypt_
  commentId: Overload:TAssetBundle.RijndaelCryptoSerializer.Encrypt
  isSpec: "True"
  fullName: TAssetBundle.RijndaelCryptoSerializer.Encrypt
  nameWithType: RijndaelCryptoSerializer.Encrypt
- uid: TAssetBundle.RijndaelCryptoSerializer.Init(System.String)
  name: Init(string)
  href: api/TAssetBundle.RijndaelCryptoSerializer.html#TAssetBundle_RijndaelCryptoSerializer_Init_System_String_
  commentId: M:TAssetBundle.RijndaelCryptoSerializer.Init(System.String)
  name.vb: Init(String)
  fullName: TAssetBundle.RijndaelCryptoSerializer.Init(string)
  fullName.vb: TAssetBundle.RijndaelCryptoSerializer.Init(String)
  nameWithType: RijndaelCryptoSerializer.Init(string)
  nameWithType.vb: RijndaelCryptoSerializer.Init(String)
- uid: TAssetBundle.RijndaelCryptoSerializer.Init*
  name: Init
  href: api/TAssetBundle.RijndaelCryptoSerializer.html#TAssetBundle_RijndaelCryptoSerializer_Init_
  commentId: Overload:TAssetBundle.RijndaelCryptoSerializer.Init
  isSpec: "True"
  fullName: TAssetBundle.RijndaelCryptoSerializer.Init
  nameWithType: RijndaelCryptoSerializer.Init
- uid: TAssetBundle.SceneAssetRef
  name: SceneAssetRef
  href: api/TAssetBundle.SceneAssetRef.html
  commentId: T:TAssetBundle.SceneAssetRef
  fullName: TAssetBundle.SceneAssetRef
  nameWithType: SceneAssetRef
- uid: TAssetBundle.Settings
  name: Settings
  href: api/TAssetBundle.Settings.html
  commentId: T:TAssetBundle.Settings
  fullName: TAssetBundle.Settings
  nameWithType: Settings
- uid: TAssetBundle.Settings.BuildSetting
  name: Settings.BuildSetting
  href: api/TAssetBundle.Settings.BuildSetting.html
  commentId: T:TAssetBundle.Settings.BuildSetting
  fullName: TAssetBundle.Settings.BuildSetting
  nameWithType: Settings.BuildSetting
- uid: TAssetBundle.Settings.BuildSetting.Equals(System.Object)
  name: Equals(object)
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_Equals_System_Object_
  commentId: M:TAssetBundle.Settings.BuildSetting.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: TAssetBundle.Settings.BuildSetting.Equals(object)
  fullName.vb: TAssetBundle.Settings.BuildSetting.Equals(Object)
  nameWithType: Settings.BuildSetting.Equals(object)
  nameWithType.vb: Settings.BuildSetting.Equals(Object)
- uid: TAssetBundle.Settings.BuildSetting.Equals*
  name: Equals
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_Equals_
  commentId: Overload:TAssetBundle.Settings.BuildSetting.Equals
  isSpec: "True"
  fullName: TAssetBundle.Settings.BuildSetting.Equals
  nameWithType: Settings.BuildSetting.Equals
- uid: TAssetBundle.Settings.BuildSetting.GetHashCode
  name: GetHashCode()
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_GetHashCode
  commentId: M:TAssetBundle.Settings.BuildSetting.GetHashCode
  fullName: TAssetBundle.Settings.BuildSetting.GetHashCode()
  nameWithType: Settings.BuildSetting.GetHashCode()
- uid: TAssetBundle.Settings.BuildSetting.GetHashCode*
  name: GetHashCode
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_GetHashCode_
  commentId: Overload:TAssetBundle.Settings.BuildSetting.GetHashCode
  isSpec: "True"
  fullName: TAssetBundle.Settings.BuildSetting.GetHashCode
  nameWithType: Settings.BuildSetting.GetHashCode
- uid: TAssetBundle.Settings.BuildSetting.appendHashFromFileName
  name: appendHashFromFileName
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_appendHashFromFileName
  commentId: F:TAssetBundle.Settings.BuildSetting.appendHashFromFileName
  fullName: TAssetBundle.Settings.BuildSetting.appendHashFromFileName
  nameWithType: Settings.BuildSetting.appendHashFromFileName
- uid: TAssetBundle.Settings.BuildSetting.assetBundleFileExtensions
  name: assetBundleFileExtensions
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_assetBundleFileExtensions
  commentId: F:TAssetBundle.Settings.BuildSetting.assetBundleFileExtensions
  fullName: TAssetBundle.Settings.BuildSetting.assetBundleFileExtensions
  nameWithType: Settings.BuildSetting.assetBundleFileExtensions
- uid: TAssetBundle.Settings.BuildSetting.catalogFileExtensions
  name: catalogFileExtensions
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_catalogFileExtensions
  commentId: F:TAssetBundle.Settings.BuildSetting.catalogFileExtensions
  fullName: TAssetBundle.Settings.BuildSetting.catalogFileExtensions
  nameWithType: Settings.BuildSetting.catalogFileExtensions
- uid: TAssetBundle.Settings.BuildSetting.compressCatalog
  name: compressCatalog
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_compressCatalog
  commentId: F:TAssetBundle.Settings.BuildSetting.compressCatalog
  fullName: TAssetBundle.Settings.BuildSetting.compressCatalog
  nameWithType: Settings.BuildSetting.compressCatalog
- uid: TAssetBundle.Settings.BuildSetting.cryptoKey
  name: cryptoKey
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_cryptoKey
  commentId: F:TAssetBundle.Settings.BuildSetting.cryptoKey
  fullName: TAssetBundle.Settings.BuildSetting.cryptoKey
  nameWithType: Settings.BuildSetting.cryptoKey
- uid: TAssetBundle.Settings.BuildSetting.encryptCatalog
  name: encryptCatalog
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_encryptCatalog
  commentId: F:TAssetBundle.Settings.BuildSetting.encryptCatalog
  fullName: TAssetBundle.Settings.BuildSetting.encryptCatalog
  nameWithType: Settings.BuildSetting.encryptCatalog
- uid: TAssetBundle.Settings.BuildSetting.op_Equality(TAssetBundle.Settings.BuildSetting,TAssetBundle.Settings.BuildSetting)
  name: operator ==(BuildSetting, BuildSetting)
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_op_Equality_TAssetBundle_Settings_BuildSetting_TAssetBundle_Settings_BuildSetting_
  commentId: M:TAssetBundle.Settings.BuildSetting.op_Equality(TAssetBundle.Settings.BuildSetting,TAssetBundle.Settings.BuildSetting)
  name.vb: =(BuildSetting, BuildSetting)
  fullName: TAssetBundle.Settings.BuildSetting.operator ==(TAssetBundle.Settings.BuildSetting, TAssetBundle.Settings.BuildSetting)
  fullName.vb: TAssetBundle.Settings.BuildSetting.=(TAssetBundle.Settings.BuildSetting, TAssetBundle.Settings.BuildSetting)
  nameWithType: Settings.BuildSetting.operator ==(Settings.BuildSetting, Settings.BuildSetting)
  nameWithType.vb: Settings.BuildSetting.=(Settings.BuildSetting, Settings.BuildSetting)
- uid: TAssetBundle.Settings.BuildSetting.op_Equality*
  name: operator ==
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_op_Equality_
  commentId: Overload:TAssetBundle.Settings.BuildSetting.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: TAssetBundle.Settings.BuildSetting.operator ==
  fullName.vb: TAssetBundle.Settings.BuildSetting.=
  nameWithType: Settings.BuildSetting.operator ==
  nameWithType.vb: Settings.BuildSetting.=
- uid: TAssetBundle.Settings.BuildSetting.op_Inequality(TAssetBundle.Settings.BuildSetting,TAssetBundle.Settings.BuildSetting)
  name: operator !=(BuildSetting, BuildSetting)
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_op_Inequality_TAssetBundle_Settings_BuildSetting_TAssetBundle_Settings_BuildSetting_
  commentId: M:TAssetBundle.Settings.BuildSetting.op_Inequality(TAssetBundle.Settings.BuildSetting,TAssetBundle.Settings.BuildSetting)
  name.vb: <>(BuildSetting, BuildSetting)
  fullName: TAssetBundle.Settings.BuildSetting.operator !=(TAssetBundle.Settings.BuildSetting, TAssetBundle.Settings.BuildSetting)
  fullName.vb: TAssetBundle.Settings.BuildSetting.<>(TAssetBundle.Settings.BuildSetting, TAssetBundle.Settings.BuildSetting)
  nameWithType: Settings.BuildSetting.operator !=(Settings.BuildSetting, Settings.BuildSetting)
  nameWithType.vb: Settings.BuildSetting.<>(Settings.BuildSetting, Settings.BuildSetting)
- uid: TAssetBundle.Settings.BuildSetting.op_Inequality*
  name: operator !=
  href: api/TAssetBundle.Settings.BuildSetting.html#TAssetBundle_Settings_BuildSetting_op_Inequality_
  commentId: Overload:TAssetBundle.Settings.BuildSetting.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: TAssetBundle.Settings.BuildSetting.operator !=
  fullName.vb: TAssetBundle.Settings.BuildSetting.<>
  nameWithType: Settings.BuildSetting.operator !=
  nameWithType.vb: Settings.BuildSetting.<>
- uid: TAssetBundle.Settings.GenerateNewCryptoKey
  name: GenerateNewCryptoKey()
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GenerateNewCryptoKey
  commentId: M:TAssetBundle.Settings.GenerateNewCryptoKey
  fullName: TAssetBundle.Settings.GenerateNewCryptoKey()
  nameWithType: Settings.GenerateNewCryptoKey()
- uid: TAssetBundle.Settings.GenerateNewCryptoKey*
  name: GenerateNewCryptoKey
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GenerateNewCryptoKey_
  commentId: Overload:TAssetBundle.Settings.GenerateNewCryptoKey
  isSpec: "True"
  fullName: TAssetBundle.Settings.GenerateNewCryptoKey
  nameWithType: Settings.GenerateNewCryptoKey
- uid: TAssetBundle.Settings.GetBuildTarget
  name: GetBuildTarget()
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetBuildTarget
  commentId: M:TAssetBundle.Settings.GetBuildTarget
  fullName: TAssetBundle.Settings.GetBuildTarget()
  nameWithType: Settings.GetBuildTarget()
- uid: TAssetBundle.Settings.GetBuildTarget*
  name: GetBuildTarget
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetBuildTarget_
  commentId: Overload:TAssetBundle.Settings.GetBuildTarget
  isSpec: "True"
  fullName: TAssetBundle.Settings.GetBuildTarget
  nameWithType: Settings.GetBuildTarget
- uid: TAssetBundle.Settings.GetCatalogFileHandler
  name: GetCatalogFileHandler()
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetCatalogFileHandler
  commentId: M:TAssetBundle.Settings.GetCatalogFileHandler
  fullName: TAssetBundle.Settings.GetCatalogFileHandler()
  nameWithType: Settings.GetCatalogFileHandler()
- uid: TAssetBundle.Settings.GetCatalogFileHandler*
  name: GetCatalogFileHandler
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetCatalogFileHandler_
  commentId: Overload:TAssetBundle.Settings.GetCatalogFileHandler
  isSpec: "True"
  fullName: TAssetBundle.Settings.GetCatalogFileHandler
  nameWithType: Settings.GetCatalogFileHandler
- uid: TAssetBundle.Settings.GetCatalogSerializer
  name: GetCatalogSerializer()
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetCatalogSerializer
  commentId: M:TAssetBundle.Settings.GetCatalogSerializer
  fullName: TAssetBundle.Settings.GetCatalogSerializer()
  nameWithType: Settings.GetCatalogSerializer()
- uid: TAssetBundle.Settings.GetCatalogSerializer*
  name: GetCatalogSerializer
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetCatalogSerializer_
  commentId: Overload:TAssetBundle.Settings.GetCatalogSerializer
  isSpec: "True"
  fullName: TAssetBundle.Settings.GetCatalogSerializer
  nameWithType: Settings.GetCatalogSerializer
- uid: TAssetBundle.Settings.GetCryptoSerializer
  name: GetCryptoSerializer()
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetCryptoSerializer
  commentId: M:TAssetBundle.Settings.GetCryptoSerializer
  fullName: TAssetBundle.Settings.GetCryptoSerializer()
  nameWithType: Settings.GetCryptoSerializer()
- uid: TAssetBundle.Settings.GetCryptoSerializer*
  name: GetCryptoSerializer
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_GetCryptoSerializer_
  commentId: Overload:TAssetBundle.Settings.GetCryptoSerializer
  isSpec: "True"
  fullName: TAssetBundle.Settings.GetCryptoSerializer
  nameWithType: Settings.GetCryptoSerializer
- uid: TAssetBundle.Settings.assetBundleOutputPath
  name: assetBundleOutputPath
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_assetBundleOutputPath
  commentId: F:TAssetBundle.Settings.assetBundleOutputPath
  fullName: TAssetBundle.Settings.assetBundleOutputPath
  nameWithType: Settings.assetBundleOutputPath
- uid: TAssetBundle.Settings.autoTimeoutSeconds
  name: autoTimeoutSeconds
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_autoTimeoutSeconds
  commentId: F:TAssetBundle.Settings.autoTimeoutSeconds
  fullName: TAssetBundle.Settings.autoTimeoutSeconds
  nameWithType: Settings.autoTimeoutSeconds
- uid: TAssetBundle.Settings.build
  name: build
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_build
  commentId: F:TAssetBundle.Settings.build
  fullName: TAssetBundle.Settings.build
  nameWithType: Settings.build
- uid: TAssetBundle.Settings.buildIncludeAssetBundle
  name: buildIncludeAssetBundle
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_buildIncludeAssetBundle
  commentId: F:TAssetBundle.Settings.buildIncludeAssetBundle
  fullName: TAssetBundle.Settings.buildIncludeAssetBundle
  nameWithType: Settings.buildIncludeAssetBundle
- uid: TAssetBundle.Settings.buildIncludeCatalog
  name: buildIncludeCatalog
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_buildIncludeCatalog
  commentId: F:TAssetBundle.Settings.buildIncludeCatalog
  fullName: TAssetBundle.Settings.buildIncludeCatalog
  nameWithType: Settings.buildIncludeCatalog
- uid: TAssetBundle.Settings.buildNumber
  name: buildNumber
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_buildNumber
  commentId: F:TAssetBundle.Settings.buildNumber
  fullName: TAssetBundle.Settings.buildNumber
  nameWithType: Settings.buildNumber
- uid: TAssetBundle.Settings.buildTarget
  name: buildTarget
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_buildTarget
  commentId: F:TAssetBundle.Settings.buildTarget
  fullName: TAssetBundle.Settings.buildTarget
  nameWithType: Settings.buildTarget
- uid: TAssetBundle.Settings.builtinAssetBundlesUseSeparateFolder
  name: builtinAssetBundlesUseSeparateFolder
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_builtinAssetBundlesUseSeparateFolder
  commentId: F:TAssetBundle.Settings.builtinAssetBundlesUseSeparateFolder
  fullName: TAssetBundle.Settings.builtinAssetBundlesUseSeparateFolder
  nameWithType: Settings.builtinAssetBundlesUseSeparateFolder
- uid: TAssetBundle.Settings.catalogName
  name: catalogName
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_catalogName
  commentId: F:TAssetBundle.Settings.catalogName
  fullName: TAssetBundle.Settings.catalogName
  nameWithType: Settings.catalogName
- uid: TAssetBundle.Settings.customCatalogSerializer
  name: customCatalogSerializer
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_customCatalogSerializer
  commentId: F:TAssetBundle.Settings.customCatalogSerializer
  fullName: TAssetBundle.Settings.customCatalogSerializer
  nameWithType: Settings.customCatalogSerializer
- uid: TAssetBundle.Settings.customCryptoSerializer
  name: customCryptoSerializer
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_customCryptoSerializer
  commentId: F:TAssetBundle.Settings.customCryptoSerializer
  fullName: TAssetBundle.Settings.customCryptoSerializer
  nameWithType: Settings.customCryptoSerializer
- uid: TAssetBundle.Settings.defaultRemoteUrl
  name: defaultRemoteUrl
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_defaultRemoteUrl
  commentId: F:TAssetBundle.Settings.defaultRemoteUrl
  fullName: TAssetBundle.Settings.defaultRemoteUrl
  nameWithType: Settings.defaultRemoteUrl
- uid: TAssetBundle.Settings.enableDebuggingLog
  name: enableDebuggingLog
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_enableDebuggingLog
  commentId: F:TAssetBundle.Settings.enableDebuggingLog
  fullName: TAssetBundle.Settings.enableDebuggingLog
  nameWithType: Settings.enableDebuggingLog
- uid: TAssetBundle.Settings.maxConcurrentRequestCount
  name: maxConcurrentRequestCount
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_maxConcurrentRequestCount
  commentId: F:TAssetBundle.Settings.maxConcurrentRequestCount
  fullName: TAssetBundle.Settings.maxConcurrentRequestCount
  nameWithType: Settings.maxConcurrentRequestCount
- uid: TAssetBundle.Settings.maxRetryRequestCount
  name: maxRetryRequestCount
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_maxRetryRequestCount
  commentId: F:TAssetBundle.Settings.maxRetryRequestCount
  fullName: TAssetBundle.Settings.maxRetryRequestCount
  nameWithType: Settings.maxRetryRequestCount
- uid: TAssetBundle.Settings.retryRequestWaitDuration
  name: retryRequestWaitDuration
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_retryRequestWaitDuration
  commentId: F:TAssetBundle.Settings.retryRequestWaitDuration
  fullName: TAssetBundle.Settings.retryRequestWaitDuration
  nameWithType: Settings.retryRequestWaitDuration
- uid: TAssetBundle.Settings.useBuildCache
  name: useBuildCache
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_useBuildCache
  commentId: F:TAssetBundle.Settings.useBuildCache
  fullName: TAssetBundle.Settings.useBuildCache
  nameWithType: Settings.useBuildCache
- uid: TAssetBundle.Settings.useBuiltinAssetBundleLZ4Recompress
  name: useBuiltinAssetBundleLZ4Recompress
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_useBuiltinAssetBundleLZ4Recompress
  commentId: F:TAssetBundle.Settings.useBuiltinAssetBundleLZ4Recompress
  fullName: TAssetBundle.Settings.useBuiltinAssetBundleLZ4Recompress
  nameWithType: Settings.useBuiltinAssetBundleLZ4Recompress
- uid: TAssetBundle.Settings.useUnityRemoteAssetBundleProvider
  name: useUnityRemoteAssetBundleProvider
  href: api/TAssetBundle.Settings.html#TAssetBundle_Settings_useUnityRemoteAssetBundleProvider
  commentId: F:TAssetBundle.Settings.useUnityRemoteAssetBundleProvider
  fullName: TAssetBundle.Settings.useUnityRemoteAssetBundleProvider
  nameWithType: Settings.useUnityRemoteAssetBundleProvider
- uid: TAssetBundle.SpriteAssetRef
  name: SpriteAssetRef
  href: api/TAssetBundle.SpriteAssetRef.html
  commentId: T:TAssetBundle.SpriteAssetRef
  fullName: TAssetBundle.SpriteAssetRef
  nameWithType: SpriteAssetRef
- uid: TAssetBundle.TAssetBundles
  name: TAssetBundles
  href: api/TAssetBundle.TAssetBundles.html
  commentId: T:TAssetBundle.TAssetBundles
  fullName: TAssetBundle.TAssetBundles
  nameWithType: TAssetBundles
- uid: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync
  name: CheckCatalogUpdateAsync()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_CheckCatalogUpdateAsync
  commentId: M:TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync
  fullName: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync()
  nameWithType: TAssetBundles.CheckCatalogUpdateAsync()
- uid: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync(System.String)
  name: CheckCatalogUpdateAsync(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_CheckCatalogUpdateAsync_System_String_
  commentId: M:TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync(System.String)
  name.vb: CheckCatalogUpdateAsync(String)
  fullName: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync(string)
  fullName.vb: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync(String)
  nameWithType: TAssetBundles.CheckCatalogUpdateAsync(string)
  nameWithType.vb: TAssetBundles.CheckCatalogUpdateAsync(String)
- uid: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync*
  name: CheckCatalogUpdateAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_CheckCatalogUpdateAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.CheckCatalogUpdateAsync
  nameWithType: TAssetBundles.CheckCatalogUpdateAsync
- uid: TAssetBundle.TAssetBundles.DownloadAsync
  name: DownloadAsync()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadAsync
  commentId: M:TAssetBundle.TAssetBundles.DownloadAsync
  fullName: TAssetBundle.TAssetBundles.DownloadAsync()
  nameWithType: TAssetBundles.DownloadAsync()
- uid: TAssetBundle.TAssetBundles.DownloadAsync(System.String)
  name: DownloadAsync(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadAsync_System_String_
  commentId: M:TAssetBundle.TAssetBundles.DownloadAsync(System.String)
  name.vb: DownloadAsync(String)
  fullName: TAssetBundle.TAssetBundles.DownloadAsync(string)
  fullName.vb: TAssetBundle.TAssetBundles.DownloadAsync(String)
  nameWithType: TAssetBundles.DownloadAsync(string)
  nameWithType.vb: TAssetBundles.DownloadAsync(String)
- uid: TAssetBundle.TAssetBundles.DownloadAsync*
  name: DownloadAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.DownloadAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.DownloadAsync
  nameWithType: TAssetBundles.DownloadAsync
- uid: TAssetBundle.TAssetBundles.DownloadByAssetsAsync(System.String[])
  name: DownloadByAssetsAsync(string[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByAssetsAsync_System_String___
  commentId: M:TAssetBundle.TAssetBundles.DownloadByAssetsAsync(System.String[])
  name.vb: DownloadByAssetsAsync(String())
  fullName: TAssetBundle.TAssetBundles.DownloadByAssetsAsync(string[])
  fullName.vb: TAssetBundle.TAssetBundles.DownloadByAssetsAsync(String())
  nameWithType: TAssetBundles.DownloadByAssetsAsync(string[])
  nameWithType.vb: TAssetBundles.DownloadByAssetsAsync(String())
- uid: TAssetBundle.TAssetBundles.DownloadByAssetsAsync(TAssetBundle.AssetRef[])
  name: DownloadByAssetsAsync(AssetRef[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByAssetsAsync_TAssetBundle_AssetRef___
  commentId: M:TAssetBundle.TAssetBundles.DownloadByAssetsAsync(TAssetBundle.AssetRef[])
  name.vb: DownloadByAssetsAsync(AssetRef())
  fullName: TAssetBundle.TAssetBundles.DownloadByAssetsAsync(TAssetBundle.AssetRef[])
  fullName.vb: TAssetBundle.TAssetBundles.DownloadByAssetsAsync(TAssetBundle.AssetRef())
  nameWithType: TAssetBundles.DownloadByAssetsAsync(AssetRef[])
  nameWithType.vb: TAssetBundles.DownloadByAssetsAsync(AssetRef())
- uid: TAssetBundle.TAssetBundles.DownloadByAssetsAsync*
  name: DownloadByAssetsAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByAssetsAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.DownloadByAssetsAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.DownloadByAssetsAsync
  nameWithType: TAssetBundles.DownloadByAssetsAsync
- uid: TAssetBundle.TAssetBundles.DownloadByScenesAsync(System.String[])
  name: DownloadByScenesAsync(string[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByScenesAsync_System_String___
  commentId: M:TAssetBundle.TAssetBundles.DownloadByScenesAsync(System.String[])
  name.vb: DownloadByScenesAsync(String())
  fullName: TAssetBundle.TAssetBundles.DownloadByScenesAsync(string[])
  fullName.vb: TAssetBundle.TAssetBundles.DownloadByScenesAsync(String())
  nameWithType: TAssetBundles.DownloadByScenesAsync(string[])
  nameWithType.vb: TAssetBundles.DownloadByScenesAsync(String())
- uid: TAssetBundle.TAssetBundles.DownloadByScenesAsync(TAssetBundle.SceneAssetRef[])
  name: DownloadByScenesAsync(SceneAssetRef[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByScenesAsync_TAssetBundle_SceneAssetRef___
  commentId: M:TAssetBundle.TAssetBundles.DownloadByScenesAsync(TAssetBundle.SceneAssetRef[])
  name.vb: DownloadByScenesAsync(SceneAssetRef())
  fullName: TAssetBundle.TAssetBundles.DownloadByScenesAsync(TAssetBundle.SceneAssetRef[])
  fullName.vb: TAssetBundle.TAssetBundles.DownloadByScenesAsync(TAssetBundle.SceneAssetRef())
  nameWithType: TAssetBundles.DownloadByScenesAsync(SceneAssetRef[])
  nameWithType.vb: TAssetBundles.DownloadByScenesAsync(SceneAssetRef())
- uid: TAssetBundle.TAssetBundles.DownloadByScenesAsync*
  name: DownloadByScenesAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByScenesAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.DownloadByScenesAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.DownloadByScenesAsync
  nameWithType: TAssetBundles.DownloadByScenesAsync
- uid: TAssetBundle.TAssetBundles.DownloadByTagsAsync(System.String[])
  name: DownloadByTagsAsync(string[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByTagsAsync_System_String___
  commentId: M:TAssetBundle.TAssetBundles.DownloadByTagsAsync(System.String[])
  name.vb: DownloadByTagsAsync(String())
  fullName: TAssetBundle.TAssetBundles.DownloadByTagsAsync(string[])
  fullName.vb: TAssetBundle.TAssetBundles.DownloadByTagsAsync(String())
  nameWithType: TAssetBundles.DownloadByTagsAsync(string[])
  nameWithType.vb: TAssetBundles.DownloadByTagsAsync(String())
- uid: TAssetBundle.TAssetBundles.DownloadByTagsAsync*
  name: DownloadByTagsAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_DownloadByTagsAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.DownloadByTagsAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.DownloadByTagsAsync
  nameWithType: TAssetBundles.DownloadByTagsAsync
- uid: TAssetBundle.TAssetBundles.ExistAsset(System.String)
  name: ExistAsset(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_ExistAsset_System_String_
  commentId: M:TAssetBundle.TAssetBundles.ExistAsset(System.String)
  name.vb: ExistAsset(String)
  fullName: TAssetBundle.TAssetBundles.ExistAsset(string)
  fullName.vb: TAssetBundle.TAssetBundles.ExistAsset(String)
  nameWithType: TAssetBundles.ExistAsset(string)
  nameWithType.vb: TAssetBundles.ExistAsset(String)
- uid: TAssetBundle.TAssetBundles.ExistAsset(TAssetBundle.AssetRef)
  name: ExistAsset(AssetRef)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_ExistAsset_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.TAssetBundles.ExistAsset(TAssetBundle.AssetRef)
  fullName: TAssetBundle.TAssetBundles.ExistAsset(TAssetBundle.AssetRef)
  nameWithType: TAssetBundles.ExistAsset(AssetRef)
- uid: TAssetBundle.TAssetBundles.ExistAsset*
  name: ExistAsset
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_ExistAsset_
  commentId: Overload:TAssetBundle.TAssetBundles.ExistAsset
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.ExistAsset
  nameWithType: TAssetBundles.ExistAsset
- uid: TAssetBundle.TAssetBundles.ExistScene(System.String)
  name: ExistScene(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_ExistScene_System_String_
  commentId: M:TAssetBundle.TAssetBundles.ExistScene(System.String)
  name.vb: ExistScene(String)
  fullName: TAssetBundle.TAssetBundles.ExistScene(string)
  fullName.vb: TAssetBundle.TAssetBundles.ExistScene(String)
  nameWithType: TAssetBundles.ExistScene(string)
  nameWithType.vb: TAssetBundles.ExistScene(String)
- uid: TAssetBundle.TAssetBundles.ExistScene*
  name: ExistScene
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_ExistScene_
  commentId: Overload:TAssetBundle.TAssetBundles.ExistScene
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.ExistScene
  nameWithType: TAssetBundles.ExistScene
- uid: TAssetBundle.TAssetBundles.GetActiveAssetBundles
  name: GetActiveAssetBundles()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetActiveAssetBundles
  commentId: M:TAssetBundle.TAssetBundles.GetActiveAssetBundles
  fullName: TAssetBundle.TAssetBundles.GetActiveAssetBundles()
  nameWithType: TAssetBundles.GetActiveAssetBundles()
- uid: TAssetBundle.TAssetBundles.GetActiveAssetBundles*
  name: GetActiveAssetBundles
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetActiveAssetBundles_
  commentId: Overload:TAssetBundle.TAssetBundles.GetActiveAssetBundles
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetActiveAssetBundles
  nameWithType: TAssetBundles.GetActiveAssetBundles
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeAsync
  name: GetDownloadSizeAsync()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeAsync
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeAsync
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeAsync()
  nameWithType: TAssetBundles.GetDownloadSizeAsync()
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeAsync(System.String)
  name: GetDownloadSizeAsync(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeAsync_System_String_
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeAsync(System.String)
  name.vb: GetDownloadSizeAsync(String)
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeAsync(string)
  fullName.vb: TAssetBundle.TAssetBundles.GetDownloadSizeAsync(String)
  nameWithType: TAssetBundles.GetDownloadSizeAsync(string)
  nameWithType.vb: TAssetBundles.GetDownloadSizeAsync(String)
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeAsync*
  name: GetDownloadSizeAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.GetDownloadSizeAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeAsync
  nameWithType: TAssetBundles.GetDownloadSizeAsync
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(System.String[])
  name: GetDownloadSizeByAssetsAsync(string[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByAssetsAsync_System_String___
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(System.String[])
  name.vb: GetDownloadSizeByAssetsAsync(String())
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(string[])
  fullName.vb: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(String())
  nameWithType: TAssetBundles.GetDownloadSizeByAssetsAsync(string[])
  nameWithType.vb: TAssetBundles.GetDownloadSizeByAssetsAsync(String())
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef[])
  name: GetDownloadSizeByAssetsAsync(AssetRef[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByAssetsAsync_TAssetBundle_AssetRef___
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef[])
  name.vb: GetDownloadSizeByAssetsAsync(AssetRef())
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef[])
  fullName.vb: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync(TAssetBundle.AssetRef())
  nameWithType: TAssetBundles.GetDownloadSizeByAssetsAsync(AssetRef[])
  nameWithType.vb: TAssetBundles.GetDownloadSizeByAssetsAsync(AssetRef())
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync*
  name: GetDownloadSizeByAssetsAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByAssetsAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByAssetsAsync
  nameWithType: TAssetBundles.GetDownloadSizeByAssetsAsync
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(System.String[])
  name: GetDownloadSizeByScenesAsync(string[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByScenesAsync_System_String___
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(System.String[])
  name.vb: GetDownloadSizeByScenesAsync(String())
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(string[])
  fullName.vb: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(String())
  nameWithType: TAssetBundles.GetDownloadSizeByScenesAsync(string[])
  nameWithType.vb: TAssetBundles.GetDownloadSizeByScenesAsync(String())
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef[])
  name: GetDownloadSizeByScenesAsync(SceneAssetRef[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByScenesAsync_TAssetBundle_SceneAssetRef___
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef[])
  name.vb: GetDownloadSizeByScenesAsync(SceneAssetRef())
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef[])
  fullName.vb: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync(TAssetBundle.SceneAssetRef())
  nameWithType: TAssetBundles.GetDownloadSizeByScenesAsync(SceneAssetRef[])
  nameWithType.vb: TAssetBundles.GetDownloadSizeByScenesAsync(SceneAssetRef())
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync*
  name: GetDownloadSizeByScenesAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByScenesAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByScenesAsync
  nameWithType: TAssetBundles.GetDownloadSizeByScenesAsync
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync(System.String[])
  name: GetDownloadSizeByTagsAsync(string[])
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByTagsAsync_System_String___
  commentId: M:TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync(System.String[])
  name.vb: GetDownloadSizeByTagsAsync(String())
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync(string[])
  fullName.vb: TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync(String())
  nameWithType: TAssetBundles.GetDownloadSizeByTagsAsync(string[])
  nameWithType.vb: TAssetBundles.GetDownloadSizeByTagsAsync(String())
- uid: TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync*
  name: GetDownloadSizeByTagsAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetDownloadSizeByTagsAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetDownloadSizeByTagsAsync
  nameWithType: TAssetBundles.GetDownloadSizeByTagsAsync
- uid: TAssetBundle.TAssetBundles.GetLastWebRequestError
  name: GetLastWebRequestError()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetLastWebRequestError
  commentId: M:TAssetBundle.TAssetBundles.GetLastWebRequestError
  fullName: TAssetBundle.TAssetBundles.GetLastWebRequestError()
  nameWithType: TAssetBundles.GetLastWebRequestError()
- uid: TAssetBundle.TAssetBundles.GetLastWebRequestError*
  name: GetLastWebRequestError
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetLastWebRequestError_
  commentId: Overload:TAssetBundle.TAssetBundles.GetLastWebRequestError
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetLastWebRequestError
  nameWithType: TAssetBundles.GetLastWebRequestError
- uid: TAssetBundle.TAssetBundles.GetLoadedAssets
  name: GetLoadedAssets()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetLoadedAssets
  commentId: M:TAssetBundle.TAssetBundles.GetLoadedAssets
  fullName: TAssetBundle.TAssetBundles.GetLoadedAssets()
  nameWithType: TAssetBundles.GetLoadedAssets()
- uid: TAssetBundle.TAssetBundles.GetLoadedAssets*
  name: GetLoadedAssets
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_GetLoadedAssets_
  commentId: Overload:TAssetBundle.TAssetBundles.GetLoadedAssets
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.GetLoadedAssets
  nameWithType: TAssetBundles.GetLoadedAssets
- uid: TAssetBundle.TAssetBundles.InitializeAsync
  name: InitializeAsync()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_InitializeAsync
  commentId: M:TAssetBundle.TAssetBundles.InitializeAsync
  fullName: TAssetBundle.TAssetBundles.InitializeAsync()
  nameWithType: TAssetBundles.InitializeAsync()
- uid: TAssetBundle.TAssetBundles.InitializeAsync*
  name: InitializeAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_InitializeAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.InitializeAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.InitializeAsync
  nameWithType: TAssetBundles.InitializeAsync
- uid: TAssetBundle.TAssetBundles.IsLoadedAsset(System.String)
  name: IsLoadedAsset(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_IsLoadedAsset_System_String_
  commentId: M:TAssetBundle.TAssetBundles.IsLoadedAsset(System.String)
  name.vb: IsLoadedAsset(String)
  fullName: TAssetBundle.TAssetBundles.IsLoadedAsset(string)
  fullName.vb: TAssetBundle.TAssetBundles.IsLoadedAsset(String)
  nameWithType: TAssetBundles.IsLoadedAsset(string)
  nameWithType.vb: TAssetBundles.IsLoadedAsset(String)
- uid: TAssetBundle.TAssetBundles.IsLoadedAsset(TAssetBundle.AssetRef)
  name: IsLoadedAsset(AssetRef)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_IsLoadedAsset_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.TAssetBundles.IsLoadedAsset(TAssetBundle.AssetRef)
  fullName: TAssetBundle.TAssetBundles.IsLoadedAsset(TAssetBundle.AssetRef)
  nameWithType: TAssetBundles.IsLoadedAsset(AssetRef)
- uid: TAssetBundle.TAssetBundles.IsLoadedAsset*
  name: IsLoadedAsset
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_IsLoadedAsset_
  commentId: Overload:TAssetBundle.TAssetBundles.IsLoadedAsset
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.IsLoadedAsset
  nameWithType: TAssetBundles.IsLoadedAsset
- uid: TAssetBundle.TAssetBundles.LoadAssetAsync*
  name: LoadAssetAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadAssetAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.LoadAssetAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.LoadAssetAsync
  nameWithType: TAssetBundles.LoadAssetAsync
- uid: TAssetBundle.TAssetBundles.LoadAssetAsync``1(System.String)
  name: LoadAssetAsync<T>(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadAssetAsync__1_System_String_
  commentId: M:TAssetBundle.TAssetBundles.LoadAssetAsync``1(System.String)
  name.vb: LoadAssetAsync(Of T)(String)
  fullName: TAssetBundle.TAssetBundles.LoadAssetAsync<T>(string)
  fullName.vb: TAssetBundle.TAssetBundles.LoadAssetAsync(Of T)(String)
  nameWithType: TAssetBundles.LoadAssetAsync<T>(string)
  nameWithType.vb: TAssetBundles.LoadAssetAsync(Of T)(String)
- uid: TAssetBundle.TAssetBundles.LoadAssetAsync``1(TAssetBundle.AssetRef)
  name: LoadAssetAsync<T>(AssetRef)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadAssetAsync__1_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.TAssetBundles.LoadAssetAsync``1(TAssetBundle.AssetRef)
  name.vb: LoadAssetAsync(Of T)(AssetRef)
  fullName: TAssetBundle.TAssetBundles.LoadAssetAsync<T>(TAssetBundle.AssetRef)
  fullName.vb: TAssetBundle.TAssetBundles.LoadAssetAsync(Of T)(TAssetBundle.AssetRef)
  nameWithType: TAssetBundles.LoadAssetAsync<T>(AssetRef)
  nameWithType.vb: TAssetBundles.LoadAssetAsync(Of T)(AssetRef)
- uid: TAssetBundle.TAssetBundles.LoadCatalogInfoAsync(System.String)
  name: LoadCatalogInfoAsync(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadCatalogInfoAsync_System_String_
  commentId: M:TAssetBundle.TAssetBundles.LoadCatalogInfoAsync(System.String)
  name.vb: LoadCatalogInfoAsync(String)
  fullName: TAssetBundle.TAssetBundles.LoadCatalogInfoAsync(string)
  fullName.vb: TAssetBundle.TAssetBundles.LoadCatalogInfoAsync(String)
  nameWithType: TAssetBundles.LoadCatalogInfoAsync(string)
  nameWithType.vb: TAssetBundles.LoadCatalogInfoAsync(String)
- uid: TAssetBundle.TAssetBundles.LoadCatalogInfoAsync*
  name: LoadCatalogInfoAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadCatalogInfoAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.LoadCatalogInfoAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.LoadCatalogInfoAsync
  nameWithType: TAssetBundles.LoadCatalogInfoAsync
- uid: TAssetBundle.TAssetBundles.LoadSceneAsync(System.String,UnityEngine.SceneManagement.LoadSceneMode)
  name: LoadSceneAsync(string, LoadSceneMode)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadSceneAsync_System_String_UnityEngine_SceneManagement_LoadSceneMode_
  commentId: M:TAssetBundle.TAssetBundles.LoadSceneAsync(System.String,UnityEngine.SceneManagement.LoadSceneMode)
  name.vb: LoadSceneAsync(String, LoadSceneMode)
  fullName: TAssetBundle.TAssetBundles.LoadSceneAsync(string, UnityEngine.SceneManagement.LoadSceneMode)
  fullName.vb: TAssetBundle.TAssetBundles.LoadSceneAsync(String, UnityEngine.SceneManagement.LoadSceneMode)
  nameWithType: TAssetBundles.LoadSceneAsync(string, LoadSceneMode)
  nameWithType.vb: TAssetBundles.LoadSceneAsync(String, LoadSceneMode)
- uid: TAssetBundle.TAssetBundles.LoadSceneAsync(TAssetBundle.LoadSceneInfo)
  name: LoadSceneAsync(LoadSceneInfo)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadSceneAsync_TAssetBundle_LoadSceneInfo_
  commentId: M:TAssetBundle.TAssetBundles.LoadSceneAsync(TAssetBundle.LoadSceneInfo)
  fullName: TAssetBundle.TAssetBundles.LoadSceneAsync(TAssetBundle.LoadSceneInfo)
  nameWithType: TAssetBundles.LoadSceneAsync(LoadSceneInfo)
- uid: TAssetBundle.TAssetBundles.LoadSceneAsync(TAssetBundle.SceneAssetRef,UnityEngine.SceneManagement.LoadSceneMode)
  name: LoadSceneAsync(SceneAssetRef, LoadSceneMode)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadSceneAsync_TAssetBundle_SceneAssetRef_UnityEngine_SceneManagement_LoadSceneMode_
  commentId: M:TAssetBundle.TAssetBundles.LoadSceneAsync(TAssetBundle.SceneAssetRef,UnityEngine.SceneManagement.LoadSceneMode)
  fullName: TAssetBundle.TAssetBundles.LoadSceneAsync(TAssetBundle.SceneAssetRef, UnityEngine.SceneManagement.LoadSceneMode)
  nameWithType: TAssetBundles.LoadSceneAsync(SceneAssetRef, LoadSceneMode)
- uid: TAssetBundle.TAssetBundles.LoadSceneAsync*
  name: LoadSceneAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_LoadSceneAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.LoadSceneAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.LoadSceneAsync
  nameWithType: TAssetBundles.LoadSceneAsync
- uid: TAssetBundle.TAssetBundles.SetAssetCatalogComparer(TAssetBundle.IAssetCatalogComparer)
  name: SetAssetCatalogComparer(IAssetCatalogComparer)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetAssetCatalogComparer_TAssetBundle_IAssetCatalogComparer_
  commentId: M:TAssetBundle.TAssetBundles.SetAssetCatalogComparer(TAssetBundle.IAssetCatalogComparer)
  fullName: TAssetBundle.TAssetBundles.SetAssetCatalogComparer(TAssetBundle.IAssetCatalogComparer)
  nameWithType: TAssetBundles.SetAssetCatalogComparer(IAssetCatalogComparer)
- uid: TAssetBundle.TAssetBundles.SetAssetCatalogComparer*
  name: SetAssetCatalogComparer
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetAssetCatalogComparer_
  commentId: Overload:TAssetBundle.TAssetBundles.SetAssetCatalogComparer
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.SetAssetCatalogComparer
  nameWithType: TAssetBundles.SetAssetCatalogComparer
- uid: TAssetBundle.TAssetBundles.SetRemoteUrl(System.String)
  name: SetRemoteUrl(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetRemoteUrl_System_String_
  commentId: M:TAssetBundle.TAssetBundles.SetRemoteUrl(System.String)
  name.vb: SetRemoteUrl(String)
  fullName: TAssetBundle.TAssetBundles.SetRemoteUrl(string)
  fullName.vb: TAssetBundle.TAssetBundles.SetRemoteUrl(String)
  nameWithType: TAssetBundles.SetRemoteUrl(string)
  nameWithType.vb: TAssetBundles.SetRemoteUrl(String)
- uid: TAssetBundle.TAssetBundles.SetRemoteUrl*
  name: SetRemoteUrl
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetRemoteUrl_
  commentId: Overload:TAssetBundle.TAssetBundles.SetRemoteUrl
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.SetRemoteUrl
  nameWithType: TAssetBundles.SetRemoteUrl
- uid: TAssetBundle.TAssetBundles.SetTagComparer(TAssetBundle.ITagComparer)
  name: SetTagComparer(ITagComparer)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetTagComparer_TAssetBundle_ITagComparer_
  commentId: M:TAssetBundle.TAssetBundles.SetTagComparer(TAssetBundle.ITagComparer)
  fullName: TAssetBundle.TAssetBundles.SetTagComparer(TAssetBundle.ITagComparer)
  nameWithType: TAssetBundles.SetTagComparer(ITagComparer)
- uid: TAssetBundle.TAssetBundles.SetTagComparer*
  name: SetTagComparer
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetTagComparer_
  commentId: Overload:TAssetBundle.TAssetBundles.SetTagComparer
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.SetTagComparer
  nameWithType: TAssetBundles.SetTagComparer
- uid: TAssetBundle.TAssetBundles.SetWebRequestBeforeSendCallback(TAssetBundle.WebRequestCallback)
  name: SetWebRequestBeforeSendCallback(WebRequestCallback)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetWebRequestBeforeSendCallback_TAssetBundle_WebRequestCallback_
  commentId: M:TAssetBundle.TAssetBundles.SetWebRequestBeforeSendCallback(TAssetBundle.WebRequestCallback)
  fullName: TAssetBundle.TAssetBundles.SetWebRequestBeforeSendCallback(TAssetBundle.WebRequestCallback)
  nameWithType: TAssetBundles.SetWebRequestBeforeSendCallback(WebRequestCallback)
- uid: TAssetBundle.TAssetBundles.SetWebRequestBeforeSendCallback*
  name: SetWebRequestBeforeSendCallback
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetWebRequestBeforeSendCallback_
  commentId: Overload:TAssetBundle.TAssetBundles.SetWebRequestBeforeSendCallback
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.SetWebRequestBeforeSendCallback
  nameWithType: TAssetBundles.SetWebRequestBeforeSendCallback
- uid: TAssetBundle.TAssetBundles.SetWebRequestResultCallback(TAssetBundle.WebRequestCallback)
  name: SetWebRequestResultCallback(WebRequestCallback)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetWebRequestResultCallback_TAssetBundle_WebRequestCallback_
  commentId: M:TAssetBundle.TAssetBundles.SetWebRequestResultCallback(TAssetBundle.WebRequestCallback)
  fullName: TAssetBundle.TAssetBundles.SetWebRequestResultCallback(TAssetBundle.WebRequestCallback)
  nameWithType: TAssetBundles.SetWebRequestResultCallback(WebRequestCallback)
- uid: TAssetBundle.TAssetBundles.SetWebRequestResultCallback*
  name: SetWebRequestResultCallback
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_SetWebRequestResultCallback_
  commentId: Overload:TAssetBundle.TAssetBundles.SetWebRequestResultCallback
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.SetWebRequestResultCallback
  nameWithType: TAssetBundles.SetWebRequestResultCallback
- uid: TAssetBundle.TAssetBundles.Settings
  name: Settings
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_Settings
  commentId: P:TAssetBundle.TAssetBundles.Settings
  fullName: TAssetBundle.TAssetBundles.Settings
  nameWithType: TAssetBundles.Settings
- uid: TAssetBundle.TAssetBundles.Settings*
  name: Settings
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_Settings_
  commentId: Overload:TAssetBundle.TAssetBundles.Settings
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.Settings
  nameWithType: TAssetBundles.Settings
- uid: TAssetBundle.TAssetBundles.UnloadAll
  name: UnloadAll()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UnloadAll
  commentId: M:TAssetBundle.TAssetBundles.UnloadAll
  fullName: TAssetBundle.TAssetBundles.UnloadAll()
  nameWithType: TAssetBundles.UnloadAll()
- uid: TAssetBundle.TAssetBundles.UnloadAll*
  name: UnloadAll
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UnloadAll_
  commentId: Overload:TAssetBundle.TAssetBundles.UnloadAll
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.UnloadAll
  nameWithType: TAssetBundles.UnloadAll
- uid: TAssetBundle.TAssetBundles.UnloadAsset(System.String)
  name: UnloadAsset(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UnloadAsset_System_String_
  commentId: M:TAssetBundle.TAssetBundles.UnloadAsset(System.String)
  name.vb: UnloadAsset(String)
  fullName: TAssetBundle.TAssetBundles.UnloadAsset(string)
  fullName.vb: TAssetBundle.TAssetBundles.UnloadAsset(String)
  nameWithType: TAssetBundles.UnloadAsset(string)
  nameWithType.vb: TAssetBundles.UnloadAsset(String)
- uid: TAssetBundle.TAssetBundles.UnloadAsset(TAssetBundle.AssetHandle)
  name: UnloadAsset(AssetHandle)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UnloadAsset_TAssetBundle_AssetHandle_
  commentId: M:TAssetBundle.TAssetBundles.UnloadAsset(TAssetBundle.AssetHandle)
  fullName: TAssetBundle.TAssetBundles.UnloadAsset(TAssetBundle.AssetHandle)
  nameWithType: TAssetBundles.UnloadAsset(AssetHandle)
- uid: TAssetBundle.TAssetBundles.UnloadAsset(TAssetBundle.AssetRef)
  name: UnloadAsset(AssetRef)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UnloadAsset_TAssetBundle_AssetRef_
  commentId: M:TAssetBundle.TAssetBundles.UnloadAsset(TAssetBundle.AssetRef)
  fullName: TAssetBundle.TAssetBundles.UnloadAsset(TAssetBundle.AssetRef)
  nameWithType: TAssetBundles.UnloadAsset(AssetRef)
- uid: TAssetBundle.TAssetBundles.UnloadAsset*
  name: UnloadAsset
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UnloadAsset_
  commentId: Overload:TAssetBundle.TAssetBundles.UnloadAsset
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.UnloadAsset
  nameWithType: TAssetBundles.UnloadAsset
- uid: TAssetBundle.TAssetBundles.UpdateCatalogAsync
  name: UpdateCatalogAsync()
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UpdateCatalogAsync
  commentId: M:TAssetBundle.TAssetBundles.UpdateCatalogAsync
  fullName: TAssetBundle.TAssetBundles.UpdateCatalogAsync()
  nameWithType: TAssetBundles.UpdateCatalogAsync()
- uid: TAssetBundle.TAssetBundles.UpdateCatalogAsync(System.String)
  name: UpdateCatalogAsync(string)
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UpdateCatalogAsync_System_String_
  commentId: M:TAssetBundle.TAssetBundles.UpdateCatalogAsync(System.String)
  name.vb: UpdateCatalogAsync(String)
  fullName: TAssetBundle.TAssetBundles.UpdateCatalogAsync(string)
  fullName.vb: TAssetBundle.TAssetBundles.UpdateCatalogAsync(String)
  nameWithType: TAssetBundles.UpdateCatalogAsync(string)
  nameWithType.vb: TAssetBundles.UpdateCatalogAsync(String)
- uid: TAssetBundle.TAssetBundles.UpdateCatalogAsync*
  name: UpdateCatalogAsync
  href: api/TAssetBundle.TAssetBundles.html#TAssetBundle_TAssetBundles_UpdateCatalogAsync_
  commentId: Overload:TAssetBundle.TAssetBundles.UpdateCatalogAsync
  isSpec: "True"
  fullName: TAssetBundle.TAssetBundles.UpdateCatalogAsync
  nameWithType: TAssetBundles.UpdateCatalogAsync
- uid: TAssetBundle.TAsyncOperation
  name: TAsyncOperation
  href: api/TAssetBundle.TAsyncOperation.html
  commentId: T:TAssetBundle.TAsyncOperation
  fullName: TAssetBundle.TAsyncOperation
  nameWithType: TAsyncOperation
- uid: TAssetBundle.TAsyncOperation.Clear
  name: Clear()
  href: api/TAssetBundle.TAsyncOperation.html#TAssetBundle_TAsyncOperation_Clear
  commentId: M:TAssetBundle.TAsyncOperation.Clear
  fullName: TAssetBundle.TAsyncOperation.Clear()
  nameWithType: TAsyncOperation.Clear()
- uid: TAssetBundle.TAsyncOperation.Clear*
  name: Clear
  href: api/TAssetBundle.TAsyncOperation.html#TAssetBundle_TAsyncOperation_Clear_
  commentId: Overload:TAssetBundle.TAsyncOperation.Clear
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperation.Clear
  nameWithType: TAsyncOperation.Clear
- uid: TAssetBundle.TAsyncOperation.OnComplete
  name: OnComplete
  href: api/TAssetBundle.TAsyncOperation.html#TAssetBundle_TAsyncOperation_OnComplete
  commentId: E:TAssetBundle.TAsyncOperation.OnComplete
  fullName: TAssetBundle.TAsyncOperation.OnComplete
  nameWithType: TAsyncOperation.OnComplete
- uid: TAssetBundle.TAsyncOperationBase
  name: TAsyncOperationBase
  href: api/TAssetBundle.TAsyncOperationBase.html
  commentId: T:TAssetBundle.TAsyncOperationBase
  fullName: TAssetBundle.TAsyncOperationBase
  nameWithType: TAsyncOperationBase
- uid: TAssetBundle.TAsyncOperationBase.#ctor
  name: TAsyncOperationBase()
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase__ctor
  commentId: M:TAssetBundle.TAsyncOperationBase.#ctor
  name.vb: New()
  fullName: TAssetBundle.TAsyncOperationBase.TAsyncOperationBase()
  fullName.vb: TAssetBundle.TAsyncOperationBase.New()
  nameWithType: TAsyncOperationBase.TAsyncOperationBase()
  nameWithType.vb: TAsyncOperationBase.New()
- uid: TAssetBundle.TAsyncOperationBase.#ctor*
  name: TAsyncOperationBase
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase__ctor_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TAssetBundle.TAsyncOperationBase.TAsyncOperationBase
  fullName.vb: TAssetBundle.TAsyncOperationBase.New
  nameWithType: TAsyncOperationBase.TAsyncOperationBase
  nameWithType.vb: TAsyncOperationBase.New
- uid: TAssetBundle.TAsyncOperationBase.Clear
  name: Clear()
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Clear
  commentId: M:TAssetBundle.TAsyncOperationBase.Clear
  fullName: TAssetBundle.TAsyncOperationBase.Clear()
  nameWithType: TAsyncOperationBase.Clear()
- uid: TAssetBundle.TAsyncOperationBase.Clear*
  name: Clear
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Clear_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.Clear
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.Clear
  nameWithType: TAsyncOperationBase.Clear
- uid: TAssetBundle.TAsyncOperationBase.Current
  name: Current
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Current
  commentId: P:TAssetBundle.TAsyncOperationBase.Current
  fullName: TAssetBundle.TAsyncOperationBase.Current
  nameWithType: TAsyncOperationBase.Current
- uid: TAssetBundle.TAsyncOperationBase.Current*
  name: Current
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Current_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.Current
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.Current
  nameWithType: TAsyncOperationBase.Current
- uid: TAssetBundle.TAsyncOperationBase.GetProgress
  name: GetProgress()
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_GetProgress
  commentId: M:TAssetBundle.TAsyncOperationBase.GetProgress
  fullName: TAssetBundle.TAsyncOperationBase.GetProgress()
  nameWithType: TAsyncOperationBase.GetProgress()
- uid: TAssetBundle.TAsyncOperationBase.GetProgress*
  name: GetProgress
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_GetProgress_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.GetProgress
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.GetProgress
  nameWithType: TAsyncOperationBase.GetProgress
- uid: TAssetBundle.TAsyncOperationBase.IsDone
  name: IsDone
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_IsDone
  commentId: P:TAssetBundle.TAsyncOperationBase.IsDone
  fullName: TAssetBundle.TAsyncOperationBase.IsDone
  nameWithType: TAsyncOperationBase.IsDone
- uid: TAssetBundle.TAsyncOperationBase.IsDone*
  name: IsDone
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_IsDone_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.IsDone
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.IsDone
  nameWithType: TAsyncOperationBase.IsDone
- uid: TAssetBundle.TAsyncOperationBase.MoveNext
  name: MoveNext()
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_MoveNext
  commentId: M:TAssetBundle.TAsyncOperationBase.MoveNext
  fullName: TAssetBundle.TAsyncOperationBase.MoveNext()
  nameWithType: TAsyncOperationBase.MoveNext()
- uid: TAssetBundle.TAsyncOperationBase.MoveNext*
  name: MoveNext
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_MoveNext_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.MoveNext
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.MoveNext
  nameWithType: TAsyncOperationBase.MoveNext
- uid: TAssetBundle.TAsyncOperationBase.OnComplete
  name: OnComplete
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_OnComplete
  commentId: E:TAssetBundle.TAsyncOperationBase.OnComplete
  fullName: TAssetBundle.TAsyncOperationBase.OnComplete
  nameWithType: TAsyncOperationBase.OnComplete
- uid: TAssetBundle.TAsyncOperationBase.Pool
  name: Pool
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Pool
  commentId: P:TAssetBundle.TAsyncOperationBase.Pool
  fullName: TAssetBundle.TAsyncOperationBase.Pool
  nameWithType: TAsyncOperationBase.Pool
- uid: TAssetBundle.TAsyncOperationBase.Pool*
  name: Pool
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Pool_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.Pool
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.Pool
  nameWithType: TAsyncOperationBase.Pool
- uid: TAssetBundle.TAsyncOperationBase.Progress
  name: Progress
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Progress
  commentId: P:TAssetBundle.TAsyncOperationBase.Progress
  fullName: TAssetBundle.TAsyncOperationBase.Progress
  nameWithType: TAsyncOperationBase.Progress
- uid: TAssetBundle.TAsyncOperationBase.Progress*
  name: Progress
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Progress_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.Progress
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.Progress
  nameWithType: TAsyncOperationBase.Progress
- uid: TAssetBundle.TAsyncOperationBase.Reset
  name: Reset()
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Reset
  commentId: M:TAssetBundle.TAsyncOperationBase.Reset
  fullName: TAssetBundle.TAsyncOperationBase.Reset()
  nameWithType: TAsyncOperationBase.Reset()
- uid: TAssetBundle.TAsyncOperationBase.Reset*
  name: Reset
  href: api/TAssetBundle.TAsyncOperationBase.html#TAssetBundle_TAsyncOperationBase_Reset_
  commentId: Overload:TAssetBundle.TAsyncOperationBase.Reset
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationBase.Reset
  nameWithType: TAsyncOperationBase.Reset
- uid: TAssetBundle.TAsyncOperationExtensions
  name: TAsyncOperationExtensions
  href: api/TAssetBundle.TAsyncOperationExtensions.html
  commentId: T:TAssetBundle.TAsyncOperationExtensions
  fullName: TAssetBundle.TAsyncOperationExtensions
  nameWithType: TAsyncOperationExtensions
- uid: TAssetBundle.TAsyncOperationExtensions.ToTask(TAssetBundle.TAsyncOperationBase)
  name: ToTask(TAsyncOperationBase)
  href: api/TAssetBundle.TAsyncOperationExtensions.html#TAssetBundle_TAsyncOperationExtensions_ToTask_TAssetBundle_TAsyncOperationBase_
  commentId: M:TAssetBundle.TAsyncOperationExtensions.ToTask(TAssetBundle.TAsyncOperationBase)
  fullName: TAssetBundle.TAsyncOperationExtensions.ToTask(TAssetBundle.TAsyncOperationBase)
  nameWithType: TAsyncOperationExtensions.ToTask(TAsyncOperationBase)
- uid: TAssetBundle.TAsyncOperationExtensions.ToTask*
  name: ToTask
  href: api/TAssetBundle.TAsyncOperationExtensions.html#TAssetBundle_TAsyncOperationExtensions_ToTask_
  commentId: Overload:TAssetBundle.TAsyncOperationExtensions.ToTask
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationExtensions.ToTask
  nameWithType: TAsyncOperationExtensions.ToTask
- uid: TAssetBundle.TAsyncOperationExtensions.ToTask``1(TAssetBundle.TAsyncOperationProgress{``0})
  name: ToTask<T>(TAsyncOperationProgress<T>)
  href: api/TAssetBundle.TAsyncOperationExtensions.html#TAssetBundle_TAsyncOperationExtensions_ToTask__1_TAssetBundle_TAsyncOperationProgress___0__
  commentId: M:TAssetBundle.TAsyncOperationExtensions.ToTask``1(TAssetBundle.TAsyncOperationProgress{``0})
  name.vb: ToTask(Of T)(TAsyncOperationProgress(Of T))
  fullName: TAssetBundle.TAsyncOperationExtensions.ToTask<T>(TAssetBundle.TAsyncOperationProgress<T>)
  fullName.vb: TAssetBundle.TAsyncOperationExtensions.ToTask(Of T)(TAssetBundle.TAsyncOperationProgress(Of T))
  nameWithType: TAsyncOperationExtensions.ToTask<T>(TAsyncOperationProgress<T>)
  nameWithType.vb: TAsyncOperationExtensions.ToTask(Of T)(TAsyncOperationProgress(Of T))
- uid: TAssetBundle.TAsyncOperationExtensions.ToTask``1(TAssetBundle.TAsyncOperation{``0})
  name: ToTask<T>(TAsyncOperation<T>)
  href: api/TAssetBundle.TAsyncOperationExtensions.html#TAssetBundle_TAsyncOperationExtensions_ToTask__1_TAssetBundle_TAsyncOperation___0__
  commentId: M:TAssetBundle.TAsyncOperationExtensions.ToTask``1(TAssetBundle.TAsyncOperation{``0})
  name.vb: ToTask(Of T)(TAsyncOperation(Of T))
  fullName: TAssetBundle.TAsyncOperationExtensions.ToTask<T>(TAssetBundle.TAsyncOperation<T>)
  fullName.vb: TAssetBundle.TAsyncOperationExtensions.ToTask(Of T)(TAssetBundle.TAsyncOperation(Of T))
  nameWithType: TAsyncOperationExtensions.ToTask<T>(TAsyncOperation<T>)
  nameWithType.vb: TAsyncOperationExtensions.ToTask(Of T)(TAsyncOperation(Of T))
- uid: TAssetBundle.TAsyncOperationExtensions.WaitForCompletion(System.Threading.Tasks.Task)
  name: WaitForCompletion(Task)
  href: api/TAssetBundle.TAsyncOperationExtensions.html#TAssetBundle_TAsyncOperationExtensions_WaitForCompletion_System_Threading_Tasks_Task_
  commentId: M:TAssetBundle.TAsyncOperationExtensions.WaitForCompletion(System.Threading.Tasks.Task)
  fullName: TAssetBundle.TAsyncOperationExtensions.WaitForCompletion(System.Threading.Tasks.Task)
  nameWithType: TAsyncOperationExtensions.WaitForCompletion(Task)
- uid: TAssetBundle.TAsyncOperationExtensions.WaitForCompletion*
  name: WaitForCompletion
  href: api/TAssetBundle.TAsyncOperationExtensions.html#TAssetBundle_TAsyncOperationExtensions_WaitForCompletion_
  commentId: Overload:TAssetBundle.TAsyncOperationExtensions.WaitForCompletion
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationExtensions.WaitForCompletion
  nameWithType: TAsyncOperationExtensions.WaitForCompletion
- uid: TAssetBundle.TAsyncOperationProgress`1
  name: TAsyncOperationProgress<ResultType>
  href: api/TAssetBundle.TAsyncOperationProgress-1.html
  commentId: T:TAssetBundle.TAsyncOperationProgress`1
  name.vb: TAsyncOperationProgress(Of ResultType)
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType)
  nameWithType: TAsyncOperationProgress<ResultType>
  nameWithType.vb: TAsyncOperationProgress(Of ResultType)
- uid: TAssetBundle.TAsyncOperationProgress`1.Clear
  name: Clear()
  href: api/TAssetBundle.TAsyncOperationProgress-1.html#TAssetBundle_TAsyncOperationProgress_1_Clear
  commentId: M:TAssetBundle.TAsyncOperationProgress`1.Clear
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>.Clear()
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType).Clear()
  nameWithType: TAsyncOperationProgress<ResultType>.Clear()
  nameWithType.vb: TAsyncOperationProgress(Of ResultType).Clear()
- uid: TAssetBundle.TAsyncOperationProgress`1.Clear*
  name: Clear
  href: api/TAssetBundle.TAsyncOperationProgress-1.html#TAssetBundle_TAsyncOperationProgress_1_Clear_
  commentId: Overload:TAssetBundle.TAsyncOperationProgress`1.Clear
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>.Clear
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType).Clear
  nameWithType: TAsyncOperationProgress<ResultType>.Clear
  nameWithType.vb: TAsyncOperationProgress(Of ResultType).Clear
- uid: TAssetBundle.TAsyncOperationProgress`1.OnComplete
  name: OnComplete
  href: api/TAssetBundle.TAsyncOperationProgress-1.html#TAssetBundle_TAsyncOperationProgress_1_OnComplete
  commentId: E:TAssetBundle.TAsyncOperationProgress`1.OnComplete
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>.OnComplete
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType).OnComplete
  nameWithType: TAsyncOperationProgress<ResultType>.OnComplete
  nameWithType.vb: TAsyncOperationProgress(Of ResultType).OnComplete
- uid: TAssetBundle.TAsyncOperationProgress`1.OnProgress
  name: OnProgress
  href: api/TAssetBundle.TAsyncOperationProgress-1.html#TAssetBundle_TAsyncOperationProgress_1_OnProgress
  commentId: E:TAssetBundle.TAsyncOperationProgress`1.OnProgress
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>.OnProgress
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType).OnProgress
  nameWithType: TAsyncOperationProgress<ResultType>.OnProgress
  nameWithType.vb: TAsyncOperationProgress(Of ResultType).OnProgress
- uid: TAssetBundle.TAsyncOperationProgress`1.Result
  name: Result
  href: api/TAssetBundle.TAsyncOperationProgress-1.html#TAssetBundle_TAsyncOperationProgress_1_Result
  commentId: P:TAssetBundle.TAsyncOperationProgress`1.Result
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>.Result
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType).Result
  nameWithType: TAsyncOperationProgress<ResultType>.Result
  nameWithType.vb: TAsyncOperationProgress(Of ResultType).Result
- uid: TAssetBundle.TAsyncOperationProgress`1.Result*
  name: Result
  href: api/TAssetBundle.TAsyncOperationProgress-1.html#TAssetBundle_TAsyncOperationProgress_1_Result_
  commentId: Overload:TAssetBundle.TAsyncOperationProgress`1.Result
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperationProgress<ResultType>.Result
  fullName.vb: TAssetBundle.TAsyncOperationProgress(Of ResultType).Result
  nameWithType: TAsyncOperationProgress<ResultType>.Result
  nameWithType.vb: TAsyncOperationProgress(Of ResultType).Result
- uid: TAssetBundle.TAsyncOperation`1
  name: TAsyncOperation<ResultType>
  href: api/TAssetBundle.TAsyncOperation-1.html
  commentId: T:TAssetBundle.TAsyncOperation`1
  name.vb: TAsyncOperation(Of ResultType)
  fullName: TAssetBundle.TAsyncOperation<ResultType>
  fullName.vb: TAssetBundle.TAsyncOperation(Of ResultType)
  nameWithType: TAsyncOperation<ResultType>
  nameWithType.vb: TAsyncOperation(Of ResultType)
- uid: TAssetBundle.TAsyncOperation`1.Clear
  name: Clear()
  href: api/TAssetBundle.TAsyncOperation-1.html#TAssetBundle_TAsyncOperation_1_Clear
  commentId: M:TAssetBundle.TAsyncOperation`1.Clear
  fullName: TAssetBundle.TAsyncOperation<ResultType>.Clear()
  fullName.vb: TAssetBundle.TAsyncOperation(Of ResultType).Clear()
  nameWithType: TAsyncOperation<ResultType>.Clear()
  nameWithType.vb: TAsyncOperation(Of ResultType).Clear()
- uid: TAssetBundle.TAsyncOperation`1.Clear*
  name: Clear
  href: api/TAssetBundle.TAsyncOperation-1.html#TAssetBundle_TAsyncOperation_1_Clear_
  commentId: Overload:TAssetBundle.TAsyncOperation`1.Clear
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperation<ResultType>.Clear
  fullName.vb: TAssetBundle.TAsyncOperation(Of ResultType).Clear
  nameWithType: TAsyncOperation<ResultType>.Clear
  nameWithType.vb: TAsyncOperation(Of ResultType).Clear
- uid: TAssetBundle.TAsyncOperation`1.OnComplete
  name: OnComplete
  href: api/TAssetBundle.TAsyncOperation-1.html#TAssetBundle_TAsyncOperation_1_OnComplete
  commentId: E:TAssetBundle.TAsyncOperation`1.OnComplete
  fullName: TAssetBundle.TAsyncOperation<ResultType>.OnComplete
  fullName.vb: TAssetBundle.TAsyncOperation(Of ResultType).OnComplete
  nameWithType: TAsyncOperation<ResultType>.OnComplete
  nameWithType.vb: TAsyncOperation(Of ResultType).OnComplete
- uid: TAssetBundle.TAsyncOperation`1.Result
  name: Result
  href: api/TAssetBundle.TAsyncOperation-1.html#TAssetBundle_TAsyncOperation_1_Result
  commentId: P:TAssetBundle.TAsyncOperation`1.Result
  fullName: TAssetBundle.TAsyncOperation<ResultType>.Result
  fullName.vb: TAssetBundle.TAsyncOperation(Of ResultType).Result
  nameWithType: TAsyncOperation<ResultType>.Result
  nameWithType.vb: TAsyncOperation(Of ResultType).Result
- uid: TAssetBundle.TAsyncOperation`1.Result*
  name: Result
  href: api/TAssetBundle.TAsyncOperation-1.html#TAssetBundle_TAsyncOperation_1_Result_
  commentId: Overload:TAssetBundle.TAsyncOperation`1.Result
  isSpec: "True"
  fullName: TAssetBundle.TAsyncOperation<ResultType>.Result
  fullName.vb: TAssetBundle.TAsyncOperation(Of ResultType).Result
  nameWithType: TAsyncOperation<ResultType>.Result
  nameWithType.vb: TAsyncOperation(Of ResultType).Result
- uid: TAssetBundle.UnityWebRequestError
  name: UnityWebRequestError
  href: api/TAssetBundle.UnityWebRequestError.html
  commentId: T:TAssetBundle.UnityWebRequestError
  fullName: TAssetBundle.UnityWebRequestError
  nameWithType: UnityWebRequestError
- uid: TAssetBundle.UnityWebRequestError.isHttpError
  name: isHttpError
  href: api/TAssetBundle.UnityWebRequestError.html#TAssetBundle_UnityWebRequestError_isHttpError
  commentId: F:TAssetBundle.UnityWebRequestError.isHttpError
  fullName: TAssetBundle.UnityWebRequestError.isHttpError
  nameWithType: UnityWebRequestError.isHttpError
- uid: TAssetBundle.UnityWebRequestError.isNetworkError
  name: isNetworkError
  href: api/TAssetBundle.UnityWebRequestError.html#TAssetBundle_UnityWebRequestError_isNetworkError
  commentId: F:TAssetBundle.UnityWebRequestError.isNetworkError
  fullName: TAssetBundle.UnityWebRequestError.isNetworkError
  nameWithType: UnityWebRequestError.isNetworkError
- uid: TAssetBundle.UnityWebRequestError.message
  name: message
  href: api/TAssetBundle.UnityWebRequestError.html#TAssetBundle_UnityWebRequestError_message
  commentId: F:TAssetBundle.UnityWebRequestError.message
  fullName: TAssetBundle.UnityWebRequestError.message
  nameWithType: UnityWebRequestError.message
- uid: TAssetBundle.UnityWebRequestError.responseCode
  name: responseCode
  href: api/TAssetBundle.UnityWebRequestError.html#TAssetBundle_UnityWebRequestError_responseCode
  commentId: F:TAssetBundle.UnityWebRequestError.responseCode
  fullName: TAssetBundle.UnityWebRequestError.responseCode
  nameWithType: UnityWebRequestError.responseCode
- uid: TAssetBundle.UnityWebRequestExtensions
  name: UnityWebRequestExtensions
  href: api/TAssetBundle.UnityWebRequestExtensions.html
  commentId: T:TAssetBundle.UnityWebRequestExtensions
  fullName: TAssetBundle.UnityWebRequestExtensions
  nameWithType: UnityWebRequestExtensions
- uid: TAssetBundle.UnityWebRequestExtensions.GetError(UnityEngine.Networking.UnityWebRequest)
  name: GetError(UnityWebRequest)
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_GetError_UnityEngine_Networking_UnityWebRequest_
  commentId: M:TAssetBundle.UnityWebRequestExtensions.GetError(UnityEngine.Networking.UnityWebRequest)
  fullName: TAssetBundle.UnityWebRequestExtensions.GetError(UnityEngine.Networking.UnityWebRequest)
  nameWithType: UnityWebRequestExtensions.GetError(UnityWebRequest)
- uid: TAssetBundle.UnityWebRequestExtensions.GetError*
  name: GetError
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_GetError_
  commentId: Overload:TAssetBundle.UnityWebRequestExtensions.GetError
  isSpec: "True"
  fullName: TAssetBundle.UnityWebRequestExtensions.GetError
  nameWithType: UnityWebRequestExtensions.GetError
- uid: TAssetBundle.UnityWebRequestExtensions.IsHttpError(UnityEngine.Networking.UnityWebRequest)
  name: IsHttpError(UnityWebRequest)
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_IsHttpError_UnityEngine_Networking_UnityWebRequest_
  commentId: M:TAssetBundle.UnityWebRequestExtensions.IsHttpError(UnityEngine.Networking.UnityWebRequest)
  fullName: TAssetBundle.UnityWebRequestExtensions.IsHttpError(UnityEngine.Networking.UnityWebRequest)
  nameWithType: UnityWebRequestExtensions.IsHttpError(UnityWebRequest)
- uid: TAssetBundle.UnityWebRequestExtensions.IsHttpError*
  name: IsHttpError
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_IsHttpError_
  commentId: Overload:TAssetBundle.UnityWebRequestExtensions.IsHttpError
  isSpec: "True"
  fullName: TAssetBundle.UnityWebRequestExtensions.IsHttpError
  nameWithType: UnityWebRequestExtensions.IsHttpError
- uid: TAssetBundle.UnityWebRequestExtensions.IsNetworkError(UnityEngine.Networking.UnityWebRequest)
  name: IsNetworkError(UnityWebRequest)
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_IsNetworkError_UnityEngine_Networking_UnityWebRequest_
  commentId: M:TAssetBundle.UnityWebRequestExtensions.IsNetworkError(UnityEngine.Networking.UnityWebRequest)
  fullName: TAssetBundle.UnityWebRequestExtensions.IsNetworkError(UnityEngine.Networking.UnityWebRequest)
  nameWithType: UnityWebRequestExtensions.IsNetworkError(UnityWebRequest)
- uid: TAssetBundle.UnityWebRequestExtensions.IsNetworkError*
  name: IsNetworkError
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_IsNetworkError_
  commentId: Overload:TAssetBundle.UnityWebRequestExtensions.IsNetworkError
  isSpec: "True"
  fullName: TAssetBundle.UnityWebRequestExtensions.IsNetworkError
  nameWithType: UnityWebRequestExtensions.IsNetworkError
- uid: TAssetBundle.UnityWebRequestExtensions.IsSuccess(UnityEngine.Networking.UnityWebRequest)
  name: IsSuccess(UnityWebRequest)
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_IsSuccess_UnityEngine_Networking_UnityWebRequest_
  commentId: M:TAssetBundle.UnityWebRequestExtensions.IsSuccess(UnityEngine.Networking.UnityWebRequest)
  fullName: TAssetBundle.UnityWebRequestExtensions.IsSuccess(UnityEngine.Networking.UnityWebRequest)
  nameWithType: UnityWebRequestExtensions.IsSuccess(UnityWebRequest)
- uid: TAssetBundle.UnityWebRequestExtensions.IsSuccess*
  name: IsSuccess
  href: api/TAssetBundle.UnityWebRequestExtensions.html#TAssetBundle_UnityWebRequestExtensions_IsSuccess_
  commentId: Overload:TAssetBundle.UnityWebRequestExtensions.IsSuccess
  isSpec: "True"
  fullName: TAssetBundle.UnityWebRequestExtensions.IsSuccess
  nameWithType: UnityWebRequestExtensions.IsSuccess
- uid: TAssetBundle.Util
  name: Util
  href: api/TAssetBundle.Util.html
  commentId: T:TAssetBundle.Util
  fullName: TAssetBundle.Util
  nameWithType: Util
- uid: TAssetBundle.Util.BytesToHexString(System.Byte[])
  name: BytesToHexString(byte[])
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_BytesToHexString_System_Byte___
  commentId: M:TAssetBundle.Util.BytesToHexString(System.Byte[])
  name.vb: BytesToHexString(Byte())
  fullName: TAssetBundle.Util.BytesToHexString(byte[])
  fullName.vb: TAssetBundle.Util.BytesToHexString(Byte())
  nameWithType: Util.BytesToHexString(byte[])
  nameWithType.vb: Util.BytesToHexString(Byte())
- uid: TAssetBundle.Util.BytesToHexString*
  name: BytesToHexString
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_BytesToHexString_
  commentId: Overload:TAssetBundle.Util.BytesToHexString
  isSpec: "True"
  fullName: TAssetBundle.Util.BytesToHexString
  nameWithType: Util.BytesToHexString
- uid: TAssetBundle.Util.ClearCachedAssets
  name: ClearCachedAssets()
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_ClearCachedAssets
  commentId: M:TAssetBundle.Util.ClearCachedAssets
  fullName: TAssetBundle.Util.ClearCachedAssets()
  nameWithType: Util.ClearCachedAssets()
- uid: TAssetBundle.Util.ClearCachedAssets*
  name: ClearCachedAssets
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_ClearCachedAssets_
  commentId: Overload:TAssetBundle.Util.ClearCachedAssets
  isSpec: "True"
  fullName: TAssetBundle.Util.ClearCachedAssets
  nameWithType: Util.ClearCachedAssets
- uid: TAssetBundle.Util.ClearCachedRemoteCatalogs
  name: ClearCachedRemoteCatalogs()
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_ClearCachedRemoteCatalogs
  commentId: M:TAssetBundle.Util.ClearCachedRemoteCatalogs
  fullName: TAssetBundle.Util.ClearCachedRemoteCatalogs()
  nameWithType: Util.ClearCachedRemoteCatalogs()
- uid: TAssetBundle.Util.ClearCachedRemoteCatalogs*
  name: ClearCachedRemoteCatalogs
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_ClearCachedRemoteCatalogs_
  commentId: Overload:TAssetBundle.Util.ClearCachedRemoteCatalogs
  isSpec: "True"
  fullName: TAssetBundle.Util.ClearCachedRemoteCatalogs
  nameWithType: Util.ClearCachedRemoteCatalogs
- uid: TAssetBundle.Util.Compress(System.Byte[])
  name: Compress(byte[])
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_Compress_System_Byte___
  commentId: M:TAssetBundle.Util.Compress(System.Byte[])
  name.vb: Compress(Byte())
  fullName: TAssetBundle.Util.Compress(byte[])
  fullName.vb: TAssetBundle.Util.Compress(Byte())
  nameWithType: Util.Compress(byte[])
  nameWithType.vb: Util.Compress(Byte())
- uid: TAssetBundle.Util.Compress*
  name: Compress
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_Compress_
  commentId: Overload:TAssetBundle.Util.Compress
  isSpec: "True"
  fullName: TAssetBundle.Util.Compress
  nameWithType: Util.Compress
- uid: TAssetBundle.Util.CreateDirectoryFromFilePath(System.String)
  name: CreateDirectoryFromFilePath(string)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_CreateDirectoryFromFilePath_System_String_
  commentId: M:TAssetBundle.Util.CreateDirectoryFromFilePath(System.String)
  name.vb: CreateDirectoryFromFilePath(String)
  fullName: TAssetBundle.Util.CreateDirectoryFromFilePath(string)
  fullName.vb: TAssetBundle.Util.CreateDirectoryFromFilePath(String)
  nameWithType: Util.CreateDirectoryFromFilePath(string)
  nameWithType.vb: Util.CreateDirectoryFromFilePath(String)
- uid: TAssetBundle.Util.CreateDirectoryFromFilePath*
  name: CreateDirectoryFromFilePath
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_CreateDirectoryFromFilePath_
  commentId: Overload:TAssetBundle.Util.CreateDirectoryFromFilePath
  isSpec: "True"
  fullName: TAssetBundle.Util.CreateDirectoryFromFilePath
  nameWithType: Util.CreateDirectoryFromFilePath
- uid: TAssetBundle.Util.Decompress(System.Byte[])
  name: Decompress(byte[])
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_Decompress_System_Byte___
  commentId: M:TAssetBundle.Util.Decompress(System.Byte[])
  name.vb: Decompress(Byte())
  fullName: TAssetBundle.Util.Decompress(byte[])
  fullName.vb: TAssetBundle.Util.Decompress(Byte())
  nameWithType: Util.Decompress(byte[])
  nameWithType.vb: Util.Decompress(Byte())
- uid: TAssetBundle.Util.Decompress*
  name: Decompress
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_Decompress_
  commentId: Overload:TAssetBundle.Util.Decompress
  isSpec: "True"
  fullName: TAssetBundle.Util.Decompress
  nameWithType: Util.Decompress
- uid: TAssetBundle.Util.DecryptRijndael(System.Byte[],System.Byte[],System.Byte[])
  name: DecryptRijndael(byte[], byte[], byte[])
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_DecryptRijndael_System_Byte___System_Byte___System_Byte___
  commentId: M:TAssetBundle.Util.DecryptRijndael(System.Byte[],System.Byte[],System.Byte[])
  name.vb: DecryptRijndael(Byte(), Byte(), Byte())
  fullName: TAssetBundle.Util.DecryptRijndael(byte[], byte[], byte[])
  fullName.vb: TAssetBundle.Util.DecryptRijndael(Byte(), Byte(), Byte())
  nameWithType: Util.DecryptRijndael(byte[], byte[], byte[])
  nameWithType.vb: Util.DecryptRijndael(Byte(), Byte(), Byte())
- uid: TAssetBundle.Util.DecryptRijndael*
  name: DecryptRijndael
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_DecryptRijndael_
  commentId: Overload:TAssetBundle.Util.DecryptRijndael
  isSpec: "True"
  fullName: TAssetBundle.Util.DecryptRijndael
  nameWithType: Util.DecryptRijndael
- uid: TAssetBundle.Util.EncryptRijndael(System.Byte[],System.Byte[],System.Byte[])
  name: EncryptRijndael(byte[], byte[], byte[])
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_EncryptRijndael_System_Byte___System_Byte___System_Byte___
  commentId: M:TAssetBundle.Util.EncryptRijndael(System.Byte[],System.Byte[],System.Byte[])
  name.vb: EncryptRijndael(Byte(), Byte(), Byte())
  fullName: TAssetBundle.Util.EncryptRijndael(byte[], byte[], byte[])
  fullName.vb: TAssetBundle.Util.EncryptRijndael(Byte(), Byte(), Byte())
  nameWithType: Util.EncryptRijndael(byte[], byte[], byte[])
  nameWithType.vb: Util.EncryptRijndael(Byte(), Byte(), Byte())
- uid: TAssetBundle.Util.EncryptRijndael*
  name: EncryptRijndael
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_EncryptRijndael_
  commentId: Overload:TAssetBundle.Util.EncryptRijndael
  isSpec: "True"
  fullName: TAssetBundle.Util.EncryptRijndael
  nameWithType: Util.EncryptRijndael
- uid: TAssetBundle.Util.GetAssetBundleName(System.String,System.String)
  name: GetAssetBundleName(string, string)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetAssetBundleName_System_String_System_String_
  commentId: M:TAssetBundle.Util.GetAssetBundleName(System.String,System.String)
  name.vb: GetAssetBundleName(String, String)
  fullName: TAssetBundle.Util.GetAssetBundleName(string, string)
  fullName.vb: TAssetBundle.Util.GetAssetBundleName(String, String)
  nameWithType: Util.GetAssetBundleName(string, string)
  nameWithType.vb: Util.GetAssetBundleName(String, String)
- uid: TAssetBundle.Util.GetAssetBundleName(System.String,System.String,System.Boolean)
  name: GetAssetBundleName(string, string, bool)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetAssetBundleName_System_String_System_String_System_Boolean_
  commentId: M:TAssetBundle.Util.GetAssetBundleName(System.String,System.String,System.Boolean)
  name.vb: GetAssetBundleName(String, String, Boolean)
  fullName: TAssetBundle.Util.GetAssetBundleName(string, string, bool)
  fullName.vb: TAssetBundle.Util.GetAssetBundleName(String, String, Boolean)
  nameWithType: Util.GetAssetBundleName(string, string, bool)
  nameWithType.vb: Util.GetAssetBundleName(String, String, Boolean)
- uid: TAssetBundle.Util.GetAssetBundleName*
  name: GetAssetBundleName
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetAssetBundleName_
  commentId: Overload:TAssetBundle.Util.GetAssetBundleName
  isSpec: "True"
  fullName: TAssetBundle.Util.GetAssetBundleName
  nameWithType: Util.GetAssetBundleName
- uid: TAssetBundle.Util.GetDataPath(System.String)
  name: GetDataPath(string)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetDataPath_System_String_
  commentId: M:TAssetBundle.Util.GetDataPath(System.String)
  name.vb: GetDataPath(String)
  fullName: TAssetBundle.Util.GetDataPath(string)
  fullName.vb: TAssetBundle.Util.GetDataPath(String)
  nameWithType: Util.GetDataPath(string)
  nameWithType.vb: Util.GetDataPath(String)
- uid: TAssetBundle.Util.GetDataPath*
  name: GetDataPath
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetDataPath_
  commentId: Overload:TAssetBundle.Util.GetDataPath
  isSpec: "True"
  fullName: TAssetBundle.Util.GetDataPath
  nameWithType: Util.GetDataPath
- uid: TAssetBundle.Util.GetMD5Hash(System.Byte[])
  name: GetMD5Hash(byte[])
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetMD5Hash_System_Byte___
  commentId: M:TAssetBundle.Util.GetMD5Hash(System.Byte[])
  name.vb: GetMD5Hash(Byte())
  fullName: TAssetBundle.Util.GetMD5Hash(byte[])
  fullName.vb: TAssetBundle.Util.GetMD5Hash(Byte())
  nameWithType: Util.GetMD5Hash(byte[])
  nameWithType.vb: Util.GetMD5Hash(Byte())
- uid: TAssetBundle.Util.GetMD5Hash*
  name: GetMD5Hash
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetMD5Hash_
  commentId: Overload:TAssetBundle.Util.GetMD5Hash
  isSpec: "True"
  fullName: TAssetBundle.Util.GetMD5Hash
  nameWithType: Util.GetMD5Hash
- uid: TAssetBundle.Util.GetMD5HashFromFile(System.String)
  name: GetMD5HashFromFile(string)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetMD5HashFromFile_System_String_
  commentId: M:TAssetBundle.Util.GetMD5HashFromFile(System.String)
  name.vb: GetMD5HashFromFile(String)
  fullName: TAssetBundle.Util.GetMD5HashFromFile(string)
  fullName.vb: TAssetBundle.Util.GetMD5HashFromFile(String)
  nameWithType: Util.GetMD5HashFromFile(string)
  nameWithType.vb: Util.GetMD5HashFromFile(String)
- uid: TAssetBundle.Util.GetMD5HashFromFile*
  name: GetMD5HashFromFile
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetMD5HashFromFile_
  commentId: Overload:TAssetBundle.Util.GetMD5HashFromFile
  isSpec: "True"
  fullName: TAssetBundle.Util.GetMD5HashFromFile
  nameWithType: Util.GetMD5HashFromFile
- uid: TAssetBundle.Util.GetMD5HashFromString(System.String)
  name: GetMD5HashFromString(string)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetMD5HashFromString_System_String_
  commentId: M:TAssetBundle.Util.GetMD5HashFromString(System.String)
  name.vb: GetMD5HashFromString(String)
  fullName: TAssetBundle.Util.GetMD5HashFromString(string)
  fullName.vb: TAssetBundle.Util.GetMD5HashFromString(String)
  nameWithType: Util.GetMD5HashFromString(string)
  nameWithType.vb: Util.GetMD5HashFromString(String)
- uid: TAssetBundle.Util.GetMD5HashFromString*
  name: GetMD5HashFromString
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetMD5HashFromString_
  commentId: Overload:TAssetBundle.Util.GetMD5HashFromString
  isSpec: "True"
  fullName: TAssetBundle.Util.GetMD5HashFromString
  nameWithType: Util.GetMD5HashFromString
- uid: TAssetBundle.Util.GetSHA256HashFromString(System.String)
  name: GetSHA256HashFromString(string)
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetSHA256HashFromString_System_String_
  commentId: M:TAssetBundle.Util.GetSHA256HashFromString(System.String)
  name.vb: GetSHA256HashFromString(String)
  fullName: TAssetBundle.Util.GetSHA256HashFromString(string)
  fullName.vb: TAssetBundle.Util.GetSHA256HashFromString(String)
  nameWithType: Util.GetSHA256HashFromString(string)
  nameWithType.vb: Util.GetSHA256HashFromString(String)
- uid: TAssetBundle.Util.GetSHA256HashFromString*
  name: GetSHA256HashFromString
  href: api/TAssetBundle.Util.html#TAssetBundle_Util_GetSHA256HashFromString_
  commentId: Overload:TAssetBundle.Util.GetSHA256HashFromString
  isSpec: "True"
  fullName: TAssetBundle.Util.GetSHA256HashFromString
  nameWithType: Util.GetSHA256HashFromString
- uid: TAssetBundle.WebRequestAsync
  name: WebRequestAsync
  href: api/TAssetBundle.WebRequestAsync.html
  commentId: T:TAssetBundle.WebRequestAsync
  fullName: TAssetBundle.WebRequestAsync
  nameWithType: WebRequestAsync
- uid: TAssetBundle.WebRequestAsync.#ctor(TAssetBundle.WebRequestCommand,System.Action{TAssetBundle.WebRequestCommand})
  name: WebRequestAsync(WebRequestCommand, Action<WebRequestCommand>)
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync__ctor_TAssetBundle_WebRequestCommand_System_Action_TAssetBundle_WebRequestCommand__
  commentId: M:TAssetBundle.WebRequestAsync.#ctor(TAssetBundle.WebRequestCommand,System.Action{TAssetBundle.WebRequestCommand})
  name.vb: New(WebRequestCommand, Action(Of WebRequestCommand))
  fullName: TAssetBundle.WebRequestAsync.WebRequestAsync(TAssetBundle.WebRequestCommand, System.Action<TAssetBundle.WebRequestCommand>)
  fullName.vb: TAssetBundle.WebRequestAsync.New(TAssetBundle.WebRequestCommand, System.Action(Of TAssetBundle.WebRequestCommand))
  nameWithType: WebRequestAsync.WebRequestAsync(WebRequestCommand, Action<WebRequestCommand>)
  nameWithType.vb: WebRequestAsync.New(WebRequestCommand, Action(Of WebRequestCommand))
- uid: TAssetBundle.WebRequestAsync.#ctor*
  name: WebRequestAsync
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync__ctor_
  commentId: Overload:TAssetBundle.WebRequestAsync.#ctor
  isSpec: "True"
  name.vb: New
  fullName: TAssetBundle.WebRequestAsync.WebRequestAsync
  fullName.vb: TAssetBundle.WebRequestAsync.New
  nameWithType: WebRequestAsync.WebRequestAsync
  nameWithType.vb: WebRequestAsync.New
- uid: TAssetBundle.WebRequestAsync.Command
  name: Command
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Command
  commentId: P:TAssetBundle.WebRequestAsync.Command
  fullName: TAssetBundle.WebRequestAsync.Command
  nameWithType: WebRequestAsync.Command
- uid: TAssetBundle.WebRequestAsync.Command*
  name: Command
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Command_
  commentId: Overload:TAssetBundle.WebRequestAsync.Command
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.Command
  nameWithType: WebRequestAsync.Command
- uid: TAssetBundle.WebRequestAsync.Current
  name: Current
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Current
  commentId: P:TAssetBundle.WebRequestAsync.Current
  fullName: TAssetBundle.WebRequestAsync.Current
  nameWithType: WebRequestAsync.Current
- uid: TAssetBundle.WebRequestAsync.Current*
  name: Current
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Current_
  commentId: Overload:TAssetBundle.WebRequestAsync.Current
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.Current
  nameWithType: WebRequestAsync.Current
- uid: TAssetBundle.WebRequestAsync.IsDone
  name: IsDone
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_IsDone
  commentId: P:TAssetBundle.WebRequestAsync.IsDone
  fullName: TAssetBundle.WebRequestAsync.IsDone
  nameWithType: WebRequestAsync.IsDone
- uid: TAssetBundle.WebRequestAsync.IsDone*
  name: IsDone
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_IsDone_
  commentId: Overload:TAssetBundle.WebRequestAsync.IsDone
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.IsDone
  nameWithType: WebRequestAsync.IsDone
- uid: TAssetBundle.WebRequestAsync.IsProgress
  name: IsProgress
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_IsProgress
  commentId: P:TAssetBundle.WebRequestAsync.IsProgress
  fullName: TAssetBundle.WebRequestAsync.IsProgress
  nameWithType: WebRequestAsync.IsProgress
- uid: TAssetBundle.WebRequestAsync.IsProgress*
  name: IsProgress
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_IsProgress_
  commentId: Overload:TAssetBundle.WebRequestAsync.IsProgress
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.IsProgress
  nameWithType: WebRequestAsync.IsProgress
- uid: TAssetBundle.WebRequestAsync.MoveNext
  name: MoveNext()
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_MoveNext
  commentId: M:TAssetBundle.WebRequestAsync.MoveNext
  fullName: TAssetBundle.WebRequestAsync.MoveNext()
  nameWithType: WebRequestAsync.MoveNext()
- uid: TAssetBundle.WebRequestAsync.MoveNext*
  name: MoveNext
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_MoveNext_
  commentId: Overload:TAssetBundle.WebRequestAsync.MoveNext
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.MoveNext
  nameWithType: WebRequestAsync.MoveNext
- uid: TAssetBundle.WebRequestAsync.OnComplete
  name: OnComplete
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_OnComplete
  commentId: E:TAssetBundle.WebRequestAsync.OnComplete
  fullName: TAssetBundle.WebRequestAsync.OnComplete
  nameWithType: WebRequestAsync.OnComplete
- uid: TAssetBundle.WebRequestAsync.Request
  name: Request
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Request
  commentId: P:TAssetBundle.WebRequestAsync.Request
  fullName: TAssetBundle.WebRequestAsync.Request
  nameWithType: WebRequestAsync.Request
- uid: TAssetBundle.WebRequestAsync.Request*
  name: Request
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Request_
  commentId: Overload:TAssetBundle.WebRequestAsync.Request
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.Request
  nameWithType: WebRequestAsync.Request
- uid: TAssetBundle.WebRequestAsync.Reset
  name: Reset()
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Reset
  commentId: M:TAssetBundle.WebRequestAsync.Reset
  fullName: TAssetBundle.WebRequestAsync.Reset()
  nameWithType: WebRequestAsync.Reset()
- uid: TAssetBundle.WebRequestAsync.Reset*
  name: Reset
  href: api/TAssetBundle.WebRequestAsync.html#TAssetBundle_WebRequestAsync_Reset_
  commentId: Overload:TAssetBundle.WebRequestAsync.Reset
  isSpec: "True"
  fullName: TAssetBundle.WebRequestAsync.Reset
  nameWithType: WebRequestAsync.Reset
- uid: TAssetBundle.WebRequestCallback
  name: WebRequestCallback
  href: api/TAssetBundle.WebRequestCallback.html
  commentId: T:TAssetBundle.WebRequestCallback
  fullName: TAssetBundle.WebRequestCallback
  nameWithType: WebRequestCallback
- uid: TAssetBundle.WebRequestCommand
  name: WebRequestCommand
  href: api/TAssetBundle.WebRequestCommand.html
  commentId: T:TAssetBundle.WebRequestCommand
  fullName: TAssetBundle.WebRequestCommand
  nameWithType: WebRequestCommand
- uid: TAssetBundle.WebRequestCommand.LastDownloadTime
  name: LastDownloadTime
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_LastDownloadTime
  commentId: P:TAssetBundle.WebRequestCommand.LastDownloadTime
  fullName: TAssetBundle.WebRequestCommand.LastDownloadTime
  nameWithType: WebRequestCommand.LastDownloadTime
- uid: TAssetBundle.WebRequestCommand.LastDownloadTime*
  name: LastDownloadTime
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_LastDownloadTime_
  commentId: Overload:TAssetBundle.WebRequestCommand.LastDownloadTime
  isSpec: "True"
  fullName: TAssetBundle.WebRequestCommand.LastDownloadTime
  nameWithType: WebRequestCommand.LastDownloadTime
- uid: TAssetBundle.WebRequestCommand.OnRetry
  name: OnRetry
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_OnRetry
  commentId: F:TAssetBundle.WebRequestCommand.OnRetry
  fullName: TAssetBundle.WebRequestCommand.OnRetry
  nameWithType: WebRequestCommand.OnRetry
- uid: TAssetBundle.WebRequestCommand.OnStart
  name: OnStart
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_OnStart
  commentId: F:TAssetBundle.WebRequestCommand.OnStart
  fullName: TAssetBundle.WebRequestCommand.OnStart
  nameWithType: WebRequestCommand.OnStart
- uid: TAssetBundle.WebRequestCommand.Url
  name: Url
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_Url
  commentId: P:TAssetBundle.WebRequestCommand.Url
  fullName: TAssetBundle.WebRequestCommand.Url
  nameWithType: WebRequestCommand.Url
- uid: TAssetBundle.WebRequestCommand.Url*
  name: Url
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_Url_
  commentId: Overload:TAssetBundle.WebRequestCommand.Url
  isSpec: "True"
  fullName: TAssetBundle.WebRequestCommand.Url
  nameWithType: WebRequestCommand.Url
- uid: TAssetBundle.WebRequestCommand._url
  name: _url
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand__url
  commentId: F:TAssetBundle.WebRequestCommand._url
  fullName: TAssetBundle.WebRequestCommand._url
  nameWithType: WebRequestCommand._url
- uid: TAssetBundle.WebRequestCommand.onComplete
  name: onComplete
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_onComplete
  commentId: F:TAssetBundle.WebRequestCommand.onComplete
  fullName: TAssetBundle.WebRequestCommand.onComplete
  nameWithType: WebRequestCommand.onComplete
- uid: TAssetBundle.WebRequestCommand.onProgress
  name: onProgress
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_onProgress
  commentId: F:TAssetBundle.WebRequestCommand.onProgress
  fullName: TAssetBundle.WebRequestCommand.onProgress
  nameWithType: WebRequestCommand.onProgress
- uid: TAssetBundle.WebRequestCommand.retryCount
  name: retryCount
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_retryCount
  commentId: F:TAssetBundle.WebRequestCommand.retryCount
  fullName: TAssetBundle.WebRequestCommand.retryCount
  nameWithType: WebRequestCommand.retryCount
- uid: TAssetBundle.WebRequestCommand.useRetry
  name: useRetry
  href: api/TAssetBundle.WebRequestCommand.html#TAssetBundle_WebRequestCommand_useRetry
  commentId: F:TAssetBundle.WebRequestCommand.useRetry
  fullName: TAssetBundle.WebRequestCommand.useRetry
  nameWithType: WebRequestCommand.useRetry
- uid: TAssetBundle.WebRequestCommandAssetBundle
  name: WebRequestCommandAssetBundle
  href: api/TAssetBundle.WebRequestCommandAssetBundle.html
  commentId: T:TAssetBundle.WebRequestCommandAssetBundle
  fullName: TAssetBundle.WebRequestCommandAssetBundle
  nameWithType: WebRequestCommandAssetBundle
- uid: TAssetBundle.WebRequestCommandGet
  name: WebRequestCommandGet
  href: api/TAssetBundle.WebRequestCommandGet.html
  commentId: T:TAssetBundle.WebRequestCommandGet
  fullName: TAssetBundle.WebRequestCommandGet
  nameWithType: WebRequestCommandGet
- uid: TAssetBundle.WebRequestCommandHead
  name: WebRequestCommandHead
  href: api/TAssetBundle.WebRequestCommandHead.html
  commentId: T:TAssetBundle.WebRequestCommandHead
  fullName: TAssetBundle.WebRequestCommandHead
  nameWithType: WebRequestCommandHead
